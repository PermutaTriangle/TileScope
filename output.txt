doing level 1
Doing depth 1
on the tiling:
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+
| |
+-+

+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
----------------------
I'm using one by one on the tiling:
+-+
| |
+-+

doing level 2
Doing depth 2
on the tiling:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: Av(Perm((1, 2, 0)))
3: point
----------------------
on the tiling:
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((1, 2, 0)))
3: point
----------------------
doing level 3
Doing depth 3
on the tiling:
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (2, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 4); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|3| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|1| |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 4); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (4, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|3| |3| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+-+
| | |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|3| |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (2, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|2| |3| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+-+
|2| |2| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (4, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| | |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: Av(Perm((1, 2, 0)))
3: point
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|3| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((1, 2, 0)))
3: point
----------------------
on the tiling:
+-+-+-+-+
|1| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|1| |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (1, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|3| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |2|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: Av(Perm((1, 2, 0)))
3: point
----------------------
on the tiling:
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (3, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((1, 2, 0)))
3: point
----------------------
on the tiling:
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |3|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
----------------------
on the tiling:
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
with the following siblings:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
we get the following strategy
the components of tiling
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+
|1|
+-+
1: point
----------------------
I'm using one by one on the tiling:
+-+
|1|
+-+
1: point
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 1 points and 2 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 1 points and 2 non-points>}), frozenset())
the tilings in this set are
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
our guess is:
{frozenset({<A tiling of 1 points and 2 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 1 points and 2 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 1 points and 2 non-points>})}
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 1 points and 2 non-points>})}
on the tiling:
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
we get the following strategy
We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
we get the following strategy
We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 2, 0))).
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
----------------------
on the tiling:
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
with the following siblings:
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
we get the following strategy
the components of tiling
+-+
|1|
+-+
1: point
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
----------------------
I'm using one by one on the tiling:
+-+
|1|
+-+
1: point
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset()}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset(), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))
{frozenset({<A tiling of 0 points and 1 non-points>})}
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 1 points and 2 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 1 points and 2 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
our guess is:
{frozenset({<A tiling of 1 points and 2 non-points>, <A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 1 points and 2 non-points>, <A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 1 points and 2 non-points>, <A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 1 points and 2 non-points>, <A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
set()
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
set()
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)))
3: Av(Perm((1, 2, 0)))
set()
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0))).
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+-+
| |1|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point
{frozenset({<A tiling of 0 points and 1 non-points>})}
set()
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
AND node propagation
the components of tiling
we're attempting to combine on an and_node
[{frozenset({<A tiling of 0 points and 1 non-points>})}, {frozenset()}]
(frozenset({<A tiling of 0 points and 1 non-points>}), frozenset())
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
set()
set()
set()
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
set()
set()
set()
