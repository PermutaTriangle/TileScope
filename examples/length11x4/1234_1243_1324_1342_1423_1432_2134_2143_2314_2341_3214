
Finding the proof tree for Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3))) took 1406 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           └─────11
                  │                 ├─────12
                  │                 └─────13
                  └─────14
                        ├─────15
                        │     ├─────16
                        │     └─────17
                        └─────18
                              ├─────19
                              └─────20

Label: 0

+-+
|X|
+-+


Label: 1

+-+
| |
+-+


Label: 2

+-+-+-+
| |o| |
+-+-+-+
|1| |X|
+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0))))


Label: 3

+-+-+
|o| |
+-+-+
| |X|
+-+-+


Label: 4

+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
|1| |2| |X|
+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))
2: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))


Label: 5

+-+-+-+-+
| | |o| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |o| | |
+-+-+-+-+
|1| | |X|
+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))


Label: 6

+-+-+-+-+
| | |o| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
|1| | |X|
+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))


Label: 7

+-+-+-+
| |o| |
+-+-+-+
|o| | |
+-+-+-+
| | |X|
+-+-+-+


Label: 8

+-+-+-+
| | |o|
+-+-+-+
| |o| |
+-+-+-+
|o| | |
+-+-+-+


Label: 9

+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | |1| |X|
+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))


Label: 10

+-+-+-+-+
| |o| | |
+-+-+-+-+
| | | |o|
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))


Label: 11

+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | |o| | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| | |1| |2| |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))
2: perm set of all perms avoiding Basis((Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0))))


Label: 12

+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | |o| | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| | | | |2| |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))
2: perm set of all perms avoiding Basis((Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0))))


Label: 13

+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | |o| | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| | |o| | | | |
+-+-+-+-+-+-+-+
| | | | |1| |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))


Label: 14

+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| |1| | |X|
+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))


Label: 15

+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| |1| | |X|
+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))


Label: 16

+-+-+-+-+
| | |o| |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| |o| | |
+-+-+-+-+
| | | |X|
+-+-+-+-+


Label: 17

+-+-+-+-+
| | | |o|
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |o| | |
+-+-+-+-+


Label: 18

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
| | | |1| |X|
+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))


Label: 19

+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
| | | | |X|
+-+-+-+-+-+


Label: 20

+-+-+-+-+-+-+-+
| | |o| | | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | |o| | |
+-+-+-+-+-+-+-+
| | | |1| | |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))


Here are the recursions

-----------------

TILING:
+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | |o| | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| | | | |2| |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))
2: perm set of all perms avoiding Basis((Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0))))

Tiling recursively verified with cells [(4, 5), (5, 4), (5, 6)]

Recursively verified by:
+-+-+-+
| |o| |
+-+-+-+
|1| |X|
+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0))))

-----------------

TILING:
+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | |o| | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| | |o| | | | |
+-+-+-+-+-+-+-+
| | | | |1| |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))

Tiling recursively verified with cells [(1, 3), (3, 5), (4, 2), (5, 4), (5, 6)]

Recursively verified by:
+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | |1| |X|
+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((1, 0)), Perm((0, 1, 2))))

-----------------

TILING:
+-+-+-+-+-+-+-+
| | |o| | | | |
+-+-+-+-+-+-+-+
|o| | | | | | |
+-+-+-+-+-+-+-+
| | | | | |o| |
+-+-+-+-+-+-+-+
| |o| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | |o| | |
+-+-+-+-+-+-+-+
| | | |1| | |X|
+-+-+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))

Tiling recursively verified with cells [(2, 5), (3, 1), (4, 6), (5, 4), (6, 3), (6, 6)]

Recursively verified by:
+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| |1| | |X|
+-+-+-+-+-+
1: perm set of all perms avoiding Basis((Perm((0, 1)), Perm((1, 0))))


--------------------- END RECURSIONS

Computer readable (JSON):

{
    "root": {
        "children": [
            {
                "children": [],
                "formal_step": "Tiling now self verified",
                "label": null,
                "tiling": {},
                "verified_by": []
            },
            {
                "children": [
                    {
                        "children": [],
                        "formal_step": "Tiling now self verified",
                        "label": null,
                        "tiling": {
                            "(0, 0)": "Block.point",
                            "(1, 1)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                        },
                        "verified_by": []
                    },
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "formal_step": "Tiling now self verified",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 1)": "Block.point",
                                                    "(1, 0)": "Block.point",
                                                    "(2, 2)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                },
                                                "verified_by": []
                                            },
                                            {
                                                "children": [],
                                                "formal_step": "Tiling now self verified",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 2)": "Block.point",
                                                    "(1, 1)": "Block.point",
                                                    "(2, 0)": "Block.point"
                                                },
                                                "verified_by": []
                                            }
                                        ],
                                        "formal_step": "Inserting the unique point in to the cell (2, 0)",
                                        "label": null,
                                        "tiling": {
                                            "(0, 2)": "Block.point",
                                            "(1, 1)": "Block.point",
                                            "(2, 0)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                            "(2, 3)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                        },
                                        "verified_by": []
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "formal_step": "Tiling now self verified",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 1)": "Block.point",
                                                    "(1, 3)": "Block.point",
                                                    "(2, 0)": "Block.point",
                                                    "(3, 2)": "Av(Perm((1, 0)), Perm((0, 1, 2)))"
                                                },
                                                "verified_by": []
                                            },
                                            {
                                                "children": [
                                                    {
                                                        "children": [],
                                                        "formal_step": "Tiling recursively verified with cells [(4, 5), (5, 4), (5, 6)]",
                                                        "label": null,
                                                        "tiling": {
                                                            "(0, 1)": "Block.point",
                                                            "(1, 3)": "Block.point",
                                                            "(2, 0)": "Block.point",
                                                            "(3, 2)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                            "(4, 5)": "Block.point",
                                                            "(5, 4)": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0)))",
                                                            "(5, 6)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                        },
                                                        "verified_by": [
                                                            {
                                                                "(0, 1)": "Block.point",
                                                                "(1, 0)": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0)))",
                                                                "(1, 2)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "children": [],
                                                        "formal_step": "Tiling recursively verified with cells [(1, 3), (3, 5), (4, 2), (5, 4), (5, 6)]",
                                                        "label": null,
                                                        "tiling": {
                                                            "(0, 1)": "Block.point",
                                                            "(1, 3)": "Block.point",
                                                            "(2, 0)": "Block.point",
                                                            "(3, 5)": "Block.point",
                                                            "(4, 2)": "Block.point",
                                                            "(5, 4)": "Av(Perm((1, 0)), Perm((0, 1, 2)))",
                                                            "(5, 6)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                        },
                                                        "verified_by": [
                                                            {
                                                                "(0, 1)": "Block.point",
                                                                "(1, 3)": "Block.point",
                                                                "(2, 0)": "Block.point",
                                                                "(3, 2)": "Av(Perm((1, 0)), Perm((0, 1, 2)))",
                                                                "(3, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "formal_step": "Inserting the unique point in to the cell (5, 2)",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 1)": "Block.point",
                                                    "(1, 3)": "Block.point",
                                                    "(2, 0)": "Block.point",
                                                    "(3, 2)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                    "(4, 5)": "Block.point",
                                                    "(5, 2)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                    "(5, 4)": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0)))",
                                                    "(5, 6)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                },
                                                "verified_by": []
                                            }
                                        ],
                                        "formal_step": "Inserting the top most point in to the cell (3, 4)",
                                        "label": null,
                                        "tiling": {
                                            "(0, 1)": "Block.point",
                                            "(1, 3)": "Block.point",
                                            "(2, 0)": "Block.point",
                                            "(3, 2)": "Av(Perm((1, 0)), Perm((0, 1, 2)))",
                                            "(3, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                        },
                                        "verified_by": []
                                    }
                                ],
                                "formal_step": "Inserting the unique point in to the cell (1, 3)",
                                "label": null,
                                "tiling": {
                                    "(0, 2)": "Block.point",
                                    "(1, 3)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                    "(2, 1)": "Block.point",
                                    "(3, 0)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                    "(3, 3)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                },
                                "verified_by": []
                            },
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "formal_step": "Tiling now self verified",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 2)": "Block.point",
                                                    "(1, 0)": "Block.point",
                                                    "(2, 1)": "Block.point",
                                                    "(3, 3)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                },
                                                "verified_by": []
                                            },
                                            {
                                                "children": [],
                                                "formal_step": "Tiling now self verified",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 3)": "Block.point",
                                                    "(1, 0)": "Block.point",
                                                    "(2, 2)": "Block.point",
                                                    "(3, 1)": "Block.point"
                                                },
                                                "verified_by": []
                                            }
                                        ],
                                        "formal_step": "Inserting the unique point in to the cell (3, 1)",
                                        "label": null,
                                        "tiling": {
                                            "(0, 3)": "Block.point",
                                            "(1, 0)": "Block.point",
                                            "(2, 2)": "Block.point",
                                            "(3, 1)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                            "(3, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                        },
                                        "verified_by": []
                                    },
                                    {
                                        "children": [
                                            {
                                                "children": [],
                                                "formal_step": "Tiling now self verified",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 2)": "Block.point",
                                                    "(1, 0)": "Block.point",
                                                    "(2, 3)": "Block.point",
                                                    "(3, 1)": "Block.point",
                                                    "(4, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                },
                                                "verified_by": []
                                            },
                                            {
                                                "children": [],
                                                "formal_step": "Tiling recursively verified with cells [(2, 5), (3, 1), (4, 6), (5, 4), (6, 3), (6, 6)]",
                                                "label": null,
                                                "tiling": {
                                                    "(0, 2)": "Block.point",
                                                    "(1, 0)": "Block.point",
                                                    "(2, 5)": "Block.point",
                                                    "(3, 1)": "Block.point",
                                                    "(4, 6)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                    "(5, 4)": "Block.point",
                                                    "(6, 3)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                    "(6, 6)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                },
                                                "verified_by": [
                                                    {
                                                        "(0, 3)": "Block.point",
                                                        "(1, 0)": "Block.point",
                                                        "(2, 4)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                        "(3, 2)": "Block.point",
                                                        "(4, 1)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                                        "(4, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                                    }
                                                ]
                                            }
                                        ],
                                        "formal_step": "Inserting the top most point in to the cell (4, 3)",
                                        "label": null,
                                        "tiling": {
                                            "(0, 2)": "Block.point",
                                            "(1, 0)": "Block.point",
                                            "(2, 4)": "Block.point",
                                            "(3, 1)": "Block.point",
                                            "(4, 3)": "Av(Perm((1, 0)), Perm((0, 1, 2)))",
                                            "(4, 5)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                        },
                                        "verified_by": []
                                    }
                                ],
                                "formal_step": "Inserting the unique point in to the cell (2, 4)",
                                "label": null,
                                "tiling": {
                                    "(0, 3)": "Block.point",
                                    "(1, 0)": "Block.point",
                                    "(2, 4)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                    "(3, 2)": "Block.point",
                                    "(4, 1)": "Av(Perm((0, 1)), Perm((1, 0)))",
                                    "(4, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                                },
                                "verified_by": []
                            }
                        ],
                        "formal_step": "Inserting the top most point in to the cell (3, 2)",
                        "label": null,
                        "tiling": {
                            "(0, 3)": "Block.point",
                            "(1, 4)": "Av(Perm((0, 1)), Perm((1, 0)))",
                            "(2, 1)": "Block.point",
                            "(3, 0)": "Av(Perm((0, 1)), Perm((1, 0)))",
                            "(3, 2)": "Av(Perm((1, 0)), Perm((0, 1, 2)))",
                            "(3, 4)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                        },
                        "verified_by": []
                    }
                ],
                "formal_step": "Inserting the top most point in to the cell (1, 0)",
                "label": null,
                "tiling": {
                    "(0, 1)": "Block.point",
                    "(1, 0)": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 1, 0)))",
                    "(1, 2)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
                },
                "verified_by": []
            }
        ],
        "formal_step": "Inserting the top most point in to the cell (0, 0)",
        "label": null,
        "tiling": {
            "(0, 0)": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 0, 3)))"
        },
        "verified_by": []
    }
}
