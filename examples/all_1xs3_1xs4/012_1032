
Finding the proof tree for Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2))) took 18 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  ├─────6
                  └─────7

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))
2: point

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))
3: point

Label: 5

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))
3: point

Label: 6

+-+
|1|
+-+
1: point

Label: 7

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Computer readable (JSON):

{
    "root": {
        "children": [
            {
                "children": [],
                "formal_step": "Verified because it is a one by one tiling with a subclass",
                "in_tiling": {},
                "out_tiling": {},
                "tilings": [
                    {}
                ]
            },
            {
                "children": [
                    {
                        "children": [],
                        "formal_step": "The tiling is a subset of the subclass",
                        "in_tiling": {
                            "[0, 1]": "point",
                            "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                        },
                        "out_tiling": {
                            "[0, 1]": "point",
                            "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                        },
                        "tilings": [
                            {
                                "[0, 1]": "point",
                                "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                            }
                        ]
                    },
                    {
                        "children": [
                            {
                                "children": [],
                                "formal_step": "recurse",
                                "in_tiling": {
                                    "[0, 0]": "Av(Perm((0, 1)))",
                                    "[1, 1]": "point",
                                    "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                                },
                                "out_tiling": {
                                    "[0, 0]": "Av(Perm((0, 1)))",
                                    "[1, 1]": "point",
                                    "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                                },
                                "tilings": [
                                    {
                                        "[0, 0]": "Av(Perm((0, 1)))",
                                        "[1, 1]": "point",
                                        "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                                    },
                                    {
                                        "[0, 0]": "Av(Perm((0, 1)))",
                                        "[0, 2]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                                        "[1, 1]": "point"
                                    },
                                    {
                                        "[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                                    },
                                    {
                                        "[0, 1]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                                        "[1, 0]": "point",
                                        "[2, 1]": "Av(Perm((0, 1)))"
                                    },
                                    {
                                        "[0, 1]": "point",
                                        "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                                        "[1, 2]": "Av(Perm((0, 1)))"
                                    }
                                ]
                            },
                            {
                                "children": [],
                                "formal_step": "Verified because it is a one by one tiling with a subclass",
                                "in_tiling": {
                                    "[0, 0]": "point"
                                },
                                "out_tiling": {
                                    "[0, 0]": "point"
                                },
                                "tilings": [
                                    {
                                        "[0, 0]": "point"
                                    }
                                ]
                            },
                            {
                                "children": [],
                                "formal_step": "Verified because it is a one by one tiling with a subclass",
                                "in_tiling": {
                                    "[0, 0]": "Av(Perm((0, 1)))"
                                },
                                "out_tiling": {
                                    "[0, 0]": "Av(Perm((0, 1)))"
                                },
                                "tilings": [
                                    {
                                        "[0, 0]": "Av(Perm((0, 1)))"
                                    }
                                ]
                            }
                        ],
                        "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=1), Cell(i=1, j=3)]",
                        "in_tiling": {
                            "[0, 1]": "point",
                            "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                            "[1, 2]": "Av+(Perm((0, 1)))"
                        },
                        "out_tiling": {
                            "[0, 1]": "point",
                            "[1, 3]": "Av(Perm((0, 1)))",
                            "[2, 0]": "Av(Perm((0, 1)))",
                            "[3, 2]": "point",
                            "[4, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                        },
                        "tilings": [
                            {
                                "[0, 1]": "point",
                                "[1, 3]": "Av(Perm((0, 1)))",
                                "[2, 0]": "Av(Perm((0, 1)))",
                                "[3, 2]": "point",
                                "[4, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                            },
                            {
                                "[0, 3]": "Av(Perm((0, 1)))",
                                "[1, 1]": "point",
                                "[2, 4]": "point",
                                "[3, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                                "[3, 2]": "Av(Perm((0, 1)))"
                            },
                            {
                                "[0, 1]": "point",
                                "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                                "[1, 2]": "Av+(Perm((0, 1)))"
                            },
                            {
                                "[0, 1]": "point",
                                "[1, 0]": "Av(Perm((0, 1)))",
                                "[2, 3]": "point",
                                "[3, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                                "[3, 2]": "Av(Perm((0, 1)))"
                            },
                            {
                                "[0, 0]": "Av+(Perm((0, 1)))",
                                "[1, 1]": "point",
                                "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                            }
                        ]
                    }
                ],
                "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).",
                "in_tiling": {
                    "[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                },
                "out_tiling": {
                    "[0, 1]": "point",
                    "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                    "[1, 2]": "Av(Perm((0, 1)))"
                },
                "tilings": [
                    {
                        "[0, 0]": "Av(Perm((0, 1)))",
                        "[1, 1]": "point",
                        "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                    },
                    {
                        "[0, 0]": "Av(Perm((0, 1)))",
                        "[0, 2]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                        "[1, 1]": "point"
                    },
                    {
                        "[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
                    },
                    {
                        "[0, 1]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                        "[1, 0]": "point",
                        "[2, 1]": "Av(Perm((0, 1)))"
                    },
                    {
                        "[0, 1]": "point",
                        "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))",
                        "[1, 2]": "Av(Perm((0, 1)))"
                    }
                ]
            }
        ],
        "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 0, 3, 2))).",
        "in_tiling": {
            "[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
        },
        "out_tiling": {
            "[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
        },
        "tilings": [
            {
                "[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 3, 2)))"
            }
        ]
    }
}
