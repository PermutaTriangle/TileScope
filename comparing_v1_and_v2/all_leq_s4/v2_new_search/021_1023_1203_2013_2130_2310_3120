021_1023_1203_2013_2130_2310_3120
Symmetry: False
Non-Interleaving Decompoition: False
Tiling Queue: <class 'atrapv2.tilingqueue.TilingQueue'>

--------------------------------------------------------------------------
Trying: No name
Auto search started Mon, 18 Sep 2017 18:44:44

Looking for proof tree for Basis((Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0))))

The strategies being used are:
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_row_placements, all_column_placements

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 0.965717077255249 seconds
Number of tilings expanded by Set 1 is 33
Number of tilings expanded by Set 2 is 8
Total number of tilings is 72
Total number of expandable tilings is 69
Total number of verified tilings is 30
Total number of strategy verified tilings is 11
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.030815601348876953 seconds, ~3%
Time spent strategy verifying: 0.018956899642944336 seconds, ~1%
Time spent inferring: 0.270416259765625 seconds, ~28%
Time spent expanding Set 1: 0.5517158508300781 seconds, ~57%
Time spent expanding Set 2: 0.00942683219909668 seconds, ~0%
Time spent queueing: 0.0012311935424804688 seconds, ~0%
Time spent prepping for tree search: 0.005056858062744141 seconds, ~0%
Time spent searching for tree: 0.016248226165771484 seconds, ~1%
Total of ~90% accounted for.

Proof tree found Mon, 18 Sep 2017 18:44:45

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 4

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| |3| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 5

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 6

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 25, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (1, 1); either it is empty or Av+(Perm((0, 1))).", "in_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((1, 0)))", "[4, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | ", "identifier": 27, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 64, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[2, 0]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[2, 0]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 66, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 0.965717077255249 seconds

