021_2310_3120_3201
Symmetry: False
Non-Interleaving Decompoition: False
Tiling Queue: <class 'atrapv2.tilingqueue.TilingQueue'>

--------------------------------------------------------------------------
Trying: No name
Auto search started Mon, 18 Sep 2017 18:12:44

Looking for proof tree for Basis((Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1))))

The strategies being used are:
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_row_placements, all_column_placements

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 7.682623624801636 seconds
Number of tilings expanded by Set 1 is 105
Number of tilings expanded by Set 2 is 43
Total number of tilings is 585
Total number of expandable tilings is 374
Total number of verified tilings is 136
Total number of strategy verified tilings is 66
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.2046952247619629 seconds, ~2%
Time spent strategy verifying: 0.1472156047821045 seconds, ~1%
Time spent inferring: 2.594594955444336 seconds, ~33%
Time spent expanding Set 1: 2.550830602645874 seconds, ~33%
Time spent expanding Set 2: 0.07719635963439941 seconds, ~1%
Time spent queueing: 0.006312131881713867 seconds, ~0%
Time spent prepping for tree search: 0.18451905250549316 seconds, ~2%
Time spent searching for tree: 0.4322652816772461 seconds, ~5%
Total of ~77% accounted for.

Proof tree found Mon, 18 Sep 2017 18:12:51

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  └─────8

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
3: point

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1)))
3: point

Label: 5

+-+-+-+-+
| |2| | |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 6

+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((1, 0)))
2: point
3: Av(Perm((1, 0)))

Label: 7

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))", "[1, 2]": "point"}, "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 3, 1, 0)), Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))", "[1, 1]": "point"}, "relation": "", "identifier": 13, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "in_tiling": {"[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 2]": "point"}, "out_tiling": {"[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[4, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 3]": "point"}, "relation": "| Inserting the top most point in to the cell Cell(i=2, j=0). | ", "identifier": 15, "children": [{"formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1))).", "in_tiling": {"[2, 0]": "Av(Perm((1, 0)))", "[3, 1]": "point", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 3]": "point"}, "out_tiling": {"[4, 0]": "Av+(Perm((1, 0)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point"}, "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=2). | Reverse of: Inserting the top most point in to the cell Cell(i=4, j=0). | ", "identifier": 140, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[3, 0]": "Av+(Perm((1, 0)))", "[0, 1]": "point", "[1, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point"}, "out_tiling": {"[3, 0]": "Av+(Perm((1, 0)))", "[0, 1]": "point", "[1, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point"}, "relation": "", "identifier": 576, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[4, 0]": "point", "[1, 1]": "point", "[0, 2]": "Av+(Perm((0, 1)))", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point"}, "out_tiling": {"[5, 0]": "point", "[2, 1]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 5]": "point"}, "relation": "| Inserting the top most point in to the cell Cell(i=0, j=2). | ", "identifier": 575, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 0]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "point"}, "out_tiling": {"[2, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[0, 3]": "point"}, "relation": "| Reverse of: Inserting the top most point in to the cell Cell(i=1, j=0). | Inserting the bottom most point in to the cell Cell(i=1, j=0). | ", "identifier": 174, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 7.682623624801636 seconds

