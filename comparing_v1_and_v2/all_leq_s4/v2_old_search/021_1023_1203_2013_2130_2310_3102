021_1023_1203_2013_2130_2310_3102
Symmetry: False
Non-Interleaving Decompoition: False
Tiling Queue: <class 'atrapv2.tilingqueuedf.TilingQueueDF'>

--------------------------------------------------------------------------
Trying: No name
Auto search started Mon, 18 Sep 2017 18:37:12

Looking for proof tree for Basis((Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2))))

The strategies being used are:
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_row_placements, all_column_placements

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 0.7810840606689453 seconds
Number of tilings expanded by Set 1 is 23
Number of tilings expanded by Set 2 is 8
Total number of tilings is 70
Total number of expandable tilings is 67
Total number of verified tilings is 35
Total number of strategy verified tilings is 14
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.026531696319580078 seconds, ~3%
Time spent strategy verifying: 0.04107809066772461 seconds, ~5%
Time spent inferring: 0.25978803634643555 seconds, ~33%
Time spent expanding Set 1: 0.37375760078430176 seconds, ~47%
Time spent expanding Set 2: 0.010664701461791992 seconds, ~1%
Time spent queueing: 0.001123666763305664 seconds, ~0%
Time spent prepping for tree search: 0.0028009414672851562 seconds, ~0%
Time spent searching for tree: 0.011637687683105469 seconds, ~1%
Total of ~90% accounted for.

Proof tree found Mon, 18 Sep 2017 18:37:13

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((1, 0)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 0)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 5

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))

Label: 6

+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)), Perm((3, 1, 0, 2)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((1, 0)))"}, "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 21, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (4, 5); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "relation": "| Inserting the right most point in to the cell Cell(i=0, j=1). | ", "identifier": 23, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))"}, "out_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 68, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[2, 0]": "point", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[2, 0]": "point", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))", "[3, 3]": "point"}, "relation": "", "identifier": 69, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 0.7810840606689453 seconds

