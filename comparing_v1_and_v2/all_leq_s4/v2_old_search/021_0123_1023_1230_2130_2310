021_0123_1023_1230_2130_2310
Symmetry: False
Non-Interleaving Decompoition: False
Tiling Queue: <class 'atrapv2.tilingqueuedf.TilingQueueDF'>

--------------------------------------------------------------------------
Trying: No name
Auto search started Mon, 18 Sep 2017 18:13:56

Looking for proof tree for Basis((Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0))))

The strategies being used are:
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_row_placements, all_column_placements

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 0.7608184814453125 seconds
Number of tilings expanded by Set 1 is 24
Number of tilings expanded by Set 2 is 8
Total number of tilings is 78
Total number of expandable tilings is 62
Total number of verified tilings is 31
Total number of strategy verified tilings is 16
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.021132707595825195 seconds, ~2%
Time spent strategy verifying: 0.030783653259277344 seconds, ~4%
Time spent inferring: 0.27309632301330566 seconds, ~35%
Time spent expanding Set 1: 0.29585933685302734 seconds, ~38%
Time spent expanding Set 2: 0.01037287712097168 seconds, ~1%
Time spent queueing: 0.001262664794921875 seconds, ~0%
Time spent prepping for tree search: 0.0035037994384765625 seconds, ~0%
Time spent searching for tree: 0.014039039611816406 seconds, ~1%
Total of ~81% accounted for.

Proof tree found Mon, 18 Sep 2017 18:13:57

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((1, 0)), Perm((0, 1, 2)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 0)), Perm((0, 1, 2)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((1, 0)), Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|4| | | | |3|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)), Perm((0, 1, 2)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 5

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)), Perm((0, 1, 2)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 6

+-+-+-+-+-+-+
|3| | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av(Perm((0, 1)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((0, 1, 2, 3)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((2, 1, 3, 0)), Perm((2, 3, 1, 0)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))"}, "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))"}, "relation": "", "identifier": 21, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (5, 4); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))"}, "out_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))", "[5, 4]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "relation": "| Inserting the right most point in to the cell Cell(i=0, j=1). | ", "identifier": 23, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))"}, "out_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)), Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 76, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "out_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "relation": "", "identifier": 77, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 0.7608184814453125 seconds

