012_021_2103_2130_2301_3201_3210
Symmetry: False
Non-Interleaving Decompoition: False
Tiling Queue: <class 'atrapv2.tilingqueuedf.TilingQueueDF'>

--------------------------------------------------------------------------
Trying: No name
Auto search started Mon, 18 Sep 2017 19:53:50

Looking for proof tree for Basis((Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0))))

The strategies being used are:
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_row_placements, all_column_placements

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 0.3843674659729004 seconds
Number of tilings expanded by Set 1 is 21
Number of tilings expanded by Set 2 is 9
Total number of tilings is 61
Total number of expandable tilings is 59
Total number of verified tilings is 26
Total number of strategy verified tilings is 14
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.02079486846923828 seconds, ~5%
Time spent strategy verifying: 0.008286714553833008 seconds, ~2%
Time spent inferring: 0.1616380214691162 seconds, ~42%
Time spent expanding Set 1: 0.13322019577026367 seconds, ~34%
Time spent expanding Set 2: 0.010651826858520508 seconds, ~2%
Time spent queueing: 0.0011126995086669922 seconds, ~0%
Time spent prepping for tree search: 0.0026352405548095703 seconds, ~0%
Time spent searching for tree: 0.011629104614257812 seconds, ~3%
Total of ~88% accounted for.

Proof tree found Mon, 18 Sep 2017 19:53:50

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1)), Perm((2, 1, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 4

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 1)), Perm((2, 1, 0)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1)), Perm((2, 1, 0))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((2, 1, 0, 3)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)), Perm((3, 2, 0, 1)), Perm((3, 2, 1, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 1)), Perm((2, 1, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "relation": "", "identifier": 23, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "Av+(Perm((0, 1)), Perm((2, 1, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((0, 1)), Perm((2, 1, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "relation": "", "identifier": 59, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 0.3843674659729004 seconds

