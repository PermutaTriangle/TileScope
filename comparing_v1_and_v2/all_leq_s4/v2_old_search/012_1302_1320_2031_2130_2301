012_1302_1320_2031_2130_2301
Symmetry: False
Non-Interleaving Decompoition: False
Tiling Queue: <class 'atrapv2.tilingqueuedf.TilingQueueDF'>

--------------------------------------------------------------------------
Trying: No name
Auto search started Mon, 18 Sep 2017 16:23:57

Looking for proof tree for Basis((Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1))))

The strategies being used are:
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_row_placements, all_column_placements

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 0.2919347286224365 seconds
Number of tilings expanded by Set 1 is 12
Number of tilings expanded by Set 2 is 4
Total number of tilings is 23
Total number of expandable tilings is 23
Total number of verified tilings is 14
Total number of strategy verified tilings is 6
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.004391193389892578 seconds, ~1%
Time spent strategy verifying: 0.009595870971679688 seconds, ~3%
Time spent inferring: 0.06520962715148926 seconds, ~22%
Time spent expanding Set 1: 0.19485783576965332 seconds, ~66%
Time spent expanding Set 2: 0.0021293163299560547 seconds, ~0%
Time spent queueing: 0.00042510032653808594 seconds, ~0%
Time spent prepping for tree search: 0.0006015300750732422 seconds, ~0%
Time spent searching for tree: 0.002367734909057617 seconds, ~0%
Total of ~92% accounted for.

Proof tree found Mon, 18 Sep 2017 16:23:57

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 1))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "Av(Perm((0, 1)))"}, "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))"}, "relation": "", "identifier": 19, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1)))", "[2, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[2, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))"}, "relation": "| Inserting the top most point in to the cell Cell(i=2, j=1). | ", "identifier": 21, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 0.2919347286224365 seconds

