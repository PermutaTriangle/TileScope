{
  "root": {
    "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2))).",
    "in_tiling": {
      "[0, 0]": "Av(Perm((0, 1, 2)))"
    },
    "out_tiling": {
      "[0, 0]": "Av(Perm((0, 1, 2)))"
    },
    "relation": "",
    "identifier": 43,
    "children": [
      {
        "formal_step": "Verified because it is a one by one tiling with a subclass",
        "in_tiling": {},
        "out_tiling": {},
        "relation": "",
        "identifier": 39,
        "children": [],
        "recurse": "[]",
        "strategy_verified": true
      },
      {
        "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).",
        "in_tiling": {
          "[0, 0]": "Av+(Perm((0, 1, 2)))"
        },
        "out_tiling": {
          "[0, 0]": "Av(Perm((0, 1)))",
          "[1, 1]": "point",
          "[0, 2]": "Av(Perm((0, 1, 2)))"
        },
        "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | ",
        "identifier": 29,
        "children": [
          {
            "formal_step": "The tiling is a subset of the subclass",
            "in_tiling": {
              "[1, 0]": "point",
              "[0, 1]": "Av(Perm((0, 1, 2)))"
            },
            "out_tiling": {
              "[1, 0]": "point",
              "[0, 1]": "Av(Perm((0, 1, 2)))"
            },
            "relation": "",
            "identifier": 40,
            "children": [],
            "recurse": "[]",
            "strategy_verified": true
          },
          {
            "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=0), Cell(i=3, j=2)]",
            "in_tiling": {
              "[0, 0]": "Av+(Perm((0, 1)))",
              "[1, 1]": "point",
              "[0, 2]": "Av(Perm((0, 1, 2)))"
            },
            "out_tiling": {
              "[2, 0]": "Av(Perm((0, 1)))",
              "[1, 1]": "point",
              "[3, 2]": "point",
              "[0, 3]": "Av(Perm((0, 1, 2)))",
              "[2, 3]": "Av(Perm((0, 1)))"
            },
            "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | ",
            "identifier": 42,
            "children": [
              {
                "formal_step": "recurse",
                "in_tiling": {
                  "[1, 0]": "point",
                  "[0, 1]": "Av(Perm((0, 1, 2)))",
                  "[2, 1]": "Av(Perm((0, 1)))"
                },
                "out_tiling": {
                  "[0, 0]": "Av+(Perm((0, 1, 2)))"
                },
                "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=0). | ",
                "identifier": 29,
                "children": [],
                "recurse": "[]",
                "strategy_verified": false
              },
              {
                "formal_step": "The tiling is a subset of the subclass",
                "in_tiling": {
                  "[0, 0]": "Av(Perm((0, 1)))",
                  "[1, 1]": "point"
                },
                "out_tiling": {
                  "[0, 0]": "Av(Perm((0, 1)))",
                  "[1, 1]": "point"
                },
                "relation": "",
                "identifier": 41,
                "children": [],
                "recurse": "[]",
                "strategy_verified": true
              }
            ],
            "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=1): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=0), Cell(i=1, j=1): Cell(i=3, j=2)}]",
            "strategy_verified": false
          }
        ],
        "recurse": "[]",
        "strategy_verified": false
      }
    ],
    "recurse": "[]",
    "strategy_verified": false
  }
}
