18.16721510887146
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))"}, "relation": "They are equivalent", "identifier": 0, "children": [{"formal_step": "Verified", "in_tiling": {}, "out_tiling": {}, "relation": "They are equivalent", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "point"}, "relation": "They are equivalent", "identifier": 3, "children": [{"formal_step": "Verified", "in_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point"}, "relation": "They are equivalent", "identifier": 7, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (1, 3); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "point"}, "out_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point"}, "relation": "They are equivalent", "identifier": 21, "children": [{"formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "in_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point"}, "out_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point"}, "relation": "They are equivalent", "identifier": 25, "children": [{"formal_step": "Verified", "in_tiling": {"[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point", "[2, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "point"}, "out_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[2, 3]": "point"}, "relation": "They are equivalent", "identifier": 189, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=3)]", "in_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[2, 3]": "point"}, "out_tiling": {"[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point", "[2, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "point"}, "relation": "They are equivalent", "identifier": 299, "children": [{"formal_step": "recurse", "in_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "relation": "They are equivalent", "identifier": 21, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Verified", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "They are equivalent", "identifier": 117, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=4), Cell(i=3, j=0)]", "in_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[1, 3]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point"}, "out_tiling": {"[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "point", "[1, 3]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point"}, "relation": "They are equivalent", "identifier": 192, "children": [{"formal_step": "Verified", "in_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point"}, "relation": "They are equivalent", "identifier": 7, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "recurse", "in_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((2, 0, 3, 1)))", "[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "relation": "They are equivalent", "identifier": 21, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=1, j=3)}, {Cell(i=0, j=1): Cell(i=2, j=4), Cell(i=1, j=0): Cell(i=3, j=0)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
