from comb_spec_searcher import ProofTree
from tilescopetwo import TileScopeTWO, StrategyPacks
from tilescopetwo.strategies import empty_cell_inferral

from grids_two import Tiling, Obstruction
from permuta import Perm


# globally_verified_tiling = Tiling(point_cells=frozenset(),
#                                   positive_cells=frozenset({(1, 0)}),
#                                   possibly_empty=frozenset({(0, 1)}),
#                                   obstructions=[Obstruction(Perm((0, 2, 1)), ((0, 1), (0, 1), (0, 1))),
#                                                 Obstruction(Perm((0, 2, 1)), ((1, 0), (1, 0), (1, 0))),
#                                                 Obstruction(Perm((2, 0, 1)), ((0, 1), (0, 1), (0, 1))),
#                                                 Obstruction(Perm((3, 1, 2, 0)), ((0, 1), (1, 0), (1, 0), (1, 0))),
#                                                 Obstruction(Perm((3, 1, 2, 0)), ((1, 0), (1, 0), (1, 0), (1, 0)))])
#
# for i in range(10):
#     print(len(list(globally_verified_tiling.gridded_perms_of_length(i))))


# strategy_pack = StrategyPacks.row_column_placements
# tilescope = TileScopeTWO(basis="012", start_tiling=globally_verified_tiling, interleaving_decomposition=False, strategy_pack=strategy_pack)
#
# global_tree = tilescope.auto_search(cap=1)
# global_tree.pretty_print()
#
# print(global_tree.to_json())
#
# global_tree.print_equivalences()
# f = global_tree.get_genf()
#
# uninferred = Tiling(point_cells=frozenset(),
#     positive_cells=frozenset({(0, 1)}),
#     possibly_empty=frozenset({(0, 0)}),
#     obstructions=[Obstruction(Perm((0, 1)), ((0, 0), (0, 1))),
#                   Obstruction(Perm((1, 0)), ((0, 1), (0, 0))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 0), (0, 0), (0, 0))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 1), (0, 1), (0, 1))),
#                   Obstruction(Perm((2, 0, 1)), ((0, 0), (0, 0), (0, 0))),
#                   Obstruction(Perm((2, 0, 1)), ((0, 1), (0, 1), (0, 1)))])
#
# empty = Tiling(point_cells=frozenset(),
#     positive_cells=frozenset({(0, 1), (0, 0), (1, 1)}),
#     possibly_empty=frozenset({(1, 2), (0, 2)}),
#     obstructions=[Obstruction(Perm((0, 1)), ((0, 0), (0, 1))),
#                   Obstruction(Perm((0, 1)), ((1, 1), (1, 2))),
#                   Obstruction(Perm((1, 0)), ((1, 2), (1, 1))),
#                   Obstruction(Perm((0, 1, 2)), ((0, 0), (0, 2), (1, 2))),
#                   Obstruction(Perm((0, 1, 2)), ((0, 1), (0, 2), (1, 2))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 0), (0, 0), (0, 0))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 0), (0, 2), (0, 0))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 0), (0, 2), (0, 2))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 1), (0, 1), (0, 1))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 1), (0, 2), (0, 1))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 1), (0, 2), (0, 2))),
#                   Obstruction(Perm((0, 2, 1)), ((0, 2), (0, 2), (0, 2))),
#                   Obstruction(Perm((1, 0, 2)), ((1, 1), (1, 1), (1, 1))),
#                   Obstruction(Perm((1, 0, 2)), ((1, 2), (1, 2), (1, 2))),
#                   Obstruction(Perm((1, 2, 0)), ((1, 1), (1, 1), (1, 1))),
#                   Obstruction(Perm((1, 2, 0)), ((1, 2), (1, 2), (1, 2))),
#                   Obstruction(Perm((2, 0, 1)), ((0, 1), (0, 1), (0, 1))),
#                   Obstruction(Perm((2, 0, 1)), ((0, 2), (0, 1), (0, 1))),
#                   Obstruction(Perm((2, 0, 1)), ((0, 2), (0, 1), (0, 2))),
#                   Obstruction(Perm((2, 0, 1)), ((0, 2), (0, 2), (0, 2))),
#                   Obstruction(Perm((2, 1, 0)), ((0, 2), (0, 1), (1, 1))),
#                   Obstruction(Perm((0, 2, 1, 3)), ((0, 1), (0, 1), (1, 1), (1, 1))),
#                   Obstruction(Perm((0, 2, 1, 3)), ((0, 2), (0, 2), (1, 2), (1, 2))),
#                   Obstruction(Perm((3, 1, 2, 0)), ((0, 0), (0, 0), (0, 0), (0, 0))),
#                   Obstruction(Perm((3, 1, 2, 0)), ((0, 1), (0, 0), (0, 0), (0, 0))),
#                   Obstruction(Perm((3, 1, 2, 0)), ((0, 1), (0, 1), (1, 1), (1, 1))),
#                   Obstruction(Perm((3, 1, 2, 0)), ((0, 2), (0, 0), (0, 0), (0, 0))),
#                   Obstruction(Perm((3, 1, 2, 0)), ((0, 2), (0, 0), (0, 2), (0, 0))),
#                   Obstruction(Perm((3, 1, 2, 0)), ((0, 2), (0, 2), (1, 2), (1, 2)))])
#
# strategy_pack = StrategyPacks.row_column_placements
# tilescope = TileScopeTWO(basis="012", start_tiling=empty, interleaving_decomposition=False, strategy_pack=strategy_pack)
#
# empty_tree = tilescope.auto_search(cap=100, max_time=300)
#
# print(tilescope.objectdb.is_empty(tilescope.start_label))
#
# print(empty_tree.to_json())
#
# empty_tree.print_equivalences()
# f = empty_tree.get_genf()
#
# strat = empty_cell_inferral(empty)
#
# if strat is None:
#     print("no inferral")
# else:
#     print(empty.to_old_tiling())
#     print("inferred to")
#     print(strat.object == empty)
#     print(strat.object.to_old_tiling())
#
#
# assert False
#
tree = ProofTree.from_json('{"root": {"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 1]": "point"}, "relation": "| Place maximum into row 0~[0: ]~. | ", "identifier": 3, "children": [{"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "relation": "", "identifier": 7, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 12, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Place leftmost into col 1~[0: Separated the rows and columns]~. | ", "identifier": 26, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (2, 1).~[0: ][1: Separated the rows and columns]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 28, "children": [{"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 114, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "relation": "", "identifier": 7, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[3, 1]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "point"}, "relation": "| Place maximum into row 1~[0: Separated the rows and columns]~. | ", "identifier": 880, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 1]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 1]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 882, "children": [{"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 4101, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 114, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 17472, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[6, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[5, 3]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "| Place maximum into row 0~[0: Separated the rows and columns]~. | ", "identifier": 17477, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 7547, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 563, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))"}, "relation": "| Place rightmost into col 0~[0: Separated the rows and columns]~. | ", "identifier": 22839, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (2, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 17479, "children": [{"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 11297, "children": [{"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 6733, "children": [{"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 295, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 523, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Place rightmost into col 0~[0: ]~. | ", "identifier": 2336, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 2339, "children": [{"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 6862, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 295, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av(Perm((0, 1)))"}, "relation": "| Place minimum into row 0~[0: Separated the rows and columns]~. | ", "identifier": 36436, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 641, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 10908, "children": [{"formal_step": "recurse", "in_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 6862, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 56893, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=4)}, {Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=2, j=0): Cell(i=4, j=1), Cell(i=2, j=2): Cell(i=4, j=3), Cell(i=1, j=1): Cell(i=2, j=2)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 14732, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Insert into cell (0, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 2336, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((1, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av(Perm((0, 1)))"}, "relation": "| Insert into cell (0, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | | Place minimum into row 1~[0: Separated the rows and columns]~. | ", "identifier": 60930, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 1]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 6474, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 35520, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 2336, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Insert into cell (1, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 26347, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=3, j=1), Cell(i=1, j=1): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=1): Cell(i=1, j=4)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 36183, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Reverse of: Insert into cell (1, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 60552, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 83240, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 56893, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[3, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[3, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 41552, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=1, j=2): Cell(i=1, j=4), Cell(i=3, j=0): Cell(i=6, j=2), Cell(i=0, j=3): Cell(i=0, j=5), Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=2, j=1): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=0), Cell(i=1, j=0): Cell(i=4, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=0, j=3): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 310, "children": [{"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Place leftmost into col 1~[0: ]~. | ", "identifier": 897, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 899, "children": [{"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 2936, "children": [{"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 110, "children": [{"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 250, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 12, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 70466, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 23153, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Place rightmost into col 0~[0: Separated the rows and columns][1: Separated the rows and columns]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 2120, "children": [{"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 6497, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 71189, "children": [{"formal_step": "Globally verified.", "in_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 936, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 2120, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 6498, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 563, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 83240, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0)}, {Cell(i=0, j=1): Cell(i=0, j=3), Cell(i=0, j=0): Cell(i=0, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 897, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 3]": "Av(Perm((1, 0)))", "[0, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 4]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "relation": "| Place minimum into row 1~[0: Separated the rows and columns]~. | ", "identifier": 26333, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 202, "children": [{"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((1, 0)))"}, "relation": "", "identifier": 1902, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "relation": "", "identifier": 1857, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Place rightmost into col 0~[0: ][1: Separated the rows and columns]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((1, 0)))"}, "relation": "", "identifier": 1879, "children": [{"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((1, 0)))", "[1, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((1, 0)))", "[1, 2]": "point"}, "relation": "", "identifier": 6402, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((1, 0)))", "[3, 3]": "Av(Perm((1, 0)))"}, "relation": "| Place maximum into row 0~[0: Separated the rows and columns]~. | ", "identifier": 1918, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 530, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 1920, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 7576, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((1, 0)))"}, "relation": "| Insert into cell (0, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 1918, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=1, j=0): Cell(i=3, j=0), Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=2)}]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=2)}, {Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=0): Cell(i=0, j=0)}]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av+(Perm((1, 0)))"}, "relation": "", "identifier": 6403, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 563, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 10464, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 6729, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 56602, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=3, j=0), Cell(i=0, j=1): Cell(i=3, j=5)}, {Cell(i=2, j=2): Cell(i=4, j=4), Cell(i=1, j=1): Cell(i=2, j=3), Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=0, j=2): Cell(i=0, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 6232, "children": [{"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 14673, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Insert into cell (1, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | | Reverse of: Insert into cell (1, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 2354, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[3, 0]": "Av(Perm((0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "point"}, "relation": "| Insert into cell (1, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | | Place maximum into row 1~[0: Separated the rows and columns]~. | ", "identifier": 60552, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 641, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 59580, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Reverse of: Insert into cell (1, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 14673, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[2, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 59579, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=2, j=0): Cell(i=4, j=1), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 14674, "children": [{"formal_step": "This tiling contains no avoiding perms.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 20909, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "| Insert into cell (1, 2).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 26245, "children": [{"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 2160, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 30, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 2120, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 22622, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=1): Cell(i=0, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=2)}, {Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=1, j=2): Cell(i=2, j=3), Cell(i=0, j=2): Cell(i=0, j=3)}]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 301, "children": [{"formal_step": "Insert into cell (0, 0).~[0: ][1: Separated the rows and columns]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Place rightmost into col 1~[0: Separated the rows and columns]~. | | Reverse of: Place rightmost into col 2~[0: ]~. | | Reverse of: Insert into cell (2, 1).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 4029, "children": [{"formal_step": "The components of the tiling~[0: ][1: ]~", "in_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Insert into cell (1, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | | Place leftmost into col 1~[0: ]~. | ", "identifier": 2354, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 2356, "children": [{"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 6729, "children": [{"formal_step": "Insert into cell (0, 0).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Reverse of: Insert into cell (1, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 14647, "children": [{"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "relation": "| Insert into cell (1, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | | Place minimum into row 0~[0: Separated the rows and columns]~. | ", "identifier": 61144, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 530, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (1, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 68282, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 14647, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 68281, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=2, j=2): Cell(i=4, j=3), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=4)}]", "strategy_verified": false}, {"formal_step": "recurse", "in_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 2354, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 21847, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 686, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[2, 0]": "Av(Perm((0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 4]": "Av(Perm((1, 0)))"}, "relation": "| Place minimum into row 1~[0: Separated the rows and columns]~. | ", "identifier": 83240, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 1]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 6481, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Insert into cell (0, 1).~[0: ][1: ]~", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 7910, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 686, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[0, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "| Insert into cell (0, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 23153, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=2)}, {Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=1): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=0), Cell(i=0, j=1): Cell(i=2, j=4)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "", "identifier": 14673, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "strategy_verified": false}, {"formal_step": "The components of the tiling~[0: ][1: ][2: ]~", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[1, 3]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 26216, "children": [{"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 530, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))"}, "relation": "", "identifier": 23153, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[0, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "relation": "| Insert into cell (0, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | ", "identifier": 22622, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=1), Cell(i=0, j=1): Cell(i=2, j=2)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1)))"}, "relation": "| Reverse of: Insert into cell (0, 0).~[0: ][1: The cells [] are emptyTiling is empty.]~. | | Place rightmost into col 1~[0: Separated the rows and columns]~. | ", "identifier": 22839, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=0)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[{Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=1): Cell(i=3, j=2), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=1): Cell(i=0, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the class.", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 8, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[{Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=0, j=0): Cell(i=0, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}')



tree.sanity_check()
print("SANITY CHECKED")

# tree.pretty_print()
# print(tree.to_json(indent="    "))
# tree.get_genf()
