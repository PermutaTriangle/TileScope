doing level 1
Doing depth 1
on the tiling:
+-+
|1|
+-+
1: Av(Perm((0, 1)))
we get the following strategy
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).
+-+
| |
+-+

+-+
|1|
+-+
1: Av+(Perm((0, 1)))
----------------------
I'm using one by one on the tiling:
+-+
| |
+-+

attempting AND node propagation
there is an unverified child
+-+
|1|
+-+
1: Av+(Perm((0, 1)))
---
Doing depth 2
on the tiling:
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1)))
whose parents' formal steps are:
with the following siblings:
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1)))
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1)))
2: point
+-+
|1|
+-+
1: Av+(Perm((0, 1)))
we get the following strategy
the components of tiling
+-+
|1|
+-+
1: point
+-+
|1|
+-+
1: Av(Perm((0, 1)))
----------------------
I'm using one by one on the tiling:
+-+
|1|
+-+
1: point
attempting AND node propagation
the components of tiling
we're attempting to combine on an AND node
[{frozenset()}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset(), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((0, 1)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1)))
{frozenset({<A tiling of 0 points and 1 non-points>})}
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1)))
2: point
+-+
|1|
+-+
1: Av+(Perm((0, 1)))
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
attempting AND node propagation
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).
we're attempting to combine on an AND node
[{frozenset()}, {frozenset({<A tiling of 0 points and 1 non-points>})}]
(frozenset(), frozenset({<A tiling of 0 points and 1 non-points>}))
the tilings in this set are
+-+
|1|
+-+
1: Av(Perm((0, 1)))
our guess is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
the verification we give to the and_node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
sibling node propagation
the child AND nodes have the following verifications:
+-+
|1|
+-+
1: Av(Perm((0, 1)))
{frozenset({<A tiling of 0 points and 1 non-points>})}
the new verification for the sibling node is:
{frozenset({<A tiling of 0 points and 1 non-points>})}
attempting AND node propagation
We start off with a 1x1 tiling where the single block is the input set.
we're attempting to combine on an AND node
[{frozenset()}]
(frozenset(),)
the tilings in this set are
our guess is:
{frozenset()}
the verification we give to the and_node is:
{frozenset()}
we've got a proof tree here!
at root AND node
we've got a proof tree here!
We start off with a 1x1 tiling where the single block is the input set.
+-+
|1|
+-+
1: Av(Perm((0, 1)))
We start off with a 1x1 tiling where the single block is the input set.
Giving the tilings
+-+
|1|
+-+
1: Av(Perm((0, 1)))


+-+
|1|
+-+
1: Av(Perm((0, 1)))
+-+
|1|
+-+
1: Av(Perm((0, 1)))
[<atrap.MetaTree.AndNode object at 0x10430f2e8>]
Using the following tiling:
+-+
|1|
+-+
1: Av(Perm((0, 1)))
We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).
Giving the tilings
+-+
| |
+-+

+-+
|1|
+-+
1: Av+(Perm((0, 1)))


+-+
| |
+-+

+-+
| |
+-+

[]


+-+
|1|
+-+
1: Av+(Perm((0, 1)))
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1)))
[<atrap.MetaTree.AndNode object at 0x1043a04e0>]
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1)))
2: point
[]
+-+
|1|
+-+
1: Av+(Perm((0, 1)))
[]
something is fishy...
something is fishy...
