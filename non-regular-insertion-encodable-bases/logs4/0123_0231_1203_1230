0123_0231_1203_1230

===========================================
Log created Sat, 03 Jun 2017 10:00:12

Maximum depth fully searched was 3

Maximum time set at 1800 seconds

Total time taken was 2170 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 3799 inferral cache hits and 7216 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 10134 tilings in it right now.
There were 14759 tilings of which 1436 are verified.
There were 11729 SiblingNodes of which 1122 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *7596* times, (3798 originating)
There were 0 cache misses

No proof tree was found after 2170 seconds

===========================================
Log created Sat, 03 Jun 2017 10:54:56

Maximum depth fully searched was 2

Maximum time set at 1800 seconds

Total time taken was 3284 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 539 inferral cache hits and 12897312 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2318 tilings in it right now.
There were 3198 tilings of which 440 are verified.
There were 2566 SiblingNodes of which 376 are verified.

The function splittings called the partitioning cache *12897401* times, (422 originating)
There were 0 cache misses

No proof tree was found after 3284 seconds

===========================================
Log created Sat, 03 Jun 2017 11:24:58

Maximum depth fully searched was 3

Maximum time set at 1800 seconds

Total time taken was 1802 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 3779 inferral cache hits and 15329 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 38441 tilings in it right now.
There were 29865 tilings of which 2283 are verified.
There were 18959 SiblingNodes of which 1534 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *16266* times, (8133 originating)
There were 0 cache misses

No proof tree was found after 1802 seconds

===========================================
Log created Sat, 03 Jun 2017 11:55:38

Maximum depth fully searched was 2

Maximum time set at 1800 seconds

Total time taken was 1839 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 170 inferral cache hits and 9189361 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 2230 tilings in it right now.
There were 2649 tilings of which 365 are verified.
There were 1997 SiblingNodes of which 323 are verified.

The function splittings called the partitioning cache *9189420* times, (297 originating)
There were 0 cache misses

No proof tree was found after 1839 seconds

===========================================
Log created Sat, 03 Jun 2017 12:25:39

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 6220 inferral cache hits and 25404 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 64015 tilings in it right now.
There were 28299 tilings of which 1994 are verified.
There were 10240 SiblingNodes of which 532 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *27016* times, (13508 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sat, 03 Jun 2017 12:55:40

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 4389 inferral cache hits and 6589496 partitioning cache hits.
The partitioning cache had 7 tilings in it right now.
The inferral cache has 47652 tilings in it right now.
There were 21596 tilings of which 1522 are verified.
There were 7929 SiblingNodes of which 434 are verified.

The function splittings called the partitioning cache *6590666* times, (4963 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sat, 03 Jun 2017 13:06:09

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 628 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_lrm_and_rlm_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 5289 inferral cache hits and 14022 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 16545 tilings in it right now.
There were 11145 tilings of which 1857 are verified.
There were 6392 SiblingNodes of which 685 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *14900* times, (7458 originating)
There were 1 cache misses

A proof tree was found in 628 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            ├─────4
            │     ├─────5
            │     │     ├─────6
            │     │     └─────7
            │     │           ├─────8
            │     │           └─────9
            │     └─────10
            │           ├─────11
            │           │     ├─────12
            │           │     └─────13
            │           └─────14
            │                 ├─────15
            │                 └─────16
            └─────17
                  ├─────18
                  │     ├─────19
                  │     │     ├─────20
                  │     │     └─────21
                  │     └─────22
                  │           ├─────23
                  │           └─────24
                  └─────25
                        ├─────26
                        │     ├─────27
                        │     └─────28
                        └─────29
                              ├─────30
                              │     ├─────31
                              │     └─────32
                              └─────33

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1, 2)))

Label: 4

+-+-+-+-+
|3| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 5

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 6

+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))

Label: 7

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 8

+-+-+-+-+
|3| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|3| |2| |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 11

+-+-+-+-+-+
|3| | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 12

+-+-+-+-+
|3| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+-+-+
|3| |4| |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|3| |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
|2| | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 15

+-+-+-+-+
|3| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 16

+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 17

+-+-+-+-+-+-+-+
|3| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 18

+-+-+-+-+-+-+-+
|3| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 19

+-+-+-+-+-+-+
|3| |2| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 20

+-+-+-+-+
|3| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 21

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 22

+-+-+-+-+-+-+-+
|3| |2| | |4| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
|3| |2| | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 23

+-+-+-+-+-+-+-+
|3| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 24

+-+
|1|
+-+
1: point

Label: 25

+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
|3| |2| |2| | |2| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 26

+-+-+-+-+-+-+-+-+
|3| |2| |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
|3| |2| |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 27

+-+-+-+-+-+-+
|3| |2| |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))

Label: 28

+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 29

+-+-+-+-+-+-+-+-+-+
|3| |2| |2| | |4| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
|3| |2| |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 30

+-+-+-+-+-+-+-+
|3| |2| |2| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|3| |2| | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 31

+-+-+-+-+-+
|3| |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))

Label: 32

+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 33

+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3409, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3410, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3411, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 617, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=4, j=1)]", "identifier": 3412, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=2). | "}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 3413, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 617, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=1)]", "identifier": 3414, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=3): Cell(i=3, j=4), Cell(i=3, j=2): Cell(i=4, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 617, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3415, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1), Cell(i=4, j=0), Cell(i=5, j=4), Cell(i=6, j=3)]", "identifier": 3416, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 1]": "point", "[2, 4]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 0]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=4), Cell(i=0, j=3): Cell(i=0, j=6), Cell(i=1, j=0): Cell(i=1, j=2), Cell(i=2, j=3): Cell(i=2, j=6), Cell(i=3, j=2): Cell(i=3, j=5)}, {Cell(i=0, j=1): Cell(i=2, j=1), Cell(i=1, j=0): Cell(i=4, j=0), Cell(i=2, j=3): Cell(i=5, j=4), Cell(i=3, j=2): Cell(i=6, j=3)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=4). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=1). | Inserting the top most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 3417, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 617, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 617, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 28, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=3), Cell(i=5, j=4)]", "identifier": 3418, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 4]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=3): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=3): Cell(i=2, j=5), Cell(i=3, j=2): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=3), Cell(i=1, j=1): Cell(i=5, j=4)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 194, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 5]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 5]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=7, j=4)]", "identifier": 3419, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 5]": "Av+(Perm((0, 1)))", "[6, 4]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1)))", "[0, 7]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 7]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 7]": "Av(Perm((0, 1)))", "[6, 6]": "point", "[7, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=0, j=6): Cell(i=0, j=7), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=6): Cell(i=2, j=7), Cell(i=3, j=3): Cell(i=3, j=3), Cell(i=4, j=2): Cell(i=4, j=2), Cell(i=5, j=6): Cell(i=5, j=7), Cell(i=6, j=5): Cell(i=6, j=6)}, {Cell(i=0, j=0): Cell(i=7, j=4)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=5, j=5). | "}], "formal_step": "We perform cell insertion into cell (5, 5); either it is empty or Av+(Perm((0, 1))).", "identifier": 2104, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 3417, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 91, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1), Cell(i=5, j=3), Cell(i=6, j=2)]", "identifier": 3420, "in_tiling": {"[0, 7]": "Av(Perm((0, 1, 2)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 7]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 6]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[0, 7]": "Av(Perm((0, 1, 2)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 7]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 6]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=5), Cell(i=0, j=4): Cell(i=0, j=7), Cell(i=1, j=1): Cell(i=1, j=4), Cell(i=2, j=4): Cell(i=2, j=7), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=4): Cell(i=4, j=7), Cell(i=5, j=3): Cell(i=7, j=6)}, {Cell(i=0, j=0): Cell(i=2, j=1), Cell(i=1, j=2): Cell(i=5, j=3), Cell(i=2, j=1): Cell(i=6, j=2)}]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=4). | Inserting the bottom most point in to the cell Cell(i=0, j=4). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 3412, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=2). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 85, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1), Cell(i=3, j=0), Cell(i=5, j=4)]", "identifier": 3421, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 1]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 6]": "Av(Perm((0, 1)))", "[5, 5]": "point", "[6, 3]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=0, j=4): Cell(i=0, j=6), Cell(i=1, j=0): Cell(i=1, j=2), Cell(i=2, j=4): Cell(i=2, j=6), Cell(i=3, j=3): Cell(i=4, j=5), Cell(i=4, j=1): Cell(i=6, j=3)}, {Cell(i=0, j=1): Cell(i=2, j=1), Cell(i=1, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=5, j=4)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=4). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=1). | Inserting the top most point in to the cell Cell(i=0, j=1). | Inserting the top most point in to the cell Cell(i=4, j=4). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1527, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1), Cell(i=5, j=3), Cell(i=6, j=2), Cell(i=8, j=7)]", "identifier": 3422, "in_tiling": {"[0, 7]": "Av(Perm((0, 1, 2)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 7]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 7]": "Av+(Perm((0, 1)))", "[8, 6]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[0, 7]": "Av(Perm((0, 1)))", "[0, 9]": "Av(Perm((0, 1, 2)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 9]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 9]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 8]": "point", "[8, 7]": "Av(Perm((0, 1)))", "[9, 6]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=5), Cell(i=0, j=4): Cell(i=0, j=7), Cell(i=0, j=6): Cell(i=0, j=9), Cell(i=1, j=1): Cell(i=1, j=4), Cell(i=2, j=6): Cell(i=2, j=9), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=6): Cell(i=4, j=9), Cell(i=5, j=5): Cell(i=7, j=8), Cell(i=6, j=3): Cell(i=9, j=6)}, {Cell(i=0, j=0): Cell(i=2, j=1), Cell(i=1, j=2): Cell(i=5, j=3), Cell(i=2, j=1): Cell(i=6, j=2), Cell(i=3, j=3): Cell(i=8, j=7)}]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=4). | Inserting the top most point in to the cell Cell(i=5, j=6). | Inserting the bottom most point in to the cell Cell(i=0, j=4). | "}], "formal_step": "We perform cell insertion into cell (7, 7); either it is empty or Av+(Perm((0, 1))).", "identifier": 3423, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 5]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 1, 2)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 7]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 7]": "Av(Perm((0, 1)))", "[8, 6]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=4). | "}], "formal_step": "We perform cell insertion into cell (0, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 194, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 5]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 2)))", "[1, 0]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 5]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the right-to-left minima", "identifier": 53, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0))).", "identifier": 3424, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}}
