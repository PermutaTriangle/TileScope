0132_0231_0321_1032

===========================================
Log created Wed, 14 Jun 2017 01:02:33

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 9195 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 522412 inferral cache hits and 2350449 partitioning cache hits.
The partitioning cache had 6 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 64017 tilings of which 1418 are verified.
There were 17154 SiblingNodes of which 647 are verified.

The function splittings called the partitioning cache *2353118* times, (10616 originating)
There were 0 cache misses

No proof tree was found after 9195 seconds

===========================================
Log created Wed, 14 Jun 2017 04:54:45

Maximum depth fully searched was 2

Maximum time set at 7200 seconds

Total time taken was 13930 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 115885 inferral cache hits and 8591702 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 33098 tilings in it right now.
There were 12247 tilings of which 302 are verified.
There were 4425 SiblingNodes of which 212 are verified.

The function splittings called the partitioning cache *8592042* times, (1482 originating)
There were 0 cache misses

No proof tree was found after 13930 seconds

===========================================
Log created Wed, 14 Jun 2017 06:55:05

Maximum depth fully searched was 18

Maximum time set at 7200 seconds

Total time taken was 7219 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 7677 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 54791 tilings in it right now.
There were 37686 tilings of which 12776 are verified.
There were 31668 SiblingNodes of which 6759 are verified.

There were 0 cache misses

No proof tree was found after 7219 seconds

===========================================
Log created Wed, 14 Jun 2017 08:55:05

Maximum depth fully searched was 14

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 89507 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 108050 tilings of which 43252 are verified.
There were 42444 SiblingNodes of which 7466 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Wed, 14 Jun 2017 10:55:06

Maximum depth fully searched was 16

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 8024 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 24832 tilings in it right now.
There were 17886 tilings of which 6404 are verified.
There were 10629 SiblingNodes of which 2385 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Wed, 14 Jun 2017 12:55:56

Maximum depth fully searched was 15

Maximum time set at 7200 seconds

Total time taken was 7249 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 76918 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 104204 tilings of which 36780 are verified.
There were 57514 SiblingNodes of which 10298 are verified.

There were 0 cache misses

No proof tree was found after 7249 seconds

===========================================
Log created Wed, 14 Jun 2017 15:41:50

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 9952 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 3313 inferral cache hits and 12806 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 12077 tilings in it right now.
There were 7536 tilings of which 683 are verified.
There were 4233 SiblingNodes of which 275 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *13630* times, (6815 originating)
There were 0 cache misses

No proof tree was found after 9952 seconds

===========================================
Log created Wed, 14 Jun 2017 17:41:50

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 1550143 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 170344 tilings of which 3174 are verified.
There were 37866 SiblingNodes of which 984 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Wed, 14 Jun 2017 19:48:21

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7589 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 177698 inferral cache hits and 23498 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 61314 tilings in it right now.
There were 22786 tilings of which 481 are verified.
There were 9175 SiblingNodes of which 397 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *25026* times, (12513 originating)
There were 0 cache misses

No proof tree was found after 7589 seconds

===========================================
Log created Wed, 14 Jun 2017 21:52:32

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7450 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 203366 inferral cache hits and 24899 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 66902 tilings in it right now.
There were 26608 tilings of which 571 are verified.
There were 12286 SiblingNodes of which 502 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *26536* times, (13268 originating)
There were 0 cache misses

No proof tree was found after 7450 seconds

===========================================
Log created Thu, 15 Jun 2017 00:14:28

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 8515 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 327863 inferral cache hits and 33929 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 40990 tilings of which 1584 are verified.
There were 13197 SiblingNodes of which 697 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *36108* times, (18095 originating)
There were 5 cache misses

No proof tree was found after 8515 seconds

===========================================
Log created Thu, 15 Jun 2017 00:22:39

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 489 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 92764 inferral cache hits and 194944 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 33517 tilings in it right now.
There were 12895 tilings of which 308 are verified.
There were 5306 SiblingNodes of which 243 are verified.

The function splittings called the partitioning cache *195907* times, (3404 originating)
There were 0 cache misses

A proof tree was found in 489 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           ├─────12
                        │     │           │     ├─────13
                        │     │           │     │     ├─────14
                        │     │           │     │     ├─────15
                        │     │           │     │     │     ├─────16
                        │     │           │     │     │     └─────17
                        │     │           │     │     ├─────18
                        │     │           │     │     └─────19
                        │     │           │     │           ├─────20
                        │     │           │     │           └─────21
                        │     │           │     └─────22
                        │     │           └─────23
                        │     │                 ├─────24
                        │     │                 │     ├─────25
                        │     │                 │     └─────26
                        │     │                 │           ├─────27
                        │     │                 │           ├─────28
                        │     │                 │           │     ├─────29
                        │     │                 │           │     └─────30
                        │     │                 │           └─────31
                        │     │                 └─────32
                        │     │                       ├─────33
                        │     │                       └─────34
                        │     └─────35
                        ├─────36
                        ├─────37
                        └─────38
                              ├─────39
                              └─────40

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+-+
|1|1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))

Label: 5

+-+-+
|1|1|
+-+-+
1: point

Label: 6

+-+-+-+-+
|1|1|1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))

Label: 7

+-+-+-+-+
|2| |2|3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
|1| | |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+-+-+
| | |3|
+-+-+-+
| |1| |
+-+-+-+
|1| |2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| |2|3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 11

+-+-+
| |1|
+-+-+
|1| |
+-+-+
1: point

Label: 12

+-+-+-+-+
| |1| |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 13

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 14

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 15

+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
|2| | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 16

+-+
|1|
+-+
1: point

Label: 17

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 18

+-+-+-+-+
| | | |3|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2|3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 19

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 20

+-+
|1|
+-+
1: point

Label: 21

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
| |1| |
+-+-+-+
|1| |2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 22

+-+
|1|
+-+
1: point

Label: 23

+-+-+-+-+
| |2|2|3|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 24

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 25

+-+
|1|
+-+
1: point

Label: 26

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 27

+-+-+
| |1|
+-+-+
|1| |
+-+-+
1: point

Label: 28

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 29

+-+
|1|
+-+
1: point

Label: 30

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 31

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 32

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 33

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
| |1| |
+-+-+-+
|1| |2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 34

+-+
|1|
+-+
1: point

Label: 35

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 36

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 37

+-+-+-+-+
|1| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 38

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 39

+-+-+-+-+
| | | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
3: Av(Perm((1, 0)))

Label: 40

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 565, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 567, "in_tiling": {"[0, 0]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 568, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 57, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 569, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=4)}, {Cell(i=0, j=3): Cell(i=1, j=3), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=4)}]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=2) in its row. | Isolating the point at Cell(i=2, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 570, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | The reverse of: Isolating the point at Cell(i=0, j=2) in its row. | Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 50, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=0) in its row. | ", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 571, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=3): Cell(i=2, j=4), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=5)}]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 2", "identifier": 57, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 572, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=2)}]", "relation": "", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 57, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 573, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=3): Cell(i=1, j=4), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=5)}]", "relation": "| Isolating the point at Cell(i=2, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 574, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 2", "identifier": 41, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 574, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1)}, {Cell(i=0, j=1): Cell(i=1, j=2), Cell(i=1, j=2): Cell(i=2, j=3), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=3): Cell(i=3, j=4)}]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 50, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 566, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 575, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 3]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 3]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=3), Cell(i=2, j=4): Cell(i=3, j=5)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "relation": "", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=1, j=2) in its row", "identifier": 576, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 2", "identifier": 50, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=0) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | ", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 570, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2)}]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 571, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=2, j=2) in its row", "identifier": 577, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 574, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 569, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its row. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 572, "in_tiling": {"[0, 2]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | The reverse of: Isolating the point at Cell(i=2, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 575, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 3]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 3]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=2, j=0) in its row", "identifier": 578, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=1, j=0) in its row", "identifier": 579, "in_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 2", "identifier": 580, "in_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 1", "identifier": 91, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 0", "identifier": 110, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
