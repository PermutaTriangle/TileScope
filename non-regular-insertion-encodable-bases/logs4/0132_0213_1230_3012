0132_0213_1230_3012

===========================================
Log created Thu, 08 Jun 2017 21:53:31

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 424101 inferral cache hits and 63059 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 50815 tilings of which 3183 are verified.
There were 21452 SiblingNodes of which 1881 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *66948* times, (33498 originating)
There were 3 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Thu, 08 Jun 2017 22:53:32

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 427785 inferral cache hits and 65149 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 52719 tilings of which 3429 are verified.
There were 26714 SiblingNodes of which 2278 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *69208* times, (34612 originating)
There were 1 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Thu, 08 Jun 2017 23:47:11

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3217 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 476438 inferral cache hits and 71215 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 57908 tilings of which 5802 are verified.
There were 18185 SiblingNodes of which 1845 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *75634* times, (37873 originating)
There were 7 cache misses

A proof tree was found in 3217 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     ├─────8
                  │     │     │     ├─────9
                  │     │     │     └─────10
                  │     │     └─────11
                  │     │           ├─────12
                  │     │           │     ├─────13
                  │     │           │     ├─────14
                  │     │           │     │     ├─────15
                  │     │           │     │     └─────16
                  │     │           │     │           ├─────17
                  │     │           │     │           │     ├─────18
                  │     │           │     │           │     │     ├─────19
                  │     │           │     │           │     │     └─────20
                  │     │           │     │           │     └─────21
                  │     │           │     │           │           ├─────22
                  │     │           │     │           │           └─────23
                  │     │           │     │           └─────24
                  │     │           │     ├─────25
                  │     │           │     │     ├─────26
                  │     │           │     │     │     ├─────27
                  │     │           │     │     │     ├─────28
                  │     │           │     │     │     ├─────29
                  │     │           │     │     │     └─────30
                  │     │           │     │     │           ├─────31
                  │     │           │     │     │           └─────32
                  │     │           │     │     └─────33
                  │     │           │     │           ├─────34
                  │     │           │     │           └─────35
                  │     │           │     └─────36
                  │     │           └─────37
                  │     └─────38
                  │           ├─────39
                  │           │     ├─────40
                  │           │     │     ├─────41
                  │           │     │     │     ├─────42
                  │           │     │     │     └─────43
                  │           │     │     └─────44
                  │           │     └─────45
                  │           └─────46
                  │                 ├─────47
                  │                 │     ├─────48
                  │                 │     └─────49
                  │                 └─────50
                  └─────51

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
2: point

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+
|1|2|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
2: point
We use his sibling for the next strategy
+-+-+-+
|1|1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 5

+-+-+-+
|2| |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 6

+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 7

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 8

+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 9

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 10

+-+
|1|
+-+
1: point

Label: 11

+-+-+-+-+
| | |2|3|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 12

+-+-+-+
| |2|3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| | |4|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((1, 0)))

Label: 13

+-+-+
| |1|
+-+-+
|1| |
+-+-+
1: point

Label: 14

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 15

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av+(Perm((0, 1)))

Label: 16

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: Av+(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 17

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1|2|2|
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 18

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |3|2| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 19

+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 20

+-+
|1|
+-+
1: point

Label: 21

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|1| |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 22

+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 23

+-+
|1|
+-+
1: point

Label: 24

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 25

+-+-+-+-+
| | |4| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3|2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 26

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3|2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 27

+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
|1| | |
+-+-+-+
1: point

Label: 28

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 29

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 30

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |2|4| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |3|2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 31

+-+-+-+-+
| | |4| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3|2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 32

+-+
|1|
+-+
1: point

Label: 33

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | |3|2|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 34

+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 35

+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 36

+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 37

+-+
|1|
+-+
1: point

Label: 38

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| | |1|
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)))
3: point
4: Av(Perm((1, 0)))

Label: 39

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1|2| |3|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 40

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1|2| |3|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |3| | |3|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 41

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))

Label: 42

+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point

Label: 43

+-+
|1|
+-+
1: point

Label: 44

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 45

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 46

+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 47

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))

Label: 48

+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 49

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av+(Perm((0, 1)))
3: point

Label: 50

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 51

+-+-+-+
| | |3|
+-+-+-+
| |1| |
+-+-+-+
|1| |2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| |2|3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3078, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3080, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 2924, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=4)]", "identifier": 3081, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=1, j=3), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=5)}, {Cell(i=0, j=0): Cell(i=0, j=4)}]", "relation": "| Isolating the point at Cell(i=3, j=3) in its row. | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3082, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3083, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=1, j=2). | "}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 975, "in_tiling": {"[0, 2]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)))", "[3, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=3) in its row. | The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=4, j=0)]", "identifier": 3084, "in_tiling": {"[0, 3]": "point", "[1, 5]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)))", "[3, 1]": "point", "[4, 0]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=3): Cell(i=1, j=3), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=3, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=4, j=0)}]", "relation": "| Isolating the point at Cell(i=1, j=5) in its row. | The reverse of: Isolating the point at Cell(i=1, j=5) in its row. | The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 975, "in_tiling": {"[0, 2]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)))", "[3, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=3) in its row. | The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=0)]", "identifier": 3085, "in_tiling": {"[0, 4]": "point", "[1, 6]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1, 2)))", "[2, 5]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1, 2)))", "[3, 0]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=1), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | "}], "formal_step": "Isolated the point at Cell(i=4, j=0) in its row", "identifier": 3086, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3087, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert rightmost point into col 2", "identifier": 3088, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1, 2))).", "identifier": 975, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3089, "in_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3090, "in_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3091, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 949, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[2, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[2, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=5)]", "identifier": 3092, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 4]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[4, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=3): Cell(i=2, j=3), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=4), Cell(i=3, j=2): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=5)}]", "relation": "| Isolating the point at Cell(i=1, j=5) in its row. | The reverse of: Isolating the point at Cell(i=1, j=5) in its row. | "}], "formal_step": "insert leftmost point into col 2", "identifier": 3093, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=3) in its row. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3094, "in_tiling": {"[0, 0]": "point", "[1, 3]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 5]": "point", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[4, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=3, j=1). | Separting the rightmost point from cell Cell(i=3, j=1). | Isolating the point at Cell(i=2, j=3) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3095, "in_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 4]": "point", "[6, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 5]": "point", "[5, 3]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=2, j=0). | The reverse of: Separating the topmost point from cell Cell(i=4, j=2). | Separating the topmost point from cell Cell(i=2, j=0). | "}], "formal_step": "insert leftmost point into col 2", "identifier": 360, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[5, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[4, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=4, j=2). | Separating the topmost point from cell Cell(i=4, j=2). | "}], "formal_step": "insert topmost point into row 4", "identifier": 949, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[2, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[2, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3096, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=3, j=3). | Separating the bottommost point from cell Cell(i=3, j=3). | "}], "formal_step": "insert rightmost point into col 2", "identifier": 3097, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[2, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=1)]", "identifier": 3098, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=2): Cell(i=2, j=3), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}], "formal_step": "insert leftmost point into col 2", "identifier": 3099, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3100, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 3079, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 1251, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=2) in its row. | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 90, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=2)]", "identifier": 792, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 4]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))", "[4, 2]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=4): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=3): Cell(i=3, j=3), Cell(i=3, j=0): Cell(i=4, j=0), Cell(i=3, j=2): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=2)}]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=1, j=0). | Separting the rightmost point from cell Cell(i=1, j=0). | Isolating the point at Cell(i=0, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 90, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=3)]", "identifier": 2961, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))", "[4, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=3, j=1), Cell(i=4, j=0): Cell(i=4, j=0)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=3) in its row. | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3101, "in_tiling": {"[0, 4]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 5]": "point", "[6, 6]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 5]": "Av(Perm((1, 0)))", "[6, 6]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=5, j=5). | Separating the topmost point from cell Cell(i=5, j=5). | The reverse of: Separating the topmost point from cell Cell(i=1, j=1). | Separating the bottommost point from cell Cell(i=1, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3102, "in_tiling": {"[0, 4]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 7]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "point", "[6, 0]": "Av(Perm((0, 1)))", "[7, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[2, 6]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=3, j=6). | Separating the topmost point from cell Cell(i=3, j=6). | The reverse of: Separating the topmost point from cell Cell(i=1, j=1). | "}], "formal_step": "insert bottommost point into row 7", "identifier": 3103, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 2]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 7]": "Av(Perm((0, 1)))", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 5]": "point", "[7, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=6) in its column. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3104, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[2, 7]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 3]": "point", "[5, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 6]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 8]": "Av(Perm((0, 1)))", "[4, 5]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[6, 7]": "point", "[7, 4]": "point", "[8, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=4, j=2). | Isolating the point at Cell(i=2, j=6) in its column. | Separating the topmost point from cell Cell(i=7, j=3). | "}], "formal_step": "insert leftmost point into col 4", "identifier": 3105, "in_tiling": {"[0, 5]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 7]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 6]": "Av+(Perm((1, 0)))", "[7, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 3]": "point", "[2, 7]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=4) in its row. | Separating the bottommost point from cell Cell(i=5, j=3). | Isolating the point at Cell(i=3, j=5) in its row. | The reverse of: Isolating the point at Cell(i=2, j=7) in its column. | "}], "formal_step": "We perform cell insertion into cell (4, 5); either it is empty or Av+(Perm((1, 0))).", "identifier": 3106, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 1]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))", "[4, 2]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=3) in its row. | Isolating the point at Cell(i=2, j=5) in its column. | "}], "formal_step": "insert topmost point into row 0", "identifier": 2924, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 3097, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | "}], "formal_step": "Isolated the point at Cell(i=1, j=0) in its row", "identifier": 3107, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 0]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| Separting the leftmost point from cell Cell(i=0, j=0). | The reverse of: Separting the rightmost point from cell Cell(i=1, j=0). | Separting the leftmost point from cell Cell(i=1, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2))).", "identifier": 57, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | Separting the rightmost point from cell Cell(i=0, j=0). | "}], "formal_step": "insert leftmost point into col 0", "identifier": 3108, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}}
