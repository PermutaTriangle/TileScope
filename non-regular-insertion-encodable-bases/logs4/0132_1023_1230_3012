0132_1023_1230_3012

===========================================
Log created Tue, 06 Jun 2017 17:30:52

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 217142 inferral cache hits and 33590 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 96297 tilings in it right now.
There were 27208 tilings of which 1560 are verified.
There were 11424 SiblingNodes of which 951 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *35728* times, (17880 originating)
There were 2 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Tue, 06 Jun 2017 18:00:53

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 284098 inferral cache hits and 38388 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 36755 tilings of which 2159 are verified.
There were 18769 SiblingNodes of which 1399 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *40842* times, (20421 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Tue, 06 Jun 2017 18:30:53

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 300506 inferral cache hits and 48149 partitioning cache hits.
The partitioning cache had 7 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 37359 tilings of which 3806 are verified.
There were 11802 SiblingNodes of which 1260 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *51182* times, (25615 originating)
There were 3 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Tue, 06 Jun 2017 19:00:55

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 316063 inferral cache hits and 2234651 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 38792 tilings of which 2188 are verified.
There were 16531 SiblingNodes of which 1349 are verified.

The function splittings called the partitioning cache *2237580* times, (11720 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Tue, 06 Jun 2017 19:30:57

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1801 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 365233 inferral cache hits and 1934796 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 45410 tilings of which 2472 are verified.
There were 23296 SiblingNodes of which 1705 are verified.

The function splittings called the partitioning cache *1938176* times, (13026 originating)
There were 0 cache misses

No proof tree was found after 1801 seconds

===========================================
Log created Tue, 06 Jun 2017 19:57:00

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1562 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 338713 inferral cache hits and 1379868 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 42545 tilings of which 4174 are verified.
There were 13375 SiblingNodes of which 1353 are verified.

The function splittings called the partitioning cache *1382662* times, (10847 originating)
There were 0 cache misses

A proof tree was found in 1562 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     │     ├─────8
                  │     │     │     │     ├─────9
                  │     │     │     │     └─────10
                  │     │     │     └─────11
                  │     │     │           ├─────12
                  │     │     │           ├─────13
                  │     │     │           └─────14
                  │     │     │                 ├─────15
                  │     │     │                 └─────16
                  │     │     │                       ├─────17
                  │     │     │                       │     ├─────18
                  │     │     │                       │     └─────19
                  │     │     │                       │           ├─────20
                  │     │     │                       │           └─────21
                  │     │     │                       └─────22
                  │     │     └─────23
                  │     │           ├─────24
                  │     │           │     ├─────25
                  │     │           │     │     ├─────26
                  │     │           │     │     └─────27
                  │     │           │     │           ├─────28
                  │     │           │     │           └─────29
                  │     │           │     │                 ├─────30
                  │     │           │     │                 │     ├─────31
                  │     │           │     │                 │     ├─────32
                  │     │           │     │                 │     ├─────33
                  │     │           │     │                 │     │     ├─────34
                  │     │           │     │                 │     │     └─────35
                  │     │           │     │                 │     └─────36
                  │     │           │     │                 │           ├─────37
                  │     │           │     │                 │           └─────38
                  │     │           │     │                 └─────39
                  │     │           │     └─────40
                  │     │           │           ├─────41
                  │     │           │           └─────42
                  │     │           └─────43
                  │     └─────44
                  └─────45

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+-+
|1|1|2|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
2: point

Label: 5

+-+-+
|2| |
+-+-+
|1|2|
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
2: point

Label: 6

+-+-+-+
| |1| |
+-+-+-+
|1|2|1|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1|2| |3|
+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
2: point
3: Av+(Perm((0, 1, 2)))

Label: 7

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
3: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 8

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|2| |2| | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 9

+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 10

+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 11

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 12

+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
|1| | |
+-+-+-+
1: point

Label: 13

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 14

+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 15

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 16

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|2| | |3| |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | |2| |3|
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 17

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
|2| |2| |3| |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 18

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|2| | |3| |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 19

+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
|4| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| |3|
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |4| | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 20

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)))

Label: 21

+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 22

+-+
|1|
+-+
1: point

Label: 23

+-+-+-+-+
| | |3| |
+-+-+-+-+
|4| | |5|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av+(Perm((0, 1, 2)))
3: point
4: Av(Perm((0, 1)))
5: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 24

+-+-+-+-+
| | |2| |
+-+-+-+-+
|3| | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
|3| | |3| |3| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |2| | |3|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 25

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|3| | |3| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |2| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 26

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 27

+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 28

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point

Label: 29

+-+-+-+-+
| |1| | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |2|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 30

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |2|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 31

+-+-+-+
| |1| |
+-+-+-+
|1| | |
+-+-+-+
| | |1|
+-+-+-+
1: point

Label: 32

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| | |2| |2|
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 33

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |2|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 34

+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |2|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 35

+-+
|1|
+-+
1: point

Label: 36

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |3| |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| |3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 37

+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |2|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 38

+-+
|1|
+-+
1: point

Label: 39

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 40

+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
|2| | |2| |1|2| |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | |2|
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
|2| | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| |2| | |2| | |2| |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 41

+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
|2| | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | |2| |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 42

+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |3| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 43

+-+-+-+-+
| | |1| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
|4| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| |3|
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 44

+-+-+-+
|2| | |
+-+-+-+
| |1|2|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 45

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
2: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2350, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2351, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2352, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2353, "in_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 7]": "point", "[6, 4]": "Av(Perm((0, 1)))", "[7, 3]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 6]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 8]": "point", "[7, 4]": "Av(Perm((0, 1)))", "[8, 3]": "point"}, "recurse": "[]", "relation": "| Separating the topmost point from cell Cell(i=2, j=5). | "}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 2354, "in_tiling": {"[0, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 2]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 5]": "point", "[6, 4]": "Av(Perm((0, 1)))", "[7, 3]": "point"}, "recurse": "[]", "relation": "| Separting the rightmost point from cell Cell(i=3, j=2). | Isolating the point at Cell(i=2, j=3) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=0, j=1). | Separating the topmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=3, j=5) in its column. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2355, "in_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2356, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2357, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 5]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 4]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 5]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 4]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2358, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=3) in its column. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2359, "in_tiling": {"[0, 0]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 3]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 3]": "point", "[6, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=4) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=4, j=1). | Separating the topmost point from cell Cell(i=4, j=1). | Isolating the point at Cell(i=3, j=5) in its column. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2360, "in_tiling": {"[0, 6]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 7]": "point", "[6, 2]": "point", "[7, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 6]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 7]": "point", "[6, 2]": "point", "[7, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "insert topmost point into row 6", "identifier": 2361, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 1]": "point", "[7, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 5]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 7]": "point", "[5, 2]": "point", "[6, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 3]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=4, j=6) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=5, j=1). | The reverse of: Separating the topmost point from cell Cell(i=2, j=2). | Separting the leftmost point from cell Cell(i=4, j=1). | Isolating the point at Cell(i=3, j=4) in its row. | Separating the topmost point from cell Cell(i=2, j=4). | "}], "formal_step": "insert leftmost point into col 2", "identifier": 885, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 1]": "point", "[6, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=3, j=3) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 2351, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 2362, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 3]": "point", "[5, 1]": "point", "[5, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=3, j=3): Cell(i=4, j=3), Cell(i=4, j=1): Cell(i=5, j=1), Cell(i=4, j=2): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=4)}]", "relation": "| Isolating the point at Cell(i=2, j=4) in its column. | The reverse of: Isolating the point at Cell(i=2, j=4) in its column. | "}], "formal_step": "Isolated the point at Cell(i=3, j=1) in its column", "identifier": 2363, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert topmost point into row 2", "identifier": 2358, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "insert bottommost point into row 1", "identifier": 2364, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 265, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2365, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2366, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2367, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point", "[4, 0]": "point", "[4, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=4) in its column. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1327, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=3) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 2351, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 2368, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 1]": "point", "[3, 2]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "point", "[3, 2]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=1), Cell(i=3, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": "| Isolating the point at Cell(i=2, j=4) in its column. | The reverse of: Isolating the point at Cell(i=2, j=4) in its column. | The reverse of: Isolating the point at Cell(i=1, j=4) in its column. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1327, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=3) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 2351, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 2369, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 2]": "Av(Perm((0, 1)))", "[6, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=4) in its column. | "}], "formal_step": "insert bottommost point into row 1", "identifier": 1327, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 87, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1322, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=3): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=1), Cell(i=4, j=0): Cell(i=4, j=0), Cell(i=5, j=1): Cell(i=5, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=1, j=3). | Separating the bottommost point from cell Cell(i=1, j=3). | Isolating the point at Cell(i=1, j=4) in its column. | "}], "formal_step": "insert topmost point into row 3", "identifier": 1569, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 2370, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=2, j=4)}, {Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=1, j=1): Cell(i=3, j=1), Cell(i=1, j=3): Cell(i=3, j=3), Cell(i=2, j=0): Cell(i=4, j=0), Cell(i=3, j=1): Cell(i=5, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2371, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 6]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 4]": "point", "[7, 3]": "Av(Perm((0, 1)))", "[8, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 6]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 4]": "point", "[7, 3]": "Av(Perm((0, 1)))", "[8, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2372, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 8]": "point", "[3, 7]": "Av(Perm((0, 1)))", "[4, 4]": "Av+(Perm((0, 1)))", "[5, 1]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 6]": "point", "[8, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 9]": "point", "[3, 8]": "Av(Perm((0, 1)))", "[4, 5]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))", "[7, 0]": "point", "[8, 7]": "point", "[9, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Separating the topmost point from cell Cell(i=4, j=4). | "}], "formal_step": "We perform cell insertion into cell (4, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 2373, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 3]": "point", "[6, 3]": "Av(Perm((0, 1)))", "[7, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 6]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 4]": "point", "[7, 3]": "Av(Perm((0, 1)))", "[8, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=4) in its row. | "}], "formal_step": "insert leftmost point into col 5", "identifier": 2374, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Separating the bottommost point from cell Cell(i=3, j=0). | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Separting the rightmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=1, j=2) in its column. | Separting the rightmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 2361, "in_tiling": {"[0, 0]": "point", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 1]": "point", "[7, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=4) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=2, j=2). | Separating the topmost point from cell Cell(i=2, j=2). | Separating the bottommost point from cell Cell(i=5, j=1). | Isolating the point at Cell(i=4, j=6) in its column. | "}], "formal_step": "insert bottommost point into row 0", "identifier": 2375, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Isolated the point at Cell(i=1, j=0) in its row", "identifier": 2376, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 1]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 0]": "point", "[2, 1]": "point", "[3, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=1) in its column. | The reverse of: Separting the rightmost point from cell Cell(i=3, j=0). | The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | Separting the rightmost point from cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 2365, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=1, j=0). | Separating the bottommost point from cell Cell(i=1, j=0). | Isolating the point at Cell(i=0, j=2) in its column. | "}], "formal_step": "insert leftmost point into col 0", "identifier": 2377, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2378, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert topmost point into row 0", "identifier": 2379, "in_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=1, j=0). | Separting the rightmost point from cell Cell(i=1, j=0). | The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | "}], "formal_step": "insert leftmost point into col 1", "identifier": 2380, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| Separting the leftmost point from cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2))).", "identifier": 2381, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}}
