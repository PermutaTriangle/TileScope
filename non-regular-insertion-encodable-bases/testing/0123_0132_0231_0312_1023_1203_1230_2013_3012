0123_0132_0231_0312_1023_1203_1230_2013_3012

===========================================
Log created Sat, 24 Jun 2017 13:30:08

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1524 inferral cache hits and 626 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 1769 tilings in it right now.
There were 1026 tilings of which 142 are verified.
There were 101 SiblingNodes of which 27 are verified.

The function splittings called the partitioning cache *650* times, (56 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:30:19

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 502 inferral cache hits and 18135 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 382 tilings in it right now.
There were 294 tilings of which 30 are verified.
There were 57 SiblingNodes of which 17 are verified.

The function splittings called the partitioning cache *18140* times, (18 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:30:29

Maximum depth fully searched was 10

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 56 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 727 tilings in it right now.
There were 1147 tilings of which 593 are verified.
There were 195 SiblingNodes of which 56 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:30:39

Maximum depth fully searched was 9

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 118 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 985 tilings in it right now.
There were 1599 tilings of which 951 are verified.
There were 239 SiblingNodes of which 75 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:30:49

Maximum depth fully searched was 11

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 87 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 812 tilings in it right now.
There were 1327 tilings of which 741 are verified.
There were 208 SiblingNodes of which 61 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:30:59

Maximum depth fully searched was 9

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 106 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 1287 tilings in it right now.
There were 1679 tilings of which 921 are verified.
There were 277 SiblingNodes of which 86 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:31:09

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 80 inferral cache hits and 440 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 755 tilings in it right now.
There were 1123 tilings of which 216 are verified.
There were 198 SiblingNodes of which 44 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *472* times, (236 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:31:20

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 11 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 2097 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 2518 tilings in it right now.
There were 1361 tilings of which 153 are verified.
There were 138 SiblingNodes of which 30 are verified.

There were 0 cache misses

No proof tree was found after 11 seconds

===========================================
Log created Sat, 24 Jun 2017 13:31:31

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1990 inferral cache hits and 424 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2280 tilings in it right now.
There were 1280 tilings of which 145 are verified.
There were 191 SiblingNodes of which 36 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *456* times, (228 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:31:41

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1371 inferral cache hits and 371 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 1659 tilings in it right now.
There were 982 tilings of which 116 are verified.
There were 177 SiblingNodes of which 33 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *400* times, (200 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:31:52

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1485 inferral cache hits and 397 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 1691 tilings in it right now.
There were 1020 tilings of which 140 are verified.
There were 112 SiblingNodes of which 28 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *428* times, (214 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:32:03

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1687 inferral cache hits and 1929 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 2096 tilings in it right now.
There were 1165 tilings of which 155 are verified.
There were 179 SiblingNodes of which 40 are verified.

The function splittings called the partitioning cache *1963* times, (82 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:32:13

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1861 inferral cache hits and 1597 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2108 tilings in it right now.
There were 1270 tilings of which 148 are verified.
There were 214 SiblingNodes of which 39 are verified.

The function splittings called the partitioning cache *1626* times, (71 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:32:23

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1582 inferral cache hits and 3954 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 1745 tilings in it right now.
There were 1181 tilings of which 171 are verified.
There were 157 SiblingNodes of which 39 are verified.

The function splittings called the partitioning cache *3985* times, (81 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:32:35

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 11 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 34 inferral cache hits and 275 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 515 tilings in it right now.
There were 1214 tilings of which 200 are verified.
There were 287 SiblingNodes of which 64 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *294* times, (147 originating)
There were 0 cache misses

No proof tree was found after 11 seconds

===========================================
Log created Sat, 24 Jun 2017 13:32:45

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 25 inferral cache hits and 17968 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 382 tilings in it right now.
There were 504 tilings of which 82 are verified.
There were 113 SiblingNodes of which 30 are verified.

The function splittings called the partitioning cache *17982* times, (50 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:32:56

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 19 inferral cache hits and 197 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 786 tilings in it right now.
There were 944 tilings of which 90 are verified.
There were 177 SiblingNodes of which 33 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *210* times, (105 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:33:13

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 16 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 13 inferral cache hits and 27716 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 182 tilings in it right now.
There were 203 tilings of which 21 are verified.
There were 52 SiblingNodes of which 15 are verified.

The function splittings called the partitioning cache *27720* times, (17 originating)
There were 0 cache misses

No proof tree was found after 16 seconds

===========================================
Log created Sat, 24 Jun 2017 13:33:23

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 66 inferral cache hits and 378 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 1200 tilings in it right now.
There were 1370 tilings of which 244 are verified.
There were 210 SiblingNodes of which 58 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *406* times, (203 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:33:33

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 40 inferral cache hits and 6989 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 1139 tilings in it right now.
There were 963 tilings of which 147 are verified.
There were 127 SiblingNodes of which 25 are verified.

The function splittings called the partitioning cache *7011* times, (71 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:33:43

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_lrm_and_rlm_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 94 inferral cache hits and 511 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 869 tilings in it right now.
There were 1208 tilings of which 227 are verified.
There were 211 SiblingNodes of which 48 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *548* times, (274 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:33:53

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_lrm_and_rlm_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 78 inferral cache hits and 8004 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 805 tilings in it right now.
There were 1094 tilings of which 223 are verified.
There were 183 SiblingNodes of which 44 are verified.

The function splittings called the partitioning cache *8032* times, (91 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:34:04

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 28 inferral cache hits and 311 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 1086 tilings in it right now.
There were 1333 tilings of which 253 are verified.
There were 219 SiblingNodes of which 54 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *334* times, (167 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:34:14

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 24 inferral cache hits and 15551 partitioning cache hits.
The partitioning cache had 7 tilings in it right now.
The inferral cache has 1044 tilings in it right now.
There were 740 tilings of which 84 are verified.
There were 84 SiblingNodes of which 16 are verified.

The function splittings called the partitioning cache *15573* times, (69 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:34:25

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 75 inferral cache hits and 409 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 1124 tilings in it right now.
There were 1002 tilings of which 80 are verified.
There were 85 SiblingNodes of which 16 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *440* times, (220 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:34:36

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 11 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 21 inferral cache hits and 12729 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 670 tilings in it right now.
There were 899 tilings of which 153 are verified.
There were 169 SiblingNodes of which 46 are verified.

The function splittings called the partitioning cache *12745* times, (46 originating)
There were 0 cache misses

No proof tree was found after 11 seconds

===========================================
Log created Sat, 24 Jun 2017 13:34:43

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 6 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 60 inferral cache hits and 380 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 693 tilings in it right now.
There were 739 tilings of which 187 are verified.
There were 128 SiblingNodes of which 33 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *408* times, (204 originating)
There were 0 cache misses

A proof tree was found in 6 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  └─────8
                        ├─────9
                        │     ├─────10
                        │     └─────11
                        │           ├─────12
                        │           └─────13
                        └─────14

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1, 2)))
3: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1, 2)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |4| | |4|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|1| | | |2|
+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 1, 2)))
3: point
4: Av(Perm((0, 1)))

Label: 5

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |3| | |3|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 6

+-+-+-+-+
| | | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point

Label: 7

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |2| | | |2|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 8

+-+-+-+-+
| | |2| |
+-+-+-+-+
|3| | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 9

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av+(Perm((0, 1, 2)))
3: point

Label: 10

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point

Label: 11

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 1)))
2: Av+(Perm((0, 1, 2)))
3: point

Label: 12

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 13

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| | |2| |
+-+-+-+-+
|3| | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 14

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1)))
2: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 49, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 50, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 51, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 52, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=1). | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 53, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 54, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 52, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 55, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 2)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=1). | The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=0). | ", "strategy_verified": false}], "formal_step": "Placing the minimum point into row 0", "identifier": 56, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 32, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | ", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 11, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=2), Cell(i=2, j=3)]", "identifier": 55, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=3, j=0), Cell(i=1, j=2): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=3)}]", "relation": "", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (4, 0); either it is empty or Av+(Perm((0, 1, 2))).", "identifier": 57, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))", "[4, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "identifier": 58, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2))).", "identifier": 59, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
