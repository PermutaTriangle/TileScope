0123_0132_0213_0231_0312_1023_1203_1230_2013_3012

===========================================
Log created Sat, 24 Jun 2017 13:26:30

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 2138 inferral cache hits and 1008 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2582 tilings in it right now.
There were 1402 tilings of which 168 are verified.
There were 135 SiblingNodes of which 32 are verified.

The function splittings called the partitioning cache *1043* times, (77 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:26:40

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 807 inferral cache hits and 18697 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 536 tilings in it right now.
There were 467 tilings of which 53 are verified.
There were 86 SiblingNodes of which 24 are verified.

The function splittings called the partitioning cache *18703* times, (23 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:26:52

Maximum depth fully searched was 11

Maximum time set at 10 seconds

Total time taken was 11 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 63 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 776 tilings in it right now.
There were 1231 tilings of which 645 are verified.
There were 206 SiblingNodes of which 59 are verified.

There were 0 cache misses

No proof tree was found after 11 seconds

===========================================
Log created Sat, 24 Jun 2017 13:27:02

Maximum depth fully searched was 9

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 86 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 1199 tilings in it right now.
There were 1427 tilings of which 761 are verified.
There were 244 SiblingNodes of which 76 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:27:12

Maximum depth fully searched was 11

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 80 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 905 tilings in it right now.
There were 1425 tilings of which 771 are verified.
There were 232 SiblingNodes of which 68 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:27:22

Maximum depth fully searched was 9

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 126 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 1381 tilings in it right now.
There were 1969 tilings of which 1089 are verified.
There were 318 SiblingNodes of which 96 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:27:32

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 102 inferral cache hits and 522 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 833 tilings in it right now.
There were 1215 tilings of which 274 are verified.
There were 214 SiblingNodes of which 53 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *560* times, (280 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:27:43

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 2931 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 3150 tilings in it right now.
There were 1759 tilings of which 287 are verified.
There were 165 SiblingNodes of which 49 are verified.

There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:27:53

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1891 inferral cache hits and 394 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2066 tilings in it right now.
There were 1224 tilings of which 97 are verified.
There were 158 SiblingNodes of which 25 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *424* times, (212 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:28:03

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1478 inferral cache hits and 412 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 1661 tilings in it right now.
There were 1079 tilings of which 123 are verified.
There were 195 SiblingNodes of which 36 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *444* times, (222 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:28:16

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 12 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1847 inferral cache hits and 429 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 2066 tilings in it right now.
There were 1268 tilings of which 198 are verified.
There were 146 SiblingNodes of which 35 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *462* times, (231 originating)
There were 0 cache misses

No proof tree was found after 12 seconds

===========================================
Log created Sat, 24 Jun 2017 13:28:26

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1720 inferral cache hits and 2108 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2228 tilings in it right now.
There were 1128 tilings of which 118 are verified.
There were 151 SiblingNodes of which 25 are verified.

The function splittings called the partitioning cache *2137* times, (73 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:28:36

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 2349 inferral cache hits and 2133 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2345 tilings in it right now.
There were 1585 tilings of which 225 are verified.
There were 278 SiblingNodes of which 55 are verified.

The function splittings called the partitioning cache *2171* times, (94 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:28:46

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1728 inferral cache hits and 2654 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 1852 tilings in it right now.
There were 1192 tilings of which 166 are verified.
There were 137 SiblingNodes of which 30 are verified.

The function splittings called the partitioning cache *2686* times, (83 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:28:57

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 35 inferral cache hits and 271 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 540 tilings in it right now.
There were 749 tilings of which 100 are verified.
There were 158 SiblingNodes of which 33 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *290* times, (145 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:29:07

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 21 inferral cache hits and 18035 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 295 tilings in it right now.
There were 450 tilings of which 70 are verified.
There were 107 SiblingNodes of which 27 are verified.

The function splittings called the partitioning cache *18050* times, (52 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:29:17

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 23 inferral cache hits and 245 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 774 tilings in it right now.
There were 851 tilings of which 85 are verified.
There were 154 SiblingNodes of which 31 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *262* times, (131 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:29:28

Maximum depth fully searched was 2

Maximum time set at 10 seconds

Total time taken was 10 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 31 inferral cache hits and 17788 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 637 tilings in it right now.
There were 576 tilings of which 74 are verified.
There were 101 SiblingNodes of which 25 are verified.

The function splittings called the partitioning cache *17804* times, (50 originating)
There were 0 cache misses

No proof tree was found after 10 seconds

===========================================
Log created Sat, 24 Jun 2017 13:29:36

Maximum depth fully searched was 3

Maximum time set at 10 seconds

Total time taken was 8 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 41 inferral cache hits and 288 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 939 tilings in it right now.
There were 1115 tilings of which 275 are verified.
There were 187 SiblingNodes of which 60 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *310* times, (155 originating)
There were 0 cache misses

A proof tree was found in 8 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  └─────8
                        ├─────9
                        └─────10

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1, 2)))
3: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1, 2)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| |4| |3|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 5

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| |4| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 6

+-+-+-+-+
| | |2| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 7

+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
|1| | |
+-+-+-+
1: point

Label: 8

+-+-+-+-+
| | |2| |
+-+-+-+-+
|3| | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
|1| | | |1| | |
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | |1| |2|
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)))
3: point

Label: 9

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)))
3: point
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point

Label: 10

+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 123, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 124, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 125, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 126, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 127, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 128, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=1, j=0). | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 86, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=4), Cell(i=1, j=2), Cell(i=2, j=1), Cell(i=4, j=4)]", "identifier": 129, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 2]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 5]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point", "[6, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=3, j=5), Cell(i=1, j=0): Cell(i=4, j=0), Cell(i=2, j=1): Cell(i=5, j=3), Cell(i=3, j=0): Cell(i=6, j=0)}, {Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=2, j=1), Cell(i=3, j=2): Cell(i=4, j=4)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=2). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 130, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1, 2)))", "[4, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "identifier": 131, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2))).", "identifier": 132, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((2, 0, 1, 3)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
