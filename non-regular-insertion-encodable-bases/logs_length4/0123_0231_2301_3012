0123_0231_2301_3012
Log created  Sat, 13 May 2017 04:56:45
Finding the proof tree took 713 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     └─────9
                        │           ├─────10
                        │           │     ├─────11
                        │           │     ├─────12
                        │           │     └─────13
                        │           └─────14
                        │                 ├─────15
                        │                 ├─────16
                        │                 └─────17
                        └─────18
                              ├─────19
                              └─────20

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 5

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 6

+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 7

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point

Label: 8

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 9

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: Av+(Perm((0, 1)))
3: point
4: Av(Perm((0, 1)))

Label: 10

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | |3| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 11

+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 12

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| |3| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| |3| |3| | | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))

Label: 15

+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| |2| |2| | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 16

+-+
|1|
+-+
1: point

Label: 17

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 18

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|1| | |1| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 19

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 20

+-+-+-+-+-+-+-+
|1| | | |3| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2359, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2360, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2361, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2362, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1161, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=1). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=1), Cell(i=2, j=4)]", "identifier": 2363, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=3, j=1), Cell(i=1, j=3): Cell(i=3, j=3), Cell(i=2, j=2): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=0, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=4)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 696, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 0]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=4). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 3, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=5, j=0), Cell(i=6, j=5)]", "identifier": 2364, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=1, j=5): Cell(i=1, j=7), Cell(i=2, j=4): Cell(i=2, j=6), Cell(i=3, j=2): Cell(i=3, j=3), Cell(i=4, j=0): Cell(i=4, j=1), Cell(i=5, j=3): Cell(i=7, j=4)}, {Cell(i=0, j=0): Cell(i=5, j=0)}, {Cell(i=0, j=0): Cell(i=6, j=5)}]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=6). | Inserting the bottom most point in to the cell Cell(i=1, j=6). | "}], "formal_step": "Placing the minimum point into row 0", "identifier": 2365, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 696, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=4). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=0). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2366, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2367, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 5]": "Av+(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[5, 6]": "point", "[6, 5]": "Av(Perm((0, 1)))", "[7, 3]": "Av(Perm((0, 1)))", "[8, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=4, j=5). | "}], "formal_step": "We perform cell insertion into cell (3, 5); either it is empty or Av+(Perm((0, 1))).", "identifier": 1546, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=3). | Inserting the bottom most point in to the cell Cell(i=0, j=3). | "}], "formal_step": "Placing the leftmost point into column 0", "identifier": 2368, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1))).", "identifier": 2369, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1))).", "identifier": 295, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2))).", "identifier": 2370, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}}
