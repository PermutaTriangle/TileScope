0132_1320_2301_3120
Log created  Wed, 03 May 2017 00:22:56
Finding the proof tree took 244 seconds
The depth searched was 8

Strategies applied: standard_strategies_w_all_cols
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     └─────9
                        │           ├─────10
                        │           └─────11
                        │                 ├─────12
                        │                 ├─────13
                        │                 │     ├─────14
                        │                 │     └─────15
                        │                 └─────16
                        └─────17
                              ├─────18
                              │     ├─────19
                              │     │     ├─────20
                              │     │     └─────21
                              │     └─────22
                              └─────23
                                    ├─────24
                                    │     ├─────25
                                    │     │     ├─────26
                                    │     │     │     ├─────27
                                    │     │     │     │     ├─────28
                                    │     │     │     │     └─────29
                                    │     │     │     └─────30
                                    │     │     └─────31
                                    │     └─────32
                                    └─────33
                                          ├─────34
                                          └─────35

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 5

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 6

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 7

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))

Label: 8

+-+-+-+
| |3| |
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 9

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 10

+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 11

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))

Label: 12

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 13

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 14

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 15

+-+
|1|
+-+
1: point

Label: 16

+-+-+-+
| |1| |
+-+-+-+
|1| | |
+-+-+-+
| | |1|
+-+-+-+
1: point

Label: 17

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 18

+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 19

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 20

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point

Label: 21

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 22

+-+
|1|
+-+
1: point

Label: 23

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 24

+-+-+-+-+-+-+
| | |5| | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 25

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 26

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 27

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 28

+-+-+-+-+
| | |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 29

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))

Label: 30

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 31

+-+
|1|
+-+
1: point

Label: 32

+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 33

+-+-+-+-+-+-+
| | | |5| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |4| | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))
5: Av(Perm((1, 0)))

Label: 34

+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |4| | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 35

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1430, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1431, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1432, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1433, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((1, 0)))", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((1, 0)))", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1434, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[2, 3]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "point", "[4, 5]": "Av(Perm((1, 0)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | Inserting the bottom most point in to the cell Cell(i=3, j=4). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1435, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1)))", "[3, 5]": "Av+(Perm((1, 0)))", "[4, 2]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1)))", "[3, 5]": "Av+(Perm((1, 0)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1236, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=3)]", "identifier": 1436, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1437, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 1438, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1236, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1211, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1439, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 34, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0))).", "identifier": 11, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 1440, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))", "[2, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1441, "in_tiling": {"[0, 0]": "point", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1442, "in_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 6]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 2]": "point", "[6, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=3, j=1). | "}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 1443, "in_tiling": {"[0, 0]": "point", "[1, 3]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[2, 5]": "Av(Perm((1, 0)))", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=1, j=3). | "}, {"children": [], "formal_step": "recurse", "identifier": 1444, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 2, 0))).", "identifier": 1429, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1)]", "identifier": 1445, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 4]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=2): Cell(i=3, j=3), Cell(i=3, j=3): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1446, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 2]": "Av+(Perm((0, 1)))", "[5, 4]": "Av(Perm((1, 0)))", "[6, 5]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 7]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 5]": "Av(Perm((1, 0)))", "[7, 6]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=2). | "}], "formal_step": "We perform cell insertion into cell (3, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1447, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 6]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 6]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 5]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1448, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 6]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=3, j=2). | Inserting the bottom most point in to the cell Cell(i=2, j=0). | Inserting the right most point in to the cell Cell(i=4, j=3). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1449, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[3, 5]": "Av+(Perm((1, 0)))", "[4, 2]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[4, 6]": "Av+(Perm((1, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "We perform cell insertion into cell (3, 6); either it is empty or Av+(Perm((1, 0))).", "identifier": 1450, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[3, 6]": "Av(Perm((1, 0)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[3, 6]": "Av(Perm((1, 0)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 1444, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 4); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 1212, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))", "[1, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))", "[1, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 1", "identifier": 34, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2))).", "identifier": 0, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0))).", "identifier": 1451, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0))).", "identifier": 1452, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}}
