0132_1023_2301

===========================================
Log created Wed, 28 Jun 2017 00:18:13

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3612 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 4 symmetries of the basis were used

There were 540425 inferral cache hits and 7225626 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 238459 tilings of which 17743 are verified.
There were 17055 SiblingNodes of which 954 are verified.

The function splittings called the partitioning cache *7229037* times, (14511 originating)
There were 0 cache misses

No proof tree was found after 3612 seconds

===========================================
Log created Wed, 28 Jun 2017 00:28:05

Maximum depth fully searched was 3

Maximum time set at 3600 seconds

Total time taken was 590 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 4 symmetries of the basis were used

There were 100512 inferral cache hits and 1542312 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 50474 tilings of which 6040 are verified.
There were 4376 SiblingNodes of which 447 are verified.

The function splittings called the partitioning cache *1542950* times, (2487 originating)
There were 0 cache misses

A proof tree was found in 590 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            ├─────4
            │     ├─────5
            │     └─────6
            │           ├─────7
            │           │     ├─────8
            │           │     └─────9
            │           ├─────10
            │           │     ├─────11
            │           │     │     ├─────12
            │           │     │     │     ├─────13
            │           │     │     │     ├─────14
            │           │     │     │     │     ├─────15
            │           │     │     │     │     └─────16
            │           │     │     │     └─────17
            │           │     │     └─────18
            │           │     └─────19
            │           │           ├─────20
            │           │           │     ├─────21
            │           │           │     │     ├─────22
            │           │           │     │     └─────23
            │           │           │     └─────24
            │           │           └─────25
            │           └─────26
            │                 ├─────27
            │                 └─────28
            └─────29
                  ├─────30
                  └─────31
                        ├─────32
                        │     ├─────33
                        │     │     ├─────34
                        │     │     └─────35
                        │     └─────36
                        └─────37

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
3: point

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 5

+-+-+
| |1|
+-+-+
|2| |
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 6

+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |2| |3|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 7

+-+-+-+-+
| | | |1|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))

Label: 8

+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 9

+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 10

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| |3|1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |2| |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 11

+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 12

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |3| | |3| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))

Label: 13

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 14

+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |3| | |3| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | |3| | | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 15

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 16

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |3| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 17

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 18

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 19

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |2| |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |4| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |3| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |3| |3| |3| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
| | | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |3| | |3| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 20

+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |2| |2| |2| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| | | |3| | | | | |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 21

+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | |3| | | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))

Label: 22

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |2| |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| |3|1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))

Label: 23

+-+
|1|
+-+
1: point

Label: 24

+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 25

+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 26

+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 27

+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 28

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 29

+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 30

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
2: point

Label: 31

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|4| | |5| |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | |3| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 32

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|4| | |5| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | |3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|3| |4| |5| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 33

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| |4| |5|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 34

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 35

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|3| |4| |5|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))

Label: 36

+-+
|1|
+-+
1: point

Label: 37

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
|2| | |3| |2|1|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| |3|1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1144, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1145, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1146, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=0) in its column. | a symmetry. | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1147, "in_tiling": {"[0, 2]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | a symmetry. | The reverse of: Inserting the right most point in to the cell Cell(i=2, j=1). | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1148, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 3]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | The reverse of: Separting the rightmost point from cell Cell(i=1, j=3). | ", "strategy_verified": true}], "formal_step": "insert topmost point into row 1", "identifier": 1149, "in_tiling": {"[0, 2]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[5, 5]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | The reverse of: Separting the rightmost point from cell Cell(i=3, j=1). | Inserting the right most point in to the cell Cell(i=3, j=1). | The reverse of: a symmetry. | ", "strategy_verified": false}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1150, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1151, "in_tiling": {"[0, 3]": "point", "[1, 6]": "point", "[2, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 0]": "point", "[6, 5]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 1]": "Av+(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=1). | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1152, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 5]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 0]": "point", "[6, 4]": "point"}, "out_tiling": {"[0, 6]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 8]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 2]": "Av(Perm((0, 1)))", "[6, 1]": "point", "[7, 0]": "point", "[8, 7]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=2). | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1153, "in_tiling": {"[0, 1]": "point", "[1, 6]": "point", "[2, 5]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[5, 0]": "point", "[6, 4]": "Av(Perm((0, 1)))", "[7, 3]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 2]": "Av(Perm((0, 1)))", "[5, 1]": "point", "[6, 0]": "point", "[7, 5]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | ", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1154, "in_tiling": {"[0, 1]": "point", "[1, 6]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 6]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "insert topmost point into row 4", "identifier": 1155, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 0]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 0]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1156, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 7]": "point", "[4, 6]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 7]": "point", "[4, 6]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=1). | Inserting the top most point in to the cell Cell(i=1, j=1). | ", "strategy_verified": true}], "formal_step": "insert rightmost point into col 1", "identifier": 1157, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[5, 0]": "point", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[5, 0]": "point", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1142, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "recurse": "[]", "relation": "| a symmetry. | The reverse of: Isolating the point at Cell(i=0, j=3) in its row. | a symmetry. | The reverse of: Isolating the point at Cell(i=1, j=0) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1145, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 1158, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 7]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 6]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 0]": "point", "[6, 6]": "Av(Perm((0, 1)))", "[7, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 7]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 6]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 0]": "point", "[6, 6]": "Av(Perm((0, 1)))", "[7, 5]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=6): Cell(i=2, j=7), Cell(i=3, j=1): Cell(i=3, j=2), Cell(i=3, j=3): Cell(i=3, j=4), Cell(i=3, j=5): Cell(i=3, j=6), Cell(i=4, j=0): Cell(i=4, j=1), Cell(i=5, j=5): Cell(i=6, j=6), Cell(i=6, j=4): Cell(i=7, j=5)}, {Cell(i=0, j=0): Cell(i=5, j=0)}]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1159, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 10]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[3, 9]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 8]": "point", "[6, 7]": "Av(Perm((0, 1)))", "[7, 0]": "point", "[8, 6]": "Av(Perm((0, 1)))", "[9, 5]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 10]": "point", "[3, 9]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 1)))", "[5, 8]": "Av(Perm((0, 1)))", "[6, 7]": "point", "[7, 0]": "point", "[8, 6]": "Av(Perm((0, 1)))", "[9, 5]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=5, j=7). | Inserting the bottom most point in to the cell Cell(i=5, j=7). | The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=1). | Inserting the top most point in to the cell Cell(i=3, j=1). | ", "strategy_verified": true}], "formal_step": "insert leftmost point into col 5", "identifier": 1160, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 7]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 6]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 6]": "Av(Perm((0, 1)))", "[8, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 7]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 6]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 6]": "Av(Perm((0, 1)))", "[8, 5]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1161, "in_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 8]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 0]": "point", "[8, 6]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 8]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 0]": "point", "[8, 6]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "insert topmost point into row 1", "identifier": 1162, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 8]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 7]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 7]": "Av(Perm((0, 1)))", "[7, 0]": "point", "[8, 7]": "Av(Perm((0, 1)))", "[9, 6]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=1). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 1142, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=0) in its column. | The reverse of: a symmetry. | Isolating the point at Cell(i=0, j=3) in its row. | The reverse of: a symmetry. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1163, "in_tiling": {"[0, 2]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 6]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 5]": "point", "[5, 3]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=5, j=3). | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1164, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 7]": "point", "[4, 6]": "Av(Perm((0, 1)))", "[5, 2]": "Av(Perm((0, 1)))", "[6, 1]": "point", "[7, 5]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 6]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 7]": "point", "[6, 4]": "Av(Perm((0, 1)))", "[7, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | ", "strategy_verified": true}], "formal_step": "insert rightmost point into col 6", "identifier": 1165, "in_tiling": {"[0, 3]": "point", "[1, 6]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 6]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert rightmost point into col 4", "identifier": 243, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Separting the rightmost point from cell Cell(i=2, j=1). | Isolating the point at Cell(i=0, j=0) in its column. | a symmetry. | The reverse of: Isolating the point at Cell(i=1, j=0) in its column. | Isolating the point at Cell(i=0, j=1) in its row. | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1))).", "identifier": 1166, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1167, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | ", "strategy_verified": true}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1166, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=0) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 237, "in_tiling": {"[0, 3]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 4]": "point", "[4, 0]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[5, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=1). | Separting the leftmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=3, j=0) in its column. | a symmetry. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 0", "identifier": 22, "in_tiling": {"[0, 2]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1145, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 1168, "in_tiling": {"[0, 1]": "Av(Perm((1, 0)))", "[0, 3]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[4, 0]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 4]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[5, 0]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=3): Cell(i=3, j=4), Cell(i=4, j=0): Cell(i=4, j=1), Cell(i=4, j=2): Cell(i=4, j=3)}, {Cell(i=0, j=0): Cell(i=5, j=0)}]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=1). | Inserting the bottom most point in to the cell Cell(i=0, j=1). | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1142, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 0]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=5, j=3). | Inserting the bottom most point in to the cell Cell(i=5, j=3). | The reverse of: a symmetry. | The reverse of: Inserting the top most point in to the cell Cell(i=5, j=3). | Inserting the bottom most point in to the cell Cell(i=5, j=3). | a symmetry. | The reverse of: Isolating the point at Cell(i=0, j=3) in its row. | a symmetry. | The reverse of: Isolating the point at Cell(i=1, j=0) in its column. | ", "strategy_verified": false}], "formal_step": "insert rightmost point into col 5", "identifier": 237, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[5, 1]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0)))", "[0, 3]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[4, 0]": "point", "[5, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | The reverse of: Isolating the point at Cell(i=3, j=0) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=2, j=0) in its column. | Inserting the right most point in to the cell Cell(i=0, j=1). | ", "strategy_verified": false}], "formal_step": "insert rightmost point into col 4", "identifier": 1169, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=0) in its column. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 0", "identifier": 1170, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | The reverse of: Separating the topmost point from cell Cell(i=0, j=0). | Inserting the top most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 0", "identifier": 1171, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
