0132_0321_3120

===========================================
Log created Thu, 01 Jun 2017 04:11:19

Maximum depth fully searched was 5

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 20341 inferral cache hits and 46614 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 72456 tilings in it right now.
There were 32423 tilings of which 3524 are verified.
There were 12083 SiblingNodes of which 565 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *49416* times, (24744 originating)
There were 4 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Thu, 01 Jun 2017 04:41:24

Maximum depth fully searched was 5

Maximum time set at 1800 seconds

Total time taken was 1804 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 13569 inferral cache hits and 4356175 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 46569 tilings in it right now.
There were 23190 tilings of which 2964 are verified.
There were 10023 SiblingNodes of which 1011 are verified.

The function splittings called the partitioning cache *4358198* times, (9132 originating)
There were 0 cache misses

No proof tree was found after 1804 seconds

===========================================
Log created Thu, 01 Jun 2017 05:11:25

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 12554 inferral cache hits and 30522 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 38378 tilings in it right now.
There were 19474 tilings of which 1694 are verified.
There were 4844 SiblingNodes of which 267 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *32462* times, (16239 originating)
There were 1 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Thu, 01 Jun 2017 05:41:25

Maximum depth fully searched was 5

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 21557 inferral cache hits and 2393698 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 63321 tilings in it right now.
There were 32027 tilings of which 3018 are verified.
There were 7680 SiblingNodes of which 565 are verified.

The function splittings called the partitioning cache *2396831* times, (12600 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Thu, 01 Jun 2017 06:11:26

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 172538 inferral cache hits and 34395 partitioning cache hits.
The partitioning cache had 6 tilings in it right now.
The inferral cache has 55658 tilings in it right now.
There were 25288 tilings of which 1866 are verified.
There were 6647 SiblingNodes of which 363 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *36614* times, (18324 originating)
There were 2 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Thu, 01 Jun 2017 06:41:28

Maximum depth fully searched was 5

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 326017 inferral cache hits and 2861209 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 45177 tilings of which 3786 are verified.
There were 10761 SiblingNodes of which 767 are verified.

The function splittings called the partitioning cache *2865094* times, (15458 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Thu, 01 Jun 2017 07:11:20

Maximum depth fully searched was 10

Maximum time set at 1800 seconds

Total time taken was 1791 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1848 inferral cache hits and 13198 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 6318 tilings in it right now.
There were 5656 tilings of which 2269 are verified.
There were 3356 SiblingNodes of which 731 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *13884* times, (6974 originating)
There were 3 cache misses

A proof tree was found in 1791 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           │     ├─────12
                        │     │           │     └─────13
                        │     │           └─────14
                        │     │                 ├─────15
                        │     │                 └─────16
                        │     │                       ├─────17
                        │     │                       └─────18
                        │     │                             ├─────19
                        │     │                             │     ├─────20
                        │     │                             │     │     ├─────21
                        │     │                             │     │     └─────22
                        │     │                             │     └─────23
                        │     │                             ├─────24
                        │     │                             └─────25
                        │     │                                   ├─────26
                        │     │                                   │     ├─────27
                        │     │                                   │     └─────28
                        │     │                                   └─────29
                        │     └─────30
                        │           ├─────31
                        │           │     ├─────32
                        │           │     │     ├─────33
                        │           │     │     └─────34
                        │           │     │           ├─────35
                        │           │     │           │     ├─────36
                        │           │     │           │     │     ├─────37
                        │           │     │           │     │     │     ├─────38
                        │           │     │           │     │     │     └─────39
                        │           │     │           │     │     ├─────40
                        │           │     │           │     │     └─────41
                        │           │     │           │     └─────42
                        │           │     │           │           ├─────43
                        │           │     │           │           │     ├─────44
                        │           │     │           │           │     └─────45
                        │           │     │           │           └─────46
                        │           │     │           ├─────47
                        │           │     │           └─────48
                        │           │     └─────49
                        │           │           ├─────50
                        │           │           │     ├─────51
                        │           │           │     └─────52
                        │           │           │           ├─────53
                        │           │           │           └─────54
                        │           │           └─────55
                        │           │                 ├─────56
                        │           │                 │     ├─────57
                        │           │                 │     │     ├─────58
                        │           │                 │     │     └─────59
                        │           │                 │     └─────60
                        │           │                 │           ├─────61
                        │           │                 │           │     ├─────62
                        │           │                 │           │     └─────63
                        │           │                 │           └─────64
                        │           │                 └─────65
                        │           │                       ├─────66
                        │           │                       ├─────67
                        │           │                       │     ├─────68
                        │           │                       │     └─────69
                        │           │                       └─────70
                        │           │                             ├─────71
                        │           │                             │     ├─────72
                        │           │                             │     └─────73
                        │           │                             └─────74
                        │           └─────75
                        │                 ├─────76
                        │                 ├─────77
                        │                 │     ├─────78
                        │                 │     └─────79
                        │                 └─────80
                        │                       ├─────81
                        │                       │     ├─────82
                        │                       │     │     ├─────83
                        │                       │     │     └─────84
                        │                       │     │           ├─────85
                        │                       │     │           │     ├─────86
                        │                       │     │           │     └─────87
                        │                       │     │           └─────88
                        │                       │     ├─────89
                        │                       │     └─────90
                        │                       └─────91
                        │                             ├─────92
                        │                             │     ├─────93
                        │                             │     ├─────94
                        │                             │     │     ├─────95
                        │                             │     │     │     ├─────96
                        │                             │     │     │     └─────97
                        │                             │     │     └─────98
                        │                             │     └─────99
                        │                             │           ├─────100
                        │                             │           │     ├─────101
                        │                             │           │     │     ├─────102
                        │                             │           │     │     └─────103
                        │                             │           │     └─────104
                        │                             │           └─────105
                        │                             └─────106
                        │                                   ├─────107
                        │                                   ├─────108
                        │                                   ├─────109
                        │                                   │     ├─────110
                        │                                   │     └─────111
                        │                                   └─────112
                        │                                         ├─────113
                        │                                         │     ├─────114
                        │                                         │     │     ├─────115
                        │                                         │     │     └─────116
                        │                                         │     └─────117
                        │                                         └─────118
                        └─────119
                              ├─────120
                              └─────121
                                    ├─────122
                                    │     ├─────123
                                    │     │     ├─────124
                                    │     │     └─────125
                                    │     └─────126
                                    │           ├─────127
                                    │           └─────128
                                    └─────129
                                          ├─────130
                                          │     ├─────131
                                          │     └─────132
                                          │           ├─────133
                                          │           │     ├─────134
                                          │           │     └─────135
                                          │           └─────136
                                          │                 ├─────137
                                          │                 │     ├─────138
                                          │                 │     │     ├─────139
                                          │                 │     │     └─────140
                                          │                 │     └─────141
                                          │                 └─────142
                                          ├─────143
                                          └─────144
                                                ├─────145
                                                │     ├─────146
                                                │     │     ├─────147
                                                │     │     │     ├─────148
                                                │     │     │     └─────149
                                                │     │     │           ├─────150
                                                │     │     │           │     ├─────151
                                                │     │     │           │     └─────152
                                                │     │     │           └─────153
                                                │     │     └─────154
                                                │     └─────155
                                                └─────156
                                                      ├─────157
                                                      │     ├─────158
                                                      │     ├─────159
                                                      │     ├─────160
                                                      │     ├─────161
                                                      │     └─────162
                                                      ├─────163
                                                      └─────164
                                                            ├─────165
                                                            └─────166

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((2, 1, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))

Label: 5

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))

Label: 6

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))

Label: 7

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 8

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 9

+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |2| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av(Perm((1, 0)))

Label: 10

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 11

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | |3|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 12

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 15

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av(Perm((0, 1)))

Label: 16

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 17

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 18

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 19

+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |2| |1| |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 20

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 21

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))

Label: 22

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 23

+-+
|1|
+-+
1: point

Label: 24

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | |1|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point

Label: 25

+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| |2| |1| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 26

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 27

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 28

+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 0)))

Label: 29

+-+
|1|
+-+
1: point

Label: 30

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 31

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 32

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 33

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))

Label: 34

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 35

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 36

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 37

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 38

+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0)))

Label: 39

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 40

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 41

+-+
|1|
+-+
1: point

Label: 42

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 43

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 44

+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 45

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 46

+-+
|1|
+-+
1: point

Label: 47

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 48

+-+
|1|
+-+
1: point

Label: 49

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | |3| |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 50

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | |3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))

Label: 51

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 52

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 53

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 54

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 55

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | |3| |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 56

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 57

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
|2| | | | | |3|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 58

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 59

+-+
|1|
+-+
1: point

Label: 60

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 61

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 62

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 63

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 64

+-+
|1|
+-+
1: point

Label: 65

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 66

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| |
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 67

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 68

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 69

+-+
|1|
+-+
1: point

Label: 70

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| | |1| | |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 71

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 72

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 73

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| | |1| |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 74

+-+
|1|
+-+
1: point

Label: 75

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 76

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 77

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 78

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 79

+-+
|1|
+-+
1: point

Label: 80

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| |4| |5|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))
5: Av(Perm((1, 0)))

Label: 81

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|3| |4| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
4: Av+(Perm((0, 1)))

Label: 82

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))

Label: 83

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 84

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))

Label: 85

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))

Label: 86

+-+-+-+
| |1| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))

Label: 87

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))

Label: 88

+-+
|1|
+-+
1: point

Label: 89

+-+
|1|
+-+
1: point

Label: 90

+-+
|1|
+-+
1: Av(Perm((0, 1)), Perm((1, 0)))

Label: 91

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| |4| |5|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))
5: Av+(Perm((1, 0)))

Label: 92

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 93

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 94

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| | | |4|
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 95

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 96

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 97

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 98

+-+
|1|
+-+
1: point

Label: 99

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| | | |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 100

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 101

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))

Label: 102

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))

Label: 103

+-+
|1|
+-+
1: point

Label: 104

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 105

+-+
|1|
+-+
1: point

Label: 106

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| |1| |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 107

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |1| |1| |1|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point

Label: 108

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|1| | | |1| |1|
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point

Label: 109

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| | | |4|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 110

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 111

+-+
|1|
+-+
1: point

Label: 112

+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
|2| |3| |1| | |4|
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 113

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| |1| |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 114

+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))

Label: 115

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))

Label: 116

+-+
|1|
+-+
1: point

Label: 117

+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|2| |3| |1| |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 118

+-+
|1|
+-+
1: point

Label: 119

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 120

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 121

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 122

+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))

Label: 123

+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|2| |3| |4| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 124

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 125

+-+
|1|
+-+
1: point

Label: 126

+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|2| |3| |4| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 127

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((2, 1, 0)))
4: Av(Perm((1, 0)))

Label: 128

+-+
|1|
+-+
1: point

Label: 129

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 130

+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| |3| |4| |4|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 131

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av+(Perm((1, 0)))

Label: 132

+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| |3| |4| |4|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 133

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | |3| |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 134

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 135

+-+
|1|
+-+
1: point

Label: 136

+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
|2| | | | | |3|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | |3| | |
+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | |3|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 137

+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |4| | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
|2| | | | | |3|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
|2| | | | |3|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 138

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 139

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 140

+-+
|1|
+-+
1: point

Label: 141

+-+
|1|
+-+
1: Av+(Perm((1, 0)))

Label: 142

+-+
|1|
+-+
1: Av+(Perm((1, 0)))

Label: 143

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1| | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point

Label: 144

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 145

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 146

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 147

+-+-+-+-+-+-+
| | |3| |4| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0)))
4: Av+(Perm((1, 0)))

Label: 148

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 149

+-+-+-+-+-+-+
| | |3| |4| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0)))
4: Av+(Perm((1, 0)))

Label: 150

+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | | | |3| | | | |
+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 151

+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | |3| | |
+-+-+-+-+-+-+-+-+
| | | |3| | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 152

+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | | | | | |4| | |
+-+-+-+-+-+-+-+-+-+
| | | | |4| | | | |
+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |3| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 153

+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 154

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av(Perm((1, 0)))

Label: 155

+-+
|1|
+-+
1: point

Label: 156

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|2| |3| | |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 157

+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | |3|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 158

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))

Label: 159

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 160

+-+
|1|
+-+
1: point

Label: 161

+-+
|1|
+-+
1: Av+(Perm((1, 0)))

Label: 162

+-+
|1|
+-+
1: point

Label: 163

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|1| | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point

Label: 164

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
|2| |3| | | |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 165

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|2| |3| | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 166

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2049, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2050, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2051, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2052, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=1). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 90, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=1)]", "identifier": 2053, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "point", "[4, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "point", "[4, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2054, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=3). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2055, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2056, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2057, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1956, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=3)]", "identifier": 2058, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=2): Cell(i=4, j=2), Cell(i=4, j=1): Cell(i=5, j=1), Cell(i=5, j=2): Cell(i=6, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 2059, "in_tiling": {"[0, 4]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2060, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=3). | "}, {"children": [], "formal_step": "recurse", "identifier": 2057, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1981, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=6, j=3)]", "identifier": 2061, "in_tiling": {"[0, 4]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))", "[6, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))", "[6, 3]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=2): Cell(i=3, j=2), Cell(i=4, j=1): Cell(i=4, j=1), Cell(i=5, j=2): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=6, j=3)}]", "relation": ""}], "formal_step": "Placing the maximum point into row 2", "identifier": 2057, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 2); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 2062, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 2063, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 494, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 90, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2064, "in_tiling": {"[0, 1]": "point", "[1, 3]": "Av(Perm((1, 0)))", "[2, 4]": "point", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=4, j=2). | "}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2065, "in_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 3]": "point", "[2, 1]": "Av(Perm((1, 0)))", "[3, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=1). | "}, {"children": [], "formal_step": "recurse", "identifier": 2066, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1))).", "identifier": 87, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 68, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=3), Cell(i=3, j=0)]", "identifier": 2067, "in_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 4]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 4]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=2): Cell(i=4, j=4), Cell(i=3, j=1): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2068, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2066, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((1, 0))).", "identifier": 83, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=1)]", "identifier": 2069, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=1)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 2066, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 68, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=3), Cell(i=4, j=0)]", "identifier": 2070, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=2): Cell(i=3, j=4), Cell(i=3, j=1): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=0)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1))).", "identifier": 2071, "in_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2072, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2073, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 6]": "point", "[4, 0]": "point", "[5, 4]": "point", "[6, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 6]": "point", "[4, 0]": "point", "[5, 4]": "point", "[6, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2074, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 2075, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 2); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 2076, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2071, "in_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=5, j=1)]", "identifier": 2077, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 0]": "point", "[5, 1]": "point", "[6, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 0]": "point", "[5, 1]": "point", "[6, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=4): Cell(i=3, j=5), Cell(i=4, j=0): Cell(i=4, j=0), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=5, j=1)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2072, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2078, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1945, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=2)]", "identifier": 2079, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "point", "[5, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "point", "[5, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=3, j=1), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 2078, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2080, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 6]": "Av(Perm((1, 0)))", "[3, 7]": "point", "[4, 0]": "point", "[5, 4]": "point", "[6, 1]": "point", "[7, 5]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 7]": "Av(Perm((1, 0)))", "[3, 8]": "point", "[4, 0]": "point", "[5, 4]": "point", "[6, 1]": "point", "[7, 5]": "Av(Perm((1, 0)))", "[8, 6]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=7, j=5). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 2078, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=2)]", "identifier": 2081, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=4, j=1), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=2)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2075, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2082, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1990, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=1)]", "identifier": 2083, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=2): Cell(i=3, j=3), Cell(i=4, j=1): Cell(i=5, j=2), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 2082, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 2); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 2084, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1657, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 517, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2085, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 6]": "point", "[4, 3]": "point", "[5, 0]": "point", "[6, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 6]": "Av(Perm((1, 0)))", "[3, 7]": "point", "[4, 3]": "point", "[5, 0]": "point", "[6, 4]": "Av(Perm((1, 0)))", "[7, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=6, j=4). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 125, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=0)]", "identifier": 1639, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "point", "[5, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=2, j=2), Cell(i=3, j=0): Cell(i=3, j=1), Cell(i=4, j=1): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=4, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2086, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 3]": "point", "[5, 0]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 3]": "point", "[5, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2087, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2088, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 127, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=0)]", "identifier": 2089, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=2, j=2), Cell(i=3, j=0): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=4, j=0)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 2088, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 521, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=0), Cell(i=4, j=2)]", "identifier": 2090, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=3), Cell(i=1, j=2): Cell(i=1, j=4), Cell(i=2, j=1): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=5, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2091, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 6]": "Av(Perm((1, 0)))", "[3, 7]": "point", "[4, 4]": "point", "[5, 0]": "point", "[6, 1]": "point", "[7, 5]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 7]": "Av(Perm((1, 0)))", "[3, 8]": "point", "[4, 4]": "point", "[5, 0]": "point", "[6, 1]": "point", "[7, 5]": "Av(Perm((1, 0)))", "[8, 6]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=7, j=5). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2078, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2092, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1916, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=2)]", "identifier": 2093, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 0]": "point", "[5, 1]": "point", "[6, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 0]": "point", "[5, 1]": "point", "[6, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=4, j=0), Cell(i=4, j=1): Cell(i=5, j=1), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=2)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2088, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=0)]", "identifier": 523, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=2, j=2), Cell(i=3, j=0): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2092, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1936, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=5, j=2)]", "identifier": 2094, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=1): Cell(i=4, j=1), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=5, j=2)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 2092, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 2095, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 3]": "point", "[3, 0]": "point", "[4, 3]": "point", "[5, 1]": "point", "[6, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 3]": "point", "[3, 0]": "point", "[4, 3]": "point", "[5, 1]": "point", "[6, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 2096, "in_tiling": {"[0, 3]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "point", "[4, 3]": "point", "[5, 1]": "point", "[6, 3]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "point", "[4, 3]": "point", "[5, 1]": "point", "[6, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 2092, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=2)]", "identifier": 2097, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=1): Cell(i=5, j=1), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 523, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=5, j=1)]", "identifier": 2098, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=5, j=1)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2099, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (6, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 2048, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=5, j=1)]", "identifier": 2100, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "point", "[5, 1]": "point", "[6, 2]": "point", "[7, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "point", "[5, 1]": "point", "[6, 2]": "point", "[7, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=2): Cell(i=4, j=3), Cell(i=5, j=1): Cell(i=6, j=2), Cell(i=6, j=2): Cell(i=7, j=3)}, {Cell(i=0, j=0): Cell(i=5, j=1)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 2099, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 2101, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (6, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1642, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point", "[6, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "point", "[6, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 516, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 125, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1))).", "identifier": 64, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 83, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 64, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 1908, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 1, 0)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=1): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=5, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 63, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 1902, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=3, j=2): Cell(i=3, j=2), Cell(i=4, j=1): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=5, j=3)}]", "relation": ""}], "formal_step": "Placing the maximum point into row 1", "identifier": 654, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2102, "in_tiling": {"[0, 1]": "point", "[1, 3]": "Av(Perm((1, 0)))", "[2, 0]": "point", "[3, 4]": "Av+(Perm((1, 0)))", "[4, 5]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[2, 0]": "point", "[3, 5]": "Av+(Perm((1, 0)))", "[4, 6]": "point", "[5, 2]": "Av(Perm((1, 0)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=5, j=2). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 493, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0)))", "[3, 2]": "point", "[4, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0)))", "[3, 2]": "point", "[4, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=0)]", "identifier": 2103, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 3]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 3]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=1): Cell(i=3, j=2), Cell(i=3, j=2): Cell(i=4, j=3), Cell(i=4, j=1): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2066, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1)]", "identifier": 220, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=2): Cell(i=3, j=3), Cell(i=3, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 186, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=3)]", "identifier": 221, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 0]": "point", "[5, 5]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av+(Perm((1, 0)))", "[3, 0]": "point", "[4, 4]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=3): Cell(i=4, j=4), Cell(i=4, j=2): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=3). | "}, {"children": [], "formal_step": "recurse", "identifier": 186, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=5, j=5)]", "identifier": 2104, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "Av+(Perm((1, 0)))", "[3, 0]": "point", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 5]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 0]": "point", "[5, 5]": "Av+(Perm((1, 0)))", "[6, 6]": "point", "[7, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=3): Cell(i=2, j=3), Cell(i=3, j=4): Cell(i=3, j=4), Cell(i=4, j=0): Cell(i=4, j=0), Cell(i=5, j=5): Cell(i=6, j=6), Cell(i=6, j=2): Cell(i=7, j=2)}, {Cell(i=0, j=0): Cell(i=5, j=5)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=3). | "}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 2105, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 0)))", "[5, 3]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 0)))", "[5, 3]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1))).", "identifier": 2106, "in_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 0)))", "[5, 3]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 0)))", "[5, 3]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 2107, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 3]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 3]": "point", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2108, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 4]": "Av+(Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 5]": "point", "[5, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=4). | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2109, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 5]": "Av(Perm((1, 0)))", "[4, 0]": "point", "[5, 6]": "Av(Perm((1, 0)))", "[6, 7]": "point", "[7, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 5]": "Av(Perm((1, 0)))", "[4, 0]": "point", "[5, 6]": "Av(Perm((1, 0)))", "[6, 7]": "point", "[7, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2110, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 4]": "point", "[4, 6]": "Av(Perm((1, 0)))", "[5, 0]": "point", "[6, 7]": "Av(Perm((1, 0)))", "[7, 8]": "point", "[8, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 6]": "point", "[4, 4]": "point", "[5, 7]": "Av(Perm((1, 0)))", "[6, 0]": "point", "[7, 8]": "Av(Perm((1, 0)))", "[8, 9]": "point", "[9, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=5). | "}], "formal_step": "We perform cell insertion into cell (2, 5); either it is empty or Av+(Perm((1, 0))).", "identifier": 1250, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 6]": "Av(Perm((1, 0)))", "[5, 0]": "point", "[6, 7]": "Av+(Perm((1, 0)))", "[7, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 6]": "Av(Perm((1, 0)))", "[5, 0]": "point", "[6, 7]": "Av(Perm((1, 0)))", "[7, 8]": "point", "[8, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=6, j=7). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2111, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 0]": "point", "[4, 4]": "point", "[5, 6]": "Av(Perm((1, 0)))", "[6, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 6]": "point", "[4, 0]": "point", "[5, 4]": "point", "[6, 7]": "Av(Perm((1, 0)))", "[7, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=5). | "}], "formal_step": "Placing the minimum point into row 4", "identifier": 2112, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[3, 0]": "point", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[3, 0]": "point", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0))).", "identifier": 923, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[3, 0]": "point", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[3, 0]": "point", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2113, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 277, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=3)]", "identifier": 2114, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=3, j=1): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 87, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 68, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 186, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=4), Cell(i=3, j=0), Cell(i=4, j=5), Cell(i=6, j=1)]", "identifier": 2115, "in_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 5]": "Av+(Perm((1, 0)))", "[5, 6]": "point", "[6, 1]": "point", "[7, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 5]": "Av+(Perm((1, 0)))", "[5, 6]": "point", "[6, 1]": "point", "[7, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=2), Cell(i=2, j=2): Cell(i=5, j=6), Cell(i=3, j=1): Cell(i=7, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=4)}, {Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=6, j=1)}]", "relation": ""}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 2116, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 4]": "point", "[4, 1]": "point", "[5, 3]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 4]": "point", "[4, 1]": "point", "[5, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1572, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=1)]", "identifier": 2117, "in_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 3]": "Av+(Perm((1, 0)))", "[3, 4]": "point", "[4, 1]": "point", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 3]": "Av+(Perm((1, 0)))", "[3, 4]": "point", "[4, 1]": "point", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=3): Cell(i=3, j=4), Cell(i=4, j=1): Cell(i=5, j=2), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 2118, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1572, "in_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 493, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0)))", "[3, 2]": "point", "[4, 1]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0)))", "[3, 2]": "point", "[4, 1]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (4, 1); either it is empty or Av+(Perm((1, 0))).", "identifier": 172, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 1, 0))).", "identifier": 63, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the maximum point into row 1", "identifier": 49, "in_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1))).", "identifier": 6, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 1, 0))).", "identifier": 2119, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((3, 1, 2, 0))).", "identifier": 2120, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}}
