0231_0321_3021

===========================================
Log created Wed, 28 Jun 2017 12:39:41

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 4816 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 512039 inferral cache hits and 2948666 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 64515 tilings of which 1536 are verified.
There were 15840 SiblingNodes of which 558 are verified.

The function splittings called the partitioning cache *2950912* times, (8402 originating)
There were 0 cache misses

No proof tree was found after 4816 seconds

===========================================
Log created Thu, 29 Jun 2017 21:29:37

Maximum depth fully searched was 2

Maximum time set at 3600 seconds

Total time taken was 118195 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 119408 inferral cache hits and 6686245 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 26957 tilings in it right now.
There were 13705 tilings of which 411 are verified.
There were 5466 SiblingNodes of which 293 are verified.

The function splittings called the partitioning cache *6686527* times, (1435 originating)
There were 0 cache misses

No proof tree was found after 118195 seconds

===========================================
Log created Thu, 29 Jun 2017 22:29:38

Maximum depth fully searched was 17

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 13517 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 63070 tilings in it right now.
There were 40129 tilings of which 10704 are verified.
There were 32638 SiblingNodes of which 6518 are verified.

There were 0 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Thu, 29 Jun 2017 23:29:38

Maximum depth fully searched was 10

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 19526 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 62727 tilings in it right now.
There were 29905 tilings of which 8052 are verified.
There were 9195 SiblingNodes of which 1070 are verified.

There were 0 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 30 Jun 2017 00:30:07

Maximum depth fully searched was 16

Maximum time set at 3600 seconds

Total time taken was 3628 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 3734 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 23892 tilings in it right now.
There were 14866 tilings of which 6874 are verified.
There were 10215 SiblingNodes of which 2224 are verified.

There were 0 cache misses

No proof tree was found after 3628 seconds

===========================================
Log created Fri, 30 Jun 2017 01:30:11

Maximum depth fully searched was 11

Maximum time set at 3600 seconds

Total time taken was 3604 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 14809 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 48383 tilings in it right now.
There were 25367 tilings of which 7615 are verified.
There were 9251 SiblingNodes of which 1291 are verified.

There were 0 cache misses

No proof tree was found after 3604 seconds

===========================================
Log created Fri, 30 Jun 2017 02:52:01

Maximum depth fully searched was 5

Maximum time set at 3600 seconds

Total time taken was 4909 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 5362 inferral cache hits and 21656 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 26987 tilings in it right now.
There were 15766 tilings of which 1197 are verified.
There were 8055 SiblingNodes of which 513 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *23026* times, (11513 originating)
There were 0 cache misses

No proof tree was found after 4909 seconds

===========================================
Log created Fri, 30 Jun 2017 03:52:02

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 827817 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 96642 tilings of which 2007 are verified.
There were 22641 SiblingNodes of which 641 are verified.

There were 0 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 30 Jun 2017 04:40:01

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 2877 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 386707 inferral cache hits and 40868 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 47254 tilings of which 1179 are verified.
There were 17151 SiblingNodes of which 700 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *43428* times, (21731 originating)
There were 2 cache misses

A proof tree was found in 2877 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           │     ├─────11
                  │           │     └─────12
                  │           └─────13
                  │                 ├─────14
                  │                 │     ├─────15
                  │                 │     └─────16
                  │                 │           ├─────17
                  │                 │           └─────18
                  │                 └─────19
                  └─────20
                        ├─────21
                        ├─────22
                        │     ├─────23
                        │     └─────24
                        ├─────25
                        │     ├─────26
                        │     └─────27
                        └─────28
                              ├─────29
                              │     ├─────30
                              │     └─────31
                              └─────32
                                    ├─────33
                                    └─────34

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+-+
|1|1|2|
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))

Label: 5

+-+-+-+
| |2|3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 6

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 7

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+
| |2|3|
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 10

+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 11

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))

Label: 12

+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 13

+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 14

+-+-+-+
| | |4|
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 15

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 16

+-+-+-+
| | |4|
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
| | |3|
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 17

+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 18

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point

Label: 19

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 20

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 21

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 22

+-+-+-+-+
| | | |4|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1|2|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 23

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 24

+-+
|1|
+-+
1: point

Label: 25

+-+-+-+-+
| | | |4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 26

+-+-+-+
|2| |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 27

+-+
|1|
+-+
1: point

Label: 28

+-+-+-+-+
| | |2|4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |4|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 29

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 30

+-+-+-+
| | |3|
+-+-+-+
| |1| |
+-+-+-+
|1| |2|
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
| |2|3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 31

+-+
|1|
+-+
1: point

Label: 32

+-+-+-+-+
| | | |4|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|2| | |3| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 33

+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |4|
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)), Perm((2, 1, 0)))

Label: 34

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3177, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 24, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=1)]", "identifier": 22, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 3]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 3]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=1)}]", "relation": "", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 24, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3178, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=2), Cell(i=1, j=4), Cell(i=2, j=1)]", "identifier": 1117, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=3, j=3), Cell(i=1, j=0): Cell(i=4, j=0), Cell(i=1, j=2): Cell(i=4, j=5)}, {Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=2): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=1)}]", "relation": "", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1117, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[2, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 3179, "in_tiling": {"[0, 2]": "point", "[1, 6]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[4, 5]": "point", "[4, 7]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 6]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[4, 5]": "point", "[4, 7]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 3180, "in_tiling": {"[0, 0]": "point", "[1, 3]": "point", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 3]": "point", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "Isolated the point at Cell(i=2, j=2) in its column", "identifier": 3181, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[2, 4]": "point", "[2, 6]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[2, 4]": "point", "[2, 6]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert bottommost point into row 2", "identifier": 1243, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[2, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[2, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 17, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1), Cell(i=3, j=3)]", "identifier": 3179, "in_tiling": {"[0, 2]": "point", "[1, 6]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[4, 5]": "point", "[4, 7]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 6]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[4, 5]": "point", "[4, 7]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=4): Cell(i=1, j=6), Cell(i=2, j=0): Cell(i=4, j=0), Cell(i=2, j=2): Cell(i=4, j=4), Cell(i=2, j=3): Cell(i=4, j=5), Cell(i=2, j=5): Cell(i=4, j=7)}, {Cell(i=0, j=0): Cell(i=2, j=1), Cell(i=1, j=1): Cell(i=3, j=3)}]", "relation": "", "strategy_verified": false}], "formal_step": "insert topmost point into row 4", "identifier": 1000, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[4, 6]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | Isolating the point at Cell(i=1, j=4) in its row. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 2", "identifier": 16, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3182, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 70, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=2)]", "identifier": 3183, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=2)}]", "relation": "| Isolating the point at Cell(i=2, j=0) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 70, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=1)]", "identifier": 3184, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((1, 0)))", "[3, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=3) in its row. | ", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 16, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=0) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=1)]", "identifier": 3185, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=1)}]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1243, "in_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 6]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[2, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=3) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=3)]", "identifier": 3186, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point", "[3, 5]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "point", "[2, 5]": "point", "[3, 1]": "Av(Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((1, 0)))", "[4, 4]": "point", "[5, 0]": "Av(Perm((0, 2, 1)))", "[5, 6]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=1, j=5): Cell(i=2, j=5), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=2, j=3): Cell(i=3, j=3), Cell(i=3, j=4): Cell(i=4, j=4), Cell(i=4, j=0): Cell(i=5, j=0), Cell(i=4, j=6): Cell(i=5, j=6)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": "| Isolating the point at Cell(i=1, j=0) in its row. | The reverse of: Isolating the point at Cell(i=0, j=2) in its row. | Isolating the point at Cell(i=3, j=3) in its column. | ", "strategy_verified": false}], "formal_step": "insert topmost point into row 2", "identifier": 3015, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=0) in its row. | Isolating the point at Cell(i=2, j=2) in its row. | ", "strategy_verified": false}], "formal_step": "insert leftmost point into col 2", "identifier": 70, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 2, 0)), Perm((2, 1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=0) in its row. | ", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=0, j=0) in its row", "identifier": 3187, "in_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 1", "identifier": 24, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert leftmost point into col 0", "identifier": 406, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((3, 0, 2, 1)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
