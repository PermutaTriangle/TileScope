0132_1320_3120

===========================================
Log created Tue, 04 Jul 2017 12:05:33

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 9805 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 654858 inferral cache hits and 2691356 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 81155 tilings of which 5885 are verified.
There were 19978 SiblingNodes of which 1468 are verified.

The function splittings called the partitioning cache *2694741* times, (13238 originating)
There were 0 cache misses

No proof tree was found after 9805 seconds

===========================================
Log created Tue, 04 Jul 2017 14:05:35

Maximum depth fully searched was 2

Maximum time set at 7200 seconds

Total time taken was 7201 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 62621 inferral cache hits and 8980427 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 14854 tilings in it right now.
There were 10282 tilings of which 2191 are verified.
There were 6366 SiblingNodes of which 1526 are verified.

The function splittings called the partitioning cache *8980592* times, (909 originating)
There were 0 cache misses

No proof tree was found after 7201 seconds

===========================================
Log created Tue, 04 Jul 2017 16:05:41

Maximum depth fully searched was 16

Maximum time set at 7200 seconds

Total time taken was 7205 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 75980 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 69733 tilings of which 35979 are verified.
There were 20397 SiblingNodes of which 6527 are verified.

There were 0 cache misses

No proof tree was found after 7205 seconds

===========================================
Log created Tue, 04 Jul 2017 18:05:42

Maximum depth fully searched was 14

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 181477 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 169094 tilings of which 101221 are verified.
There were 31592 SiblingNodes of which 9677 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Tue, 04 Jul 2017 20:09:41

Maximum depth fully searched was 17

Maximum time set at 7200 seconds

Total time taken was 7437 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 14841 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 61553 tilings in it right now.
There were 27313 tilings of which 10406 are verified.
There were 9654 SiblingNodes of which 2955 are verified.

There were 0 cache misses

No proof tree was found after 7437 seconds

===========================================
Log created Tue, 04 Jul 2017 22:09:46

Maximum depth fully searched was 10

Maximum time set at 7200 seconds

Total time taken was 7205 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 76337 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 83635 tilings of which 26834 are verified.
There were 17388 SiblingNodes of which 3546 are verified.

There were 0 cache misses

No proof tree was found after 7205 seconds

===========================================
Log created Thu, 06 Jul 2017 04:08:28

Maximum depth fully searched was 5

Maximum time set at 7200 seconds

Total time taken was 107921 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 16317 inferral cache hits and 48243 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 72420 tilings in it right now.
There were 44815 tilings of which 5831 are verified.
There were 23695 SiblingNodes of which 2778 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *51172* times, (25624 originating)
There were 4 cache misses

No proof tree was found after 107921 seconds

===========================================
Log created Thu, 06 Jul 2017 06:08:29

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 1820702 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 196691 tilings of which 14278 are verified.
There were 32090 SiblingNodes of which 2059 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Thu, 06 Jul 2017 08:22:09

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 8018 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 286911 inferral cache hits and 33812 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 36730 tilings of which 1427 are verified.
There were 14187 SiblingNodes of which 757 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *35956* times, (17978 originating)
There were 0 cache misses

No proof tree was found after 8018 seconds

===========================================
Log created Thu, 06 Jul 2017 11:53:45

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 12695 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 393330 inferral cache hits and 42532 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 50562 tilings of which 2569 are verified.
There were 22843 SiblingNodes of which 1315 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *45238* times, (22619 originating)
There were 0 cache misses

No proof tree was found after 12695 seconds

===========================================
Log created Thu, 06 Jul 2017 13:53:47

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 999238 inferral cache hits and 93860 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 121114 tilings of which 10879 are verified.
There were 31097 SiblingNodes of which 2281 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *99630* times, (49832 originating)
There were 2 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Thu, 06 Jul 2017 16:02:48

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7740 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 321168 inferral cache hits and 2587423 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 41397 tilings of which 2760 are verified.
There were 16632 SiblingNodes of which 1337 are verified.

The function splittings called the partitioning cache *2589823* times, (9698 originating)
There were 0 cache misses

No proof tree was found after 7740 seconds

===========================================
Log created Thu, 06 Jul 2017 18:08:26

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7537 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 440308 inferral cache hits and 2512325 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 57305 tilings of which 3499 are verified.
There were 26290 SiblingNodes of which 1796 are verified.

The function splittings called the partitioning cache *2515313* times, (11924 originating)
There were 0 cache misses

No proof tree was found after 7537 seconds

===========================================
Log created Thu, 06 Jul 2017 21:19:08

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 11440 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 286293 inferral cache hits and 1099694 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 98769 tilings in it right now.
There were 37354 tilings of which 2469 are verified.
There were 9310 SiblingNodes of which 577 are verified.

The function splittings called the partitioning cache *1101594* times, (7090 originating)
There were 0 cache misses

No proof tree was found after 11440 seconds

===========================================
Log created Thu, 06 Jul 2017 23:37:25

Maximum depth fully searched was 5

Maximum time set at 7200 seconds

Total time taken was 8296 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 10773 inferral cache hits and 34131 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 51310 tilings in it right now.
There were 30191 tilings of which 3650 are verified.
There were 15472 SiblingNodes of which 2011 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *36252* times, (18126 originating)
There were 0 cache misses

No proof tree was found after 8296 seconds

===========================================
Log created Fri, 07 Jul 2017 01:51:33

Maximum depth fully searched was 5

Maximum time set at 7200 seconds

Total time taken was 8047 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 11800 inferral cache hits and 6495733 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 58111 tilings in it right now.
There were 32915 tilings of which 3732 are verified.
There were 16207 SiblingNodes of which 1597 are verified.

The function splittings called the partitioning cache *6498147* times, (10890 originating)
There were 0 cache misses

No proof tree was found after 8047 seconds

===========================================
Log created Fri, 07 Jul 2017 03:57:52

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7578 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 11500 inferral cache hits and 44250 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 55447 tilings of which 2423 are verified.
There were 16841 SiblingNodes of which 689 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *46996* times, (23507 originating)
There were 1 cache misses

No proof tree was found after 7578 seconds

===========================================
Log created Fri, 07 Jul 2017 06:03:34

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7540 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 11929 inferral cache hits and 26388491 partitioning cache hits.
The partitioning cache had 17 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 62588 tilings of which 3529 are verified.
There were 20742 SiblingNodes of which 1316 are verified.

The function splittings called the partitioning cache *26391332* times, (12658 originating)
There were 0 cache misses

No proof tree was found after 7540 seconds

===========================================
Log created Fri, 07 Jul 2017 08:04:43

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7268 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 11523 inferral cache hits and 44418 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 55702 tilings of which 2439 are verified.
There were 16921 SiblingNodes of which 703 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *47174* times, (23596 originating)
There were 1 cache misses

No proof tree was found after 7268 seconds

===========================================
Log created Fri, 07 Jul 2017 10:09:23

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7479 seconds

The strategies applied were:
Batch: all_cell_insertions, all_lrm_and_rlm_placements
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 10435 inferral cache hits and 19668484 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 49106 tilings of which 1557 are verified.
There were 14933 SiblingNodes of which 507 are verified.

The function splittings called the partitioning cache *19670898* times, (10678 originating)
There were 0 cache misses

No proof tree was found after 7479 seconds

===========================================
Log created Fri, 07 Jul 2017 16:00:41

Maximum depth fully searched was 5

Maximum time set at 7200 seconds

Total time taken was 21076 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_lrm_and_rlm_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 8057 inferral cache hits and 26817 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 40602 tilings in it right now.
There were 21465 tilings of which 2078 are verified.
There were 9714 SiblingNodes of which 837 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *28496* times, (14248 originating)
There were 0 cache misses

No proof tree was found after 21076 seconds

===========================================
Log created Fri, 07 Jul 2017 23:49:20

Maximum depth fully searched was 5

Maximum time set at 7200 seconds

Total time taken was 28119 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_lrm_and_rlm_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 8115 inferral cache hits and 3160956 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 42103 tilings in it right now.
There were 21912 tilings of which 2135 are verified.
There were 9867 SiblingNodes of which 884 are verified.

The function splittings called the partitioning cache *3162622* times, (7293 originating)
There were 0 cache misses

No proof tree was found after 28119 seconds

===========================================
Log created Sat, 08 Jul 2017 01:51:49

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7348 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 8366 inferral cache hits and 32304 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 42884 tilings of which 2209 are verified.
There were 14011 SiblingNodes of which 935 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *34332* times, (17166 originating)
There were 0 cache misses

No proof tree was found after 7348 seconds

===========================================
Log created Sat, 08 Jul 2017 03:53:44

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7313 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 8798 inferral cache hits and 15329307 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 95464 tilings in it right now.
There were 41580 tilings of which 2683 are verified.
There were 15014 SiblingNodes of which 1311 are verified.

The function splittings called the partitioning cache *15331263* times, (8508 originating)
There were 0 cache misses

No proof tree was found after 7313 seconds

===========================================
Log created Sat, 08 Jul 2017 05:42:52

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 6547 seconds

The strategies applied were:
Batch: all_cell_insertions
Equivalent: all_point_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 1 symmetries of the basis were used

There were 35778 inferral cache hits and 73017 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 95419 tilings of which 4973 are verified.
There were 18920 SiblingNodes of which 942 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *77498* times, (38749 originating)
There were 0 cache misses

A proof tree was found in 6547 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           └─────9
                  │                 ├─────10
                  │                 │     ├─────11
                  │                 │     └─────12
                  │                 └─────13
                  └─────14
                        ├─────15
                        └─────16
                              ├─────17
                              │     ├─────18
                              │     └─────19
                              └─────20

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
2: point

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| | | |5|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
3: point
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 5

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|3| | | |4|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 6

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point

Label: 7

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|3| | | |4|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 9

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |2| |2| | | | |4| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 10

+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |2| |2| | | | |4| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |5| | | | | |
+-+-+-+-+-+-+-+-+
|4| | | | | | |5|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| |3| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))

Label: 11

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | |4| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 12

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |5| | | | | |
+-+-+-+-+-+-+-+-+
|4| | | | | | |5|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| |3| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | | |4| |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |4| | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |3| | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 13

+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| |5| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |5|
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | |5| |
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |4| | |
+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |4| |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 14

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| | | |5|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
|3| |3| |2| |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((1, 0)))

Label: 15

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | | |2| |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 16

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
|3| |4| |2| |5|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| |2| |3| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 17

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| |1| | | |4| |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 18

+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | |4| |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))

Label: 19

+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| |4| | | | | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |5| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))
5: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |4| | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | |4| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | |4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
|5| | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |3| |
+-+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 20

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | |2| |4|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |3| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |3|
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 7420, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7421, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7422, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=1, j=0). | ", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7423, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((1, 0)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((1, 0)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7424, "in_tiling": {"[0, 2]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 5]": "point", "[1, 7]": "Av(Perm((1, 0)))", "[2, 8]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 3]": "point", "[7, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[8, 4]": "Av(Perm((1, 0)))", "[9, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=5, j=1). | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7425, "in_tiling": {"[0, 3]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 7]": "point", "[1, 6]": "Av(Perm((0, 1)))", "[1, 9]": "Av(Perm((1, 0)))", "[10, 4]": "Av(Perm((1, 0)))", "[11, 6]": "Av(Perm((1, 0)))", "[12, 8]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[3, 10]": "Av(Perm((1, 0)))", "[4, 11]": "point", "[5, 4]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))", "[7, 0]": "point", "[8, 3]": "point", "[9, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=3). | Inserting the left most point in to the cell Cell(i=7, j=1). | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 7426, "in_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((1, 0)))", "[2, 8]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 3]": "point", "[7, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[8, 4]": "Av(Perm((1, 0)))", "[9, 6]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=0, j=4). | Inserting the bottom most point in to the cell Cell(i=0, j=4). | The reverse of: Inserting the left most point in to the cell Cell(i=6, j=1). | ", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7427, "in_tiling": {"[0, 6]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[1, 8]": "Av(Perm((1, 0)))", "[2, 9]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "point", "[6, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 5]": "Av(Perm((1, 0)))", "[8, 7]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 7]": "point", "[1, 6]": "Av(Perm((0, 1)))", "[1, 9]": "Av(Perm((1, 0)))", "[10, 8]": "Av(Perm((1, 0)))", "[2, 3]": "point", "[3, 10]": "Av(Perm((1, 0)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 11]": "point", "[5, 1]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 5]": "point", "[8, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[9, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=2). | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 7428, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 6]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[1, 8]": "Av(Perm((1, 0)))", "[2, 9]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 4]": "point", "[7, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[8, 5]": "Av(Perm((1, 0)))", "[9, 7]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=5, j=1). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (5, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 6278, "in_tiling": {"[0, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=2). | The reverse of: Inserting the left most point in to the cell Cell(i=4, j=0). | Inserting the bottom most point in to the cell Cell(i=4, j=0). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=1). | Inserting the left most point in to the cell Cell(i=0, j=1). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 6454, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7429, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 5]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 5]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7430, "in_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((1, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 8]": "Av(Perm((1, 0)))", "[4, 9]": "point", "[5, 3]": "point", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 4]": "Av(Perm((1, 0)))", "[8, 6]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((1, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 8]": "Av(Perm((1, 0)))", "[4, 9]": "point", "[5, 3]": "point", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 4]": "Av(Perm((1, 0)))", "[8, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7431, "in_tiling": {"[0, 7]": "point", "[1, 6]": "Av(Perm((0, 1)))", "[1, 8]": "Av(Perm((1, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 5]": "Av+(Perm((0, 1)))", "[3, 9]": "Av(Perm((1, 0)))", "[4, 10]": "point", "[5, 3]": "point", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 8]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 7]": "point", "[10, 4]": "Av(Perm((1, 0)))", "[2, 9]": "Av(Perm((1, 0)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 10]": "Av(Perm((1, 0)))", "[5, 6]": "point", "[6, 11]": "Av(Perm((1, 0)))", "[6, 5]": "Av(Perm((0, 1)))", "[7, 12]": "point", "[8, 3]": "point", "[9, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=5). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=6). | Inserting the bottom most point in to the cell Cell(i=0, j=6). | The reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=5). | Inserting the top most point in to the cell Cell(i=4, j=5). | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (3, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 7432, "in_tiling": {"[0, 4]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((1, 0)))", "[2, 7]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 3]": "Av(Perm((1, 0)))", "[6, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((1, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[3, 8]": "Av(Perm((1, 0)))", "[4, 9]": "point", "[5, 3]": "point", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 4]": "Av(Perm((1, 0)))", "[8, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | Inserting the bottom most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the bottom most point in to the cell Cell(i=5, j=1). | Inserting the left most point in to the cell Cell(i=5, j=1). | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | Inserting the top most point in to the cell Cell(i=1, j=0). | ", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7433, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 6]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 5]": "Av(Perm((0, 1)))", "[2, 7]": "Av(Perm((1, 0)))", "[3, 8]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point", "[6, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 7]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 8]": "Av(Perm((1, 0)))", "[4, 0]": "point", "[5, 6]": "Av(Perm((0, 1)))", "[5, 9]": "Av(Perm((1, 0)))", "[6, 10]": "point", "[7, 5]": "Av(Perm((0, 1)))", "[8, 4]": "point", "[9, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=2, j=0). | Inserting the top most point in to the cell Cell(i=0, j=1). | Inserting the bottom most point in to the cell Cell(i=3, j=0). | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 7434, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 5]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 7]": "Av(Perm((1, 0)))", "[3, 8]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point", "[6, 4]": "Av(Perm((1, 0)))", "[7, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=3). | The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=0). | Separating the bottommost point from cell Cell(i=2, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 7435, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | The reverse of: Inserting the left most point in to the cell Cell(i=4, j=1). | Inserting the bottom most point in to the cell Cell(i=4, j=1). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 7436, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=2). | The reverse of: Inserting the right most point in to the cell Cell(i=2, j=0). | Inserting the left most point in to the cell Cell(i=2, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 7437, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0))).", "identifier": 7438, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
