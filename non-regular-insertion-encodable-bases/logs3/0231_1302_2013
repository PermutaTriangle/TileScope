0231_1302_2013

===========================================
Log created Sat, 03 Jun 2017 19:20:58

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1813 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 6103 inferral cache hits and 17810 partitioning cache hits.
The partitioning cache had 6 tilings in it right now.
The inferral cache has 38228 tilings in it right now.
There were 18344 tilings of which 2086 are verified.
There were 7187 SiblingNodes of which 300 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *18930* times, (9489 originating)
There were 3 cache misses

No proof tree was found after 1813 seconds

===========================================
Log created Sat, 03 Jun 2017 19:26:59

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 360 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1569 inferral cache hits and 463827 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 9537 tilings in it right now.
There were 5373 tilings of which 989 are verified.
There were 2470 SiblingNodes of which 397 are verified.

The function splittings called the partitioning cache *464198* times, (1451 originating)
There were 0 cache misses

A proof tree was found in 360 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           └─────9
                  │                 ├─────10
                  │                 │     ├─────11
                  │                 │     │     ├─────12
                  │                 │     │     └─────13
                  │                 │     └─────14
                  │                 │           ├─────15
                  │                 │           └─────16
                  │                 └─────17
                  └─────18
                        ├─────19
                        │     ├─────20
                        │     └─────21
                        └─────22
                              ├─────23
                              └─────24
                                    ├─────25
                                    └─────26

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | |2| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 5

+-+-+-+-+-+
|3| | |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 6

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 7

+-+-+-+-+-+
|3| | |4| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |3| | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 8

+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 9

+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |3| | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
|4| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| | |
+-+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 10

+-+-+-+-+-+-+-+
|3| | | | |4| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|4| | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 11

+-+-+-+-+-+-+
|3| | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|3| | | |1| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 12

+-+-+-+-+-+
|3| | |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
|4| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 15

+-+-+-+-+-+-+-+-+-+
|4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 16

+-+-+-+-+-+-+-+-+-+-+
|4| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+-+-+
|5| | | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
5: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 17

+-+-+-+
| |1| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 18

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 19

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 20

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 21

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 22

+-+-+-+-+-+
|5| | | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: Av+(Perm((0, 1)))
3: point
4: Av(Perm((0, 1)))
5: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 23

+-+-+-+-+-+-+-+-+
|5| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | | | |4| | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
| |2| |3| | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1)))
4: point
5: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
|5| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
5: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 24

+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
|1| | |2| | |
+-+-+-+-+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 25

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))

Label: 26

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1313, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1314, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1315, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1316, "in_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 297, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1317, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=3): Cell(i=4, j=4), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=2)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=0). | Inserting the top most point in to the cell Cell(i=2, j=0). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1318, "in_tiling": {"[0, 8]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 2]": "point", "[3, 5]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 1]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 7]": "Av(Perm((0, 1)))", "[8, 6]": "point"}, "out_tiling": {"[0, 8]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 2]": "point", "[3, 5]": "point", "[4, 4]": "Av(Perm((0, 1)))", "[5, 1]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 7]": "Av(Perm((0, 1)))", "[8, 6]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1319, "in_tiling": {"[0, 9]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 6]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))", "[7, 0]": "point", "[8, 8]": "Av(Perm((0, 1)))", "[9, 7]": "point"}, "out_tiling": {"[0, 11]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[10, 10]": "Av(Perm((0, 1)))", "[11, 9]": "point", "[2, 2]": "point", "[3, 4]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))", "[4, 6]": "Av(Perm((0, 1)))", "[5, 5]": "point", "[6, 8]": "point", "[7, 7]": "Av(Perm((0, 1)))", "[8, 1]": "Av(Perm((0, 1)))", "[9, 0]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=2). | "}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1))).", "identifier": 1320, "in_tiling": {"[0, 6]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 0]": "point", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "out_tiling": {"[0, 9]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 4]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[3, 3]": "point", "[4, 6]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 1)))", "[7, 0]": "point", "[8, 8]": "Av(Perm((0, 1)))", "[9, 7]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=3). | The reverse of: Inserting the left most point in to the cell Cell(i=1, j=1). | Inserting the right most point in to the cell Cell(i=1, j=1). | "}], "formal_step": "We perform cell insertion into cell (2, 3); either it is empty or Av+(Perm((1, 2, 0)), Perm((2, 0, 1))).", "identifier": 1197, "in_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[3, 2]": "point", "[4, 0]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 0]": "point", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=1, j=1). | Inserting the left most point in to the cell Cell(i=1, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 43, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1321, "in_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "out_tiling": {"[0, 8]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 4]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 6]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[3, 5]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[6, 8]": "Av(Perm((0, 1)))", "[7, 7]": "point", "[8, 3]": "Av(Perm((0, 1)))", "[9, 2]": "point"}, "recurse": "[{Cell(i=0, j=5): Cell(i=0, j=8), Cell(i=1, j=1): Cell(i=1, j=4), Cell(i=2, j=3): Cell(i=2, j=6), Cell(i=3, j=2): Cell(i=3, j=5), Cell(i=4, j=0): Cell(i=4, j=1), Cell(i=5, j=5): Cell(i=6, j=8), Cell(i=6, j=4): Cell(i=7, j=7)}, {Cell(i=0, j=0): Cell(i=5, j=0), Cell(i=1, j=2): Cell(i=8, j=3), Cell(i=2, j=1): Cell(i=9, j=2)}]", "relation": "| Inserting the right most point in to the cell Cell(i=1, j=3). | The reverse of: Inserting the top most point in to the cell Cell(i=4, j=6). | Inserting the bottom most point in to the cell Cell(i=4, j=6). | "}], "formal_step": "We perform cell insertion into cell (1, 3); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1))).", "identifier": 1322, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=3). | "}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 297, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 51, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 46, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 59, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1), Cell(i=1, j=1): Cell(i=2, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1323, "in_tiling": {"[0, 6]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 3]": "point", "[5, 0]": "Av+(Perm((0, 1)))", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "out_tiling": {"[0, 8]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[2, 2]": "point", "[3, 4]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))", "[4, 5]": "point", "[5, 1]": "point", "[6, 0]": "Av(Perm((0, 1)))", "[7, 7]": "Av(Perm((0, 1)))", "[8, 6]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=5, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=2). | Inserting the bottom most point in to the cell Cell(i=1, j=2). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 513, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 3, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1324, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=3): Cell(i=4, j=4), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": ""}], "formal_step": "Placing the maximum point into row 0", "identifier": 1325, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 513, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1))).", "identifier": 51, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 2, 3, 1))).", "identifier": 12, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3))).", "identifier": 0, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}}
