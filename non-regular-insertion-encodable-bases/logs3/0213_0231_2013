0213_0231_2013

===========================================
Log created Thu, 08 Jun 2017 23:36:55

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 105978 inferral cache hits and 14393 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 39170 tilings in it right now.
There were 15245 tilings of which 1067 are verified.
There were 6394 SiblingNodes of which 474 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *15370* times, (7685 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Thu, 08 Jun 2017 23:46:56

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 122730 inferral cache hits and 15504 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 43126 tilings in it right now.
There were 18261 tilings of which 1327 are verified.
There were 9076 SiblingNodes of which 698 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *16562* times, (8281 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Thu, 08 Jun 2017 23:56:56

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 123852 inferral cache hits and 14274 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 41931 tilings in it right now.
There were 18017 tilings of which 1703 are verified.
There were 5574 SiblingNodes of which 508 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *15246* times, (7623 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Fri, 09 Jun 2017 00:06:57

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 117013 inferral cache hits and 275528 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 42923 tilings in it right now.
There were 16708 tilings of which 1203 are verified.
There were 7014 SiblingNodes of which 551 are verified.

The function splittings called the partitioning cache *276593* times, (3826 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Fri, 09 Jun 2017 00:16:58

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 601 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 135142 inferral cache hits and 252888 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 47223 tilings in it right now.
There were 19957 tilings of which 1440 are verified.
There were 9923 SiblingNodes of which 757 are verified.

The function splittings called the partitioning cache *254070* times, (4103 originating)
There were 0 cache misses

No proof tree was found after 601 seconds

===========================================
Log created Fri, 09 Jun 2017 00:27:02

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 603 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 134593 inferral cache hits and 244975 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 45891 tilings in it right now.
There were 19383 tilings of which 1676 are verified.
There were 6166 SiblingNodes of which 543 are verified.

The function splittings called the partitioning cache *246087* times, (3856 originating)
There were 0 cache misses

No proof tree was found after 603 seconds

===========================================
Log created Fri, 09 Jun 2017 00:37:10

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 607 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 2536 inferral cache hits and 9570 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 13456 tilings in it right now.
There were 8693 tilings of which 1189 are verified.
There were 4879 SiblingNodes of which 675 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *10188* times, (5094 originating)
There were 0 cache misses

No proof tree was found after 607 seconds

===========================================
Log created Fri, 09 Jun 2017 00:47:10

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements, all_321_boundaries
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 2005 inferral cache hits and 1151483 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 12673 tilings in it right now.
There were 7333 tilings of which 814 are verified.
There were 3879 SiblingNodes of which 396 are verified.

The function splittings called the partitioning cache *1152038* times, (2236 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Fri, 09 Jun 2017 00:48:45

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 94 seconds

The strategies applied were:
Batch: all_cell_insertions, all_321_boundaries
Equivalent: all_point_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 194 inferral cache hits and 1652 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 6200 tilings in it right now.
There were 2654 tilings of which 191 are verified.
There were 852 SiblingNodes of which 81 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1770* times, (885 originating)
There were 0 cache misses

A proof tree was found in 94 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        └─────8

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
2: point

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |4| | |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
3: point
4: Av(Perm((1, 0)))

Label: 5

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 6

+-+-+-+-+
| |5| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |4| | |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
3: point
4: Av(Perm((1, 0)))
5: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |5| | | | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | |1| |2|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
3: point
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
5: Av(Perm((1, 0)))

Label: 7

+-+-+-+-+
| | | |4|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |4|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
3: point
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 8

+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 186, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 187, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 188, "in_tiling": {"[0, 1]": "point", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 41, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[3, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=1, j=2). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 45, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=3), Cell(i=1, j=4), Cell(i=1, j=8), Cell(i=3, j=7)]", "identifier": 189, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[1, 8]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 7]": "Av(Perm((0, 1)))", "[4, 5]": "point", "[5, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[5, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[5, 6]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=2, j=1), Cell(i=1, j=0): Cell(i=3, j=0), Cell(i=2, j=3): Cell(i=4, j=5), Cell(i=3, j=0): Cell(i=5, j=0), Cell(i=3, j=2): Cell(i=5, j=2), Cell(i=3, j=4): Cell(i=5, j=6)}, {Cell(i=0, j=0): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=4), Cell(i=1, j=3): Cell(i=1, j=8), Cell(i=2, j=2): Cell(i=3, j=7)}]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the right most point in to the cell Cell(i=3, j=4). | Inserting the bottom most point in to the cell Cell(i=3, j=4). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 41, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=1, j=2). | "}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 190, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3))).", "identifier": 191, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}}
