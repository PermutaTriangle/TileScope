0231_1230_3012

===========================================
Log created Sun, 11 Jun 2017 01:08:32

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 2365 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 220439 inferral cache hits and 30015 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 88377 tilings in it right now.
There were 28557 tilings of which 1683 are verified.
There were 11676 SiblingNodes of which 956 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *31936* times, (15984 originating)
There were 2 cache misses

No proof tree was found after 2365 seconds

===========================================
Log created Sun, 11 Jun 2017 01:38:33

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 299623 inferral cache hits and 33275 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 40097 tilings of which 2141 are verified.
There were 19566 SiblingNodes of which 1465 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *35432* times, (17797 originating)
There were 9 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sun, 11 Jun 2017 01:54:23

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 949 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 175038 inferral cache hits and 21969 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 64048 tilings in it right now.
There were 23653 tilings of which 1562 are verified.
There were 7303 SiblingNodes of which 629 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *23432* times, (11759 originating)
There were 5 cache misses

A proof tree was found in 949 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     │     ├─────8
                  │     │     │     ├─────9
                  │     │     │     │     ├─────10
                  │     │     │     │     └─────11
                  │     │     │     └─────12
                  │     │     │           ├─────13
                  │     │     │           │     ├─────14
                  │     │     │           │     └─────15
                  │     │     │           └─────16
                  │     │     └─────17
                  │     └─────18
                  └─────19
                        ├─────20
                        ├─────21
                        │     ├─────22
                        │     │     ├─────23
                        │     │     ├─────24
                        │     │     │     ├─────25
                        │     │     │     │     ├─────26
                        │     │     │     │     └─────27
                        │     │     │     └─────28
                        │     │     │           ├─────29
                        │     │     │           └─────30
                        │     │     ├─────31
                        │     │     │     ├─────32
                        │     │     │     └─────33
                        │     │     └─────34
                        │     │           ├─────35
                        │     │           └─────36
                        │     └─────37
                        │           ├─────38
                        │           ├─────39
                        │           │     ├─────40
                        │           │     └─────41
                        │           ├─────42
                        │           │     ├─────43
                        │           │     └─────44
                        │           └─────45
                        └─────46
                              ├─────47
                              └─────48

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point

Label: 4

+-+-+
| |3|
+-+-+
| |2|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av+(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))

Label: 5

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1|2|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | |3| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 6

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|3| | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1|2|
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 7

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1|2|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
|2|3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 8

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 9

+-+-+-+-+
|1|3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 10

+-+-+-+
|2|3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1|2|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 11

+-+
|1|
+-+
1: point

Label: 12

+-+-+-+-+
|2|3|2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 13

+-+-+-+-+
|2|3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
|2|3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 14

+-+-+-+
|2|3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1|2|
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 15

+-+
|1|
+-+
1: point

Label: 16

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 17

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 18

+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|3| | | |1| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 19

+-+-+-+
| |3|2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 20

+-+-+
| |1|
+-+-+
|1| |
+-+-+
1: point

Label: 21

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1|2|1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 22

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2|3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1|2| |
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 23

+-+-+-+
| | |1|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
1: point

Label: 24

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1|2|2| |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1)))

Label: 25

+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 26

+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
|1|3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))

Label: 27

+-+
|1|
+-+
1: point

Label: 28

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 29

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2|3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 30

+-+
|1|
+-+
1: point

Label: 31

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 32

+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 33

+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 34

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 35

+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| | | |1| |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 36

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 37

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1|2| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 38

+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
|1| | |
+-+-+-+
1: point

Label: 39

+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1|2|1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 40

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1|2|1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 41

+-+
|1|
+-+
1: point

Label: 42

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1|2| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |4| | |2|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))
4: Av(Perm((0, 1)))

Label: 43

+-+-+-+-+
| |4| |2|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1|2| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 44

+-+
|1|
+-+
1: point

Label: 45

+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|1|2| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
2: point
3: Av+(Perm((0, 1)))

Label: 46

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1|2| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 47

+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3|2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))

Label: 48

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 682, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 683, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 684, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 9, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=0)]", "identifier": 54, "in_tiling": {"[0, 3]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 9, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=0)]", "identifier": 686, "in_tiling": {"[0, 4]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1, 2)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[2, 1]": "point", "[3, 0]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=1): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 687, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | "}], "formal_step": "Isolated the point at Cell(i=2, j=2) in its row", "identifier": 688, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert rightmost point into col 1", "identifier": 9, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 241, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=2), Cell(i=2, j=3)]", "identifier": 689, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 5]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1, 2)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 0]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=3, j=0), Cell(i=1, j=2): Cell(i=3, j=2), Cell(i=2, j=0): Cell(i=4, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=3)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=3) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=2). | Separting the rightmost point from cell Cell(i=0, j=2). | Isolating the point at Cell(i=2, j=3) in its row. | The reverse of: Isolating the point at Cell(i=2, j=3) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 690, "in_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 7]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 4]": "Av(Perm((0, 1)))", "[5, 6]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "out_tiling": {"[0, 4]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 5]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=2, j=1). | The reverse of: Isolating the point at Cell(i=3, j=4) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=3). | Separating the bottommost point from cell Cell(i=1, j=1). | "}], "formal_step": "insert bottommost point into row 1", "identifier": 691, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1, 2)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "| Separating the topmost point from cell Cell(i=1, j=2). | Isolating the point at Cell(i=1, j=3) in its column. | Isolating the point at Cell(i=2, j=3) in its row. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 692, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 693, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 54, "in_tiling": {"[0, 4]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=4, j=6)]", "identifier": 694, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 6]": "point"}, "recurse": "[{Cell(i=0, j=4): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=1, j=3): Cell(i=1, j=3), Cell(i=1, j=5): Cell(i=1, j=5), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=2): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=4, j=6)}]", "relation": "| Isolating the point at Cell(i=4, j=4) in its row. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 611, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 5]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=0)]", "identifier": 695, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "point", "[4, 5]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=1, j=4): Cell(i=1, j=4), Cell(i=1, j=6): Cell(i=1, j=6), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=3, j=5): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}], "formal_step": "Isolated the point at Cell(i=2, j=0) in its row", "identifier": 696, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 0]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 0]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 697, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 6]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "point", "[4, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=4, j=4) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 698, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "Av(Perm((0, 1)))", "[3, 8]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point", "[7, 1]": "point", "[8, 6]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "Av(Perm((0, 1)))", "[3, 8]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point", "[7, 1]": "point", "[8, 6]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert topmost point into row 7", "identifier": 699, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 6]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=5) in its row. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 700, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 1]": "point", "[6, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 7]": "Av(Perm((0, 1)))", "[5, 6]": "point", "[6, 2]": "point", "[7, 5]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=3, j=5) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 701, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 0]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 0]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert bottommost point into row 0", "identifier": 702, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert rightmost point into col 1", "identifier": 611, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=4) in its row. | The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 703, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 650, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 704, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=4, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 604, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=2) in its row. | Isolating the point at Cell(i=3, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=4)]", "identifier": 705, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 3]": "point", "[4, 5]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=3): Cell(i=3, j=3), Cell(i=3, j=4): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=2, j=4)}]", "relation": "| The reverse of: Isolating the point at Cell(i=4, j=3) in its row. | Isolating the point at Cell(i=4, j=3) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 706, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | The reverse of: Separating the bottommost point from cell Cell(i=1, j=3). | "}], "formal_step": "insert rightmost point into col 1", "identifier": 604, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Isolated the point at Cell(i=2, j=0) in its row", "identifier": 650, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 255, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))", "[2, 2]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 685, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=1)]", "identifier": 707, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=1)}]", "relation": ""}], "formal_step": "insert rightmost point into col 1", "identifier": 255, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}], "formal_step": "insert rightmost point into col 1", "identifier": 205, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "point", "[1, 3]": "Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av+(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=1, j=2). | "}], "formal_step": "insert bottommost point into row 2", "identifier": 39, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=0, j=0). | Separting the leftmost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=1, j=0) in its row. | "}], "formal_step": "insert bottommost point into row 0", "identifier": 708, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}}
