0231_1203_2301

===========================================
Log created Sat, 10 Jun 2017 21:46:51

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 252095 inferral cache hits and 30490 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 85951 tilings in it right now.
There were 34149 tilings of which 2508 are verified.
There were 15006 SiblingNodes of which 1269 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *32438* times, (16251 originating)
There were 4 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sat, 10 Jun 2017 22:16:52

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 252019 inferral cache hits and 31096 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 86675 tilings in it right now.
There were 33812 tilings of which 2251 are verified.
There were 16254 SiblingNodes of which 1406 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *33112* times, (16573 originating)
There were 2 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sat, 10 Jun 2017 22:46:53

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 320997 inferral cache hits and 33800 partitioning cache hits.
The partitioning cache had 6 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 40406 tilings of which 6107 are verified.
There were 10179 SiblingNodes of which 1008 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *35970* times, (18010 originating)
There were 3 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sat, 10 Jun 2017 23:16:54

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 279922 inferral cache hits and 1915090 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 99531 tilings in it right now.
There were 35676 tilings of which 2069 are verified.
There were 14193 SiblingNodes of which 1235 are verified.

The function splittings called the partitioning cache *1917309* times, (8814 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sat, 10 Jun 2017 23:47:31

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1835 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 324610 inferral cache hits and 1615164 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 42356 tilings of which 2665 are verified.
There were 19729 SiblingNodes of which 1584 are verified.

The function splittings called the partitioning cache *1617567* times, (9146 originating)
There were 0 cache misses

No proof tree was found after 1835 seconds

===========================================
Log created Sun, 11 Jun 2017 00:12:40

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1508 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 345549 inferral cache hits and 935697 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 43295 tilings of which 7129 are verified.
There were 10904 SiblingNodes of which 1282 are verified.

The function splittings called the partitioning cache *938042* times, (8697 originating)
There were 0 cache misses

A proof tree was found in 1508 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     │           ├─────9
                  │     │           └─────10
                  │     │                 ├─────11
                  │     │                 │     ├─────12
                  │     │                 │     └─────13
                  │     │                 │           ├─────14
                  │     │                 │           │     ├─────15
                  │     │                 │           │     │     ├─────16
                  │     │                 │           │     │     │     ├─────17
                  │     │                 │           │     │     │     ├─────18
                  │     │                 │           │     │     │     └─────19
                  │     │                 │           │     │     ├─────20
                  │     │                 │           │     │     ├─────21
                  │     │                 │           │     │     │     ├─────22
                  │     │                 │           │     │     │     │     ├─────23
                  │     │                 │           │     │     │     │     └─────24
                  │     │                 │           │     │     │     │           ├─────25
                  │     │                 │           │     │     │     │           └─────26
                  │     │                 │           │     │     │     └─────27
                  │     │                 │           │     │     └─────28
                  │     │                 │           │     └─────29
                  │     │                 │           ├─────30
                  │     │                 │           └─────31
                  │     │                 │                 ├─────32
                  │     │                 │                 └─────33
                  │     │                 └─────34
                  │     │                       ├─────35
                  │     │                       ├─────36
                  │     │                       └─────37
                  │     │                             ├─────38
                  │     │                             └─────39
                  │     └─────40
                  │           ├─────41
                  │           └─────42
                  └─────43

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+-+
|1|2|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))
2: point
We use his sibling for the next strategy
+-+
|2|
+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))
2: point

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+
|1|
+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+
|2|
+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))
2: point

Label: 5

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| |1| |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))

Label: 6

+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))

Label: 7

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))

Label: 8

+-+-+-+
|1| | |
+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 11

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 12

+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 13

+-+-+-+
|3| | |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
|4| | |
+-+-+-+
| | |2|
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 14

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1|2| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1|2| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((0, 1)))

Label: 15

+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 16

+-+-+-+-+
| |3| | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1|2| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |1| |2|3| |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 1)))
3: point

Label: 17

+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| | |3|1| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |3| | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 18

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point

Label: 19

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 20

+-+-+-+-+
| |3| | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1|2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1|2| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 21

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1|2| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1)))

Label: 22

+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |1|2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 23

+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 24

+-+-+-+
| |3|2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))

Label: 25

+-+-+-+
| |2| |
+-+-+-+
| |1|2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((0, 1)))

Label: 26

+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 27

+-+
|1|
+-+
1: point

Label: 28

+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point

Label: 29

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 30

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1|2| |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 31

+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| |2|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 32

+-+
|1|
+-+
1: point

Label: 33

+-+-+-+
|3| |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 34

+-+-+-+
|3|2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| |3|2| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 35

+-+-+-+-+-+-+-+-+
|3| | | | |3|2| |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|3| | | | |4| |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 36

+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point

Label: 37

+-+-+-+-+-+
|3| |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))

Label: 38

+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 39

+-+
|1|
+-+
1: point

Label: 40

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|3| | | |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |1|2| |2| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
|2| | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | |1| | |2| |
+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 1)))
3: point

Label: 41

+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
3: Av+(Perm((0, 1)))

Label: 42

+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
|2|3| | | | |3| |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |3| | | | | |3| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 43

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1068, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1069, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1070, "in_tiling": {"[0, 1]": "Av(Perm((1, 2, 0)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Separating the topmost point from cell Cell(i=0, j=1). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1069, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1071, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=0, j=0). | Separting the leftmost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=2, j=1) in its row. | "}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1072, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))", "[2, 5]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 1]": "point", "[6, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "Av+(Perm((1, 2, 0)))", "[3, 7]": "point", "[4, 6]": "Av(Perm((0, 1)))", "[5, 2]": "Av(Perm((0, 1)))", "[6, 1]": "point", "[7, 5]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=5) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=2, j=0). | "}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1073, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1074, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 5]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=5) in its column. | The reverse of: Separating the topmost point from cell Cell(i=1, j=4). | Separating the bottommost point from cell Cell(i=1, j=4). | Isolating the point at Cell(i=1, j=5) in its column. | "}], "formal_step": "insert bottommost point into row 0", "identifier": 1075, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 3]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=1, j=3). | Isolating the point at Cell(i=1, j=3) in its row. | Separating the topmost point from cell Cell(i=1, j=5). | The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | Isolating the point at Cell(i=1, j=4) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 1076, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))", "[1, 4]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=1, j=4). | Isolating the point at Cell(i=1, j=4) in its row. | The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1077, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1064, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=3) in its row. | The reverse of: Separating the topmost point from cell Cell(i=1, j=4). | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1078, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 2, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 5]": "point"}, "recurse": "[]", "relation": "| Separating the topmost point from cell Cell(i=2, j=2). | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | Isolating the point at Cell(i=2, j=2) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | Separating the topmost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=3, j=4) in its column. | "}], "formal_step": "insert topmost point into row 2", "identifier": 1079, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 73, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))", "[2, 2]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 1069, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1080, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | "}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1081, "in_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert rightmost point into col 1", "identifier": 1064, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))", "[1, 4]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | Separating the bottommost point from cell Cell(i=1, j=4). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1076, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=4), Cell(i=2, j=1): Cell(i=4, j=3)}, {Cell(i=0, j=1): Cell(i=2, j=2), Cell(i=1, j=0): Cell(i=3, j=1)}]", "relation": "| Isolating the point at Cell(i=1, j=4) in its row. | The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | Separating the bottommost point from cell Cell(i=1, j=4). | Isolating the point at Cell(i=1, j=5) in its column. | The reverse of: Separting the rightmost point from cell Cell(i=4, j=3). | Separating the topmost point from cell Cell(i=4, j=3). | The reverse of: Isolating the point at Cell(i=1, j=4) in its row. | Isolating the point at Cell(i=1, j=4) in its column. | The reverse of: Isolating the point at Cell(i=1, j=5) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=4). | "}, {"children": [], "formal_step": "recurse", "identifier": 1075, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 3]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=3) in its row. | Separating the bottommost point from cell Cell(i=1, j=3). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1069, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 114, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Isolating the point at Cell(i=0, j=2) in its row. | "}], "formal_step": "A splitting of the tiling", "identifier": 1082, "in_tiling": {"[0, 5]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "point", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=2): Cell(i=3, j=2)}]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=3) in its row. | "}], "formal_step": "insert leftmost point into col 0", "identifier": 1083, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 2]": "point", "[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=0, j=2). | Isolating the point at Cell(i=0, j=2) in its row. | "}], "formal_step": "insert bottommost point into row 2", "identifier": 114, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1084, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 2, 0)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 5]": "point", "[7, 3]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 5]": "Av+(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=5, j=5). | The reverse of: Isolating the point at Cell(i=3, j=4) in its column. | The reverse of: Separating the topmost point from cell Cell(i=2, j=0). | Separting the leftmost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=4, j=3) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 1081, "in_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 340, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=1) in its row. | The reverse of: Isolating the point at Cell(i=1, j=1) in its column. | Isolating the point at Cell(i=1, j=1) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1069, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1085, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 5]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[2, 5]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=4) in its column. | The reverse of: Separating the topmost point from cell Cell(i=0, j=0). | Separating the bottommost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=0, j=4) in its column. | "}], "formal_step": "insert bottommost point into row 4", "identifier": 1086, "in_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": "| Separating the topmost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=1, j=3) in its column. | "}], "formal_step": "insert rightmost point into col 0", "identifier": 340, "in_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1087, "in_tiling": {"[0, 4]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[2, 2]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=1, j=1): Cell(i=2, j=1)}]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | "}], "formal_step": "insert bottommost point into row 0", "identifier": 1088, "in_tiling": {"[0, 2]": "Av(Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1064, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 6]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((1, 2, 0)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=5) in its column. | The reverse of: Separating the topmost point from cell Cell(i=1, j=4). | The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1089, "in_tiling": {"[0, 4]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 5]": "point", "[6, 4]": "Av(Perm((0, 1)))", "[7, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 2, 0)))", "[5, 7]": "point", "[6, 6]": "Av(Perm((0, 1)))", "[7, 4]": "Av(Perm((0, 1)))", "[8, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=4, j=3) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=3, j=3) in its row. | Separating the topmost point from cell Cell(i=2, j=0). | The reverse of: Isolating the point at Cell(i=3, j=4) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=3). | Isolating the point at Cell(i=2, j=4) in its column. | Separting the leftmost point from cell Cell(i=0, j=4). | Isolating the point at Cell(i=5, j=5) in its row. | "}], "formal_step": "insert leftmost point into col 0", "identifier": 1090, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((0, 1)))", "[5, 1]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 2, 0)))", "[4, 6]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((1, 2, 0)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=3, j=3) in its row. | "}], "formal_step": "insert leftmost point into col 1", "identifier": 1091, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[4, 1]": "point"}, "recurse": "[]", "relation": "| Separting the rightmost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=1, j=1) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 1071, "in_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Separting the rightmost point from cell Cell(i=0, j=0). | "}], "formal_step": "Isolated the point at Cell(i=0, j=1) in its column", "identifier": 1092, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[0, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[0, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=0, j=0). | "}], "formal_step": "insert bottommost point into row 0", "identifier": 113, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))", "[0, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=0, j=0). | Separating the topmost point from cell Cell(i=0, j=0). | "}], "formal_step": "insert rightmost point into col 0", "identifier": 1093, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}}
