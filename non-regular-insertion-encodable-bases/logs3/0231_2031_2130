0231_2031_2130

===========================================
Log created Mon, 22 May 2017 17:36:27

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 142 inferral cache hits and 1145 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 1864 tilings in it right now.
There were 943 tilings of which 166 are verified.
There were 401 SiblingNodes of which 52 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1228* times, (614 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:36:57

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 166 inferral cache hits and 22498 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 2016 tilings in it right now.
There were 1046 tilings of which 147 are verified.
There were 476 SiblingNodes of which 57 are verified.

The function splittings called the partitioning cache *22587* times, (291 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:37:27

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 264 inferral cache hits and 1397 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 1363 tilings in it right now.
There were 933 tilings of which 123 are verified.
There were 273 SiblingNodes of which 39 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1500* times, (750 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:37:57

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 361 inferral cache hits and 18834 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 1765 tilings in it right now.
There were 1211 tilings of which 84 are verified.
There were 359 SiblingNodes of which 40 are verified.

The function splittings called the partitioning cache *18940* times, (297 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:38:28

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 4691 inferral cache hits and 1500 partitioning cache hits.
The partitioning cache had 7 tilings in it right now.
The inferral cache has 1721 tilings in it right now.
There were 1005 tilings of which 93 are verified.
There were 298 SiblingNodes of which 39 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1612* times, (806 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:38:58

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 7176 inferral cache hits and 14549 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 2159 tilings in it right now.
There were 1336 tilings of which 108 are verified.
There were 370 SiblingNodes of which 34 are verified.

The function splittings called the partitioning cache *14655* times, (310 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:39:28

Maximum depth fully searched was 7

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 36 inferral cache hits and 683 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 259 tilings in it right now.
There were 191 tilings of which 74 are verified.
There were 127 SiblingNodes of which 26 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *728* times, (364 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:40:05

Maximum depth fully searched was 7

Maximum time set at 30 seconds

Total time taken was 36 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 83 inferral cache hits and 44803 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 478 tilings in it right now.
There were 518 tilings of which 193 are verified.
There were 398 SiblingNodes of which 119 are verified.

The function splittings called the partitioning cache *44867* times, (250 originating)
There were 0 cache misses

No proof tree was found after 36 seconds

===========================================
Log created Mon, 22 May 2017 17:40:36

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 187 inferral cache hits and 1144 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 314 tilings in it right now.
There were 291 tilings of which 46 are verified.
There were 65 SiblingNodes of which 16 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1226* times, (613 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:41:06

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 509 inferral cache hits and 4412 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 915 tilings in it right now.
There were 745 tilings of which 188 are verified.
There were 133 SiblingNodes of which 34 are verified.

The function splittings called the partitioning cache *4569* times, (409 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:41:38

Maximum depth fully searched was 8

Maximum time set at 30 seconds

Total time taken was 31 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 7 inferral cache hits and 357 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 89 tilings in it right now.
There were 64 tilings of which 22 are verified.
There were 54 SiblingNodes of which 13 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *380* times, (190 originating)
There were 0 cache misses

No proof tree was found after 31 seconds

===========================================
Log created Mon, 22 May 2017 17:42:18

Maximum depth fully searched was 9

Maximum time set at 30 seconds

Total time taken was 40 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 22 inferral cache hits and 4849 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 190 tilings in it right now.
There were 157 tilings of which 56 are verified.
There were 124 SiblingNodes of which 24 are verified.

The function splittings called the partitioning cache *4891* times, (196 originating)
There were 0 cache misses

No proof tree was found after 40 seconds

===========================================
Log created Mon, 22 May 2017 17:42:50

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 31 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 111 inferral cache hits and 945 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 214 tilings in it right now.
There were 193 tilings of which 35 are verified.
There were 48 SiblingNodes of which 15 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1012* times, (506 originating)
There were 0 cache misses

No proof tree was found after 31 seconds

===========================================
Log created Mon, 22 May 2017 17:43:20

Maximum depth fully searched was 6

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 365 inferral cache hits and 4028 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 593 tilings in it right now.
There were 484 tilings of which 86 are verified.
There were 96 SiblingNodes of which 25 are verified.

The function splittings called the partitioning cache *4176* times, (375 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Mon, 22 May 2017 17:43:30

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 9 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 14 inferral cache hits and 431 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 180 tilings in it right now.
There were 160 tilings of which 66 are verified.
There were 112 SiblingNodes of which 36 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *462* times, (240 originating)
There were 1 cache misses

A proof tree was found in 9 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     ├─────9
                        │     ├─────10
                        │     ├─────11
                        │     └─────12
                        └─────13
                              ├─────14
                              │     ├─────15
                              │     └─────16
                              └─────17
                                    ├─────18
                                    ├─────19
                                    └─────20

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point

Label: 6

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 2, 0)))

Label: 7

+-+-+-+-+
| | | |4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 8

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+
|1|
+-+
1: point

Label: 11

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 12

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 13

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 14

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 15

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 16

+-+
|1|
+-+
1: point

Label: 17

+-+-+-+-+
| | | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
4: Av(Perm((1, 2, 0)))

Label: 18

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 2, 0)))

Label: 19

+-+
|1|
+-+
1: point

Label: 20

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 47, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 48, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 49, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3), Cell(i=3, j=5), Cell(i=4, j=4), Cell(i=5, j=6)]", "identifier": 50, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 4]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 5]": "point", "[4, 4]": "Av(Perm((1, 2, 0)))", "[5, 6]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=5)}, {Cell(i=0, j=0): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=5, j=6)}]", "relation": "| Inserting the left most point in to the cell Cell(i=3, j=4). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 42, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=1)]", "identifier": 51, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 44, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 52, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av+(Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av+(Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=4)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 53, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 44, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 42, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0))).", "identifier": 0, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0))).", "identifier": 54, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}}
