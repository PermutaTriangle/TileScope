1032_1302_2301

===========================================
Log created Mon, 12 Jun 2017 02:28:20

Maximum depth fully searched was 3

Maximum time set at 1800 seconds

Total time taken was 3892 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 62619 inferral cache hits and 9798 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 22342 tilings in it right now.
There were 8736 tilings of which 283 are verified.
There were 3669 SiblingNodes of which 197 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *10470* times, (5235 originating)
There were 0 cache misses

No proof tree was found after 3892 seconds

===========================================
Log created Mon, 12 Jun 2017 03:08:45

Maximum depth fully searched was 3

Maximum time set at 1800 seconds

Total time taken was 2424 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 99381 inferral cache hits and 14275 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 34030 tilings in it right now.
There were 14212 tilings of which 548 are verified.
There were 7093 SiblingNodes of which 402 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *15252* times, (7626 originating)
There were 0 cache misses

No proof tree was found after 2424 seconds

===========================================
Log created Mon, 12 Jun 2017 03:18:45

Maximum depth fully searched was 3

Maximum time set at 1800 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 129293 inferral cache hits and 17053 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 42596 tilings in it right now.
There were 17869 tilings of which 1631 are verified.
There were 5190 SiblingNodes of which 486 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *18218* times, (9149 originating)
There were 5 cache misses

A proof tree was found in 600 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            ├─────4
            │     ├─────5
            │     └─────6
            │           ├─────7
            │           ├─────8
            │           └─────9
            └─────10
                  ├─────11
                  └─────12
                        ├─────13
                        └─────14
                              ├─────15
                              │     ├─────16
                              │     └─────17
                              │           ├─────18
                              │           │     ├─────19
                              │           │     │     ├─────20
                              │           │     │     └─────21
                              │           │     │           ├─────22
                              │           │     │           │     ├─────23
                              │           │     │           │     │     ├─────24
                              │           │     │           │     │     └─────25
                              │           │     │           │     │           ├─────26
                              │           │     │           │     │           └─────27
                              │           │     │           │     │                 ├─────28
                              │           │     │           │     │                 └─────29
                              │           │     │           │     └─────30
                              │           │     │           └─────31
                              │           │     └─────32
                              │           └─────33
                              └─────34

Label: 0

+-+
|1|
+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 5

+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point
We use his sibling for the next strategy
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 6

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |2| |3|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: point

Label: 7

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 8

+-+-+-+
|1| |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+-+-+
|3|2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 11

+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 12

+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((1, 0)))
2: point
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 13

+-+-+-+-+
|3| |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|3| | | |4| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 14

+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 15

+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|2| |2|
+-+-+-+
| |1| |
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 16

+-+-+-+-+
| |2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 17

+-+-+-+-+
|1|2| |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|3| | |4|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 18

+-+-+-+-+-+
|3| | | |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1|2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 19

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((1, 0)))

Label: 20

+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 21

+-+-+-+
| | |3|
+-+-+-+
| | |1|
+-+-+-+
|1| | |
+-+-+-+
| |1|2|
+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |4|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))

Label: 22

+-+-+-+-+
| | | |4|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |1| |1| |2|
+-+-+-+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))

Label: 23

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |1| |2|
+-+-+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|3| | |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point

Label: 24

+-+-+
| |2|
+-+-+
|2| |
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+
| | |2|
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 25

+-+-+-+-+
| |3| | |
+-+-+-+-+
|3| | | |
+-+-+-+-+
|1| |2|3|
+-+-+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
|4| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|1| | |2|
+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 26

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1|2| | |3|
+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|1| | | | |2|
+-+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av+(Perm((0, 1)))

Label: 27

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|4|3| | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| | | |2|
+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| | | |2|
+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 28

+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|3|2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((1, 0)))
2: point
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 29

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 30

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 0)))

Label: 31

+-+-+-+-+
| | | |4|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |1| | | |2|
+-+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))

Label: 32

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 33

+-+-+-+-+-+
|3| | |1|4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|3| | | | |4|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 34

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0)))
2: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 526, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 527, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 528, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=0, j=0). | "}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 6, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 314, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Isolating the point at Cell(i=0, j=2) in its row. | "}, {"children": [], "formal_step": "recurse", "identifier": 527, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 529, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0)}, {Cell(i=0, j=0): Cell(i=2, j=1), Cell(i=0, j=2): Cell(i=2, j=3), Cell(i=1, j=1): Cell(i=3, j=2), Cell(i=2, j=2): Cell(i=4, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "relation": "| Isolating the point at Cell(i=0, j=2) in its row. | Separating the topmost point from cell Cell(i=0, j=4). | The reverse of: Isolating the point at Cell(i=0, j=3) in its row. | Isolating the point at Cell(i=0, j=3) in its column. | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 314, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 530, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=1) in its row. | The reverse of: Separting the rightmost point from cell Cell(i=0, j=1). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 531, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 3]": "point", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "Av+(Perm((1, 0)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[4, 5]": "Av+(Perm((1, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=4) in its column. | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 532, "in_tiling": {"[0, 0]": "point", "[1, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "point", "[3, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=1). | "}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 533, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=1, j=0). | "}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 528, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 1]": "point", "[1, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=0, j=0). | Separting the rightmost point from cell Cell(i=0, j=0). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 534, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 5]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Separating the topmost point from cell Cell(i=0, j=2). | Isolating the point at Cell(i=2, j=4) in its column. | Isolating the point at Cell(i=4, j=4) in its row. | The reverse of: Separating the topmost point from cell Cell(i=5, j=2). | The reverse of: Isolating the point at Cell(i=2, j=5) in its column. | The reverse of: Separating the topmost point from cell Cell(i=0, j=3). | Separating the bottommost point from cell Cell(i=3, j=2). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 222, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=5), Cell(i=4, j=0)]", "identifier": 535, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 3]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 5]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=0, j=4): Cell(i=0, j=4), Cell(i=1, j=3): Cell(i=1, j=3), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=1): Cell(i=2, j=5), Cell(i=1, j=0): Cell(i=4, j=0)}]", "relation": "| Isolating the point at Cell(i=2, j=3) in its row. | "}], "formal_step": "insert rightmost point into col 0", "identifier": 536, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=2, j=0). | Separting the leftmost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Separating the topmost point from cell Cell(i=0, j=2). | "}], "formal_step": "insert rightmost point into col 2", "identifier": 180, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its column. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 89, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=2), Cell(i=5, j=4)]", "identifier": 537, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 4]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=2): Cell(i=4, j=3), Cell(i=4, j=0): Cell(i=5, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=5, j=4)}]", "relation": "| Isolating the point at Cell(i=3, j=4) in its column. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 538, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=3, j=4) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=2, j=3). | Separating the topmost point from cell Cell(i=2, j=3). | "}], "formal_step": "insert topmost point into row 0", "identifier": 539, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=3) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=1, j=0). | "}], "formal_step": "insert bottommost point into row 2", "identifier": 267, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 46, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=3), Cell(i=2, j=0)]", "identifier": 540, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[4, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=2), Cell(i=1, j=0): Cell(i=3, j=1), Cell(i=2, j=0): Cell(i=4, j=1), Cell(i=2, j=2): Cell(i=4, j=3)}, {Cell(i=0, j=1): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=2, j=0)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 541, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 3]": "point", "[4, 1]": "Av+(Perm((0, 1)))", "[4, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 4]": "point", "[5, 1]": "Av+(Perm((0, 1)))", "[5, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=4, j=3) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=2). | Separating the topmost point from cell Cell(i=1, j=2). | "}], "formal_step": "insert leftmost point into col 3", "identifier": 542, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[1, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[2, 1]": "point", "[3, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=3, j=2) in its column. | The reverse of: Isolating the point at Cell(i=3, j=2) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=2). | Separting the rightmost point from cell Cell(i=0, j=2). | Isolating the point at Cell(i=3, j=2) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=3, j=1). | "}], "formal_step": "insert leftmost point into col 0", "identifier": 154, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point", "[2, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=2) in its column. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 8, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=0), Cell(i=3, j=2)]", "identifier": 543, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[2, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[2, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=1): Cell(i=2, j=3), Cell(i=2, j=2): Cell(i=2, j=4)}, {Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=1): Cell(i=3, j=2)}]", "relation": ""}], "formal_step": "insert bottommost point into row 3", "identifier": 544, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | Separating the topmost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=1, j=3) in its column. | The reverse of: Separting the rightmost point from cell Cell(i=2, j=3). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 0))).", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its row. | "}], "formal_step": "insert rightmost point into col 0", "identifier": 83, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Separting the rightmost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=1, j=0) in its row. | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1))).", "identifier": 545, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}}
