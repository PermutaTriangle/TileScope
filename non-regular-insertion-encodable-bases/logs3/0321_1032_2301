0321_1032_2301

===========================================
Log created Thu, 25 May 2017 07:34:33

Maximum depth fully searched was 4

Maximum time set at 120 seconds

Total time taken was 54 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 856 inferral cache hits and 3456 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 4063 tilings in it right now.
There were 2268 tilings of which 421 are verified.
There were 1172 SiblingNodes of which 115 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *3694* times, (1847 originating)
There were 0 cache misses

A proof tree was found in 54 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           └─────9
                  └─────10
                        ├─────11
                        │     ├─────12
                        │     └─────13
                        └─────14

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
2: point

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|2| | | |4| |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| |1| |2| | |
+-+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
3: point
4: Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))

Label: 5

+-+-+-+-+-+
|1| | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))

Label: 6

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))

Label: 7

+-+-+-+-+-+
|3| | |4| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| | | | |5| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | |2| |3| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 1)))
5: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |2| |3| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 9

+-+-+-+-+-+-+
|3| | | |4| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| |3| | | |2| | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))

Label: 10

+-+-+-+-+-+-+
|4| | | |5| |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| |1| |2| | |
+-+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
3: point
4: Av(Perm((0, 1)))
5: Av(Perm((1, 0)))

Label: 11

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
3: point
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point

Label: 12

+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 13

+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | |3| | |4| | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 14

+-+-+-+-+-+-+
|4| | | |1| |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((1, 0)))
3: point
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
|4| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| |4| | | |2| | |
+-+-+-+-+-+-+-+-+
| | | |3| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: Av+(Perm((1, 0)))
2: Av(Perm((1, 0)))
3: point
4: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 312, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 313, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 314, "in_tiling": {"[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=1). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 315, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 316, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0)))", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 4]": "Av(Perm((1, 0)))", "[6, 5]": "point", "[7, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=4, j=4). | "}], "formal_step": "We perform cell insertion into cell (5, 4); either it is empty or Av+(Perm((1, 0))).", "identifier": 317, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 3]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[5, 4]": "Av(Perm((1, 0)))", "[6, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1))).", "identifier": 318, "in_tiling": {"[0, 3]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 3]": "Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[3, 3]": "Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 319, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[4, 3]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((1, 0)))", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 320, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 1]": "point", "[3, 4]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point", "[4, 6]": "point", "[5, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[6, 0]": "Av(Perm((0, 1)))", "[6, 4]": "Av(Perm((1, 0)))", "[7, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 0))).", "identifier": 321, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 1]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 0]": "Av(Perm((1, 0)))", "[2, 1]": "point", "[3, 4]": "point", "[4, 0]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 322, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((1, 0)))", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "Av+(Perm((1, 0)))", "[3, 3]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 4]": "Av(Perm((1, 0)))", "[6, 5]": "point", "[7, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=4, j=4). | "}], "formal_step": "We perform cell insertion into cell (4, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 323, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 3]": "Av(Perm((1, 0)))", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((1, 0)))", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[4, 3]": "Av(Perm((1, 0)))", "[5, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 0))).", "identifier": 324, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "Av(Perm((1, 0)))", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[4, 3]": "Av(Perm((2, 1, 0)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[5, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1))).", "identifier": 325, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1))).", "identifier": 326, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}}
