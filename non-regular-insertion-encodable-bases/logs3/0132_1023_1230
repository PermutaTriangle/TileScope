0132_1023_1230

===========================================
Log created Fri, 26 May 2017 11:17:48

Maximum depth fully searched was 5

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 5537 inferral cache hits and 20620 partitioning cache hits.
The partitioning cache had 8 tilings in it right now.
The inferral cache has 25192 tilings in it right now.
There were 12593 tilings of which 1096 are verified.
There were 6411 SiblingNodes of which 240 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *21928* times, (10972 originating)
There were 1 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Fri, 26 May 2017 11:27:27

Maximum depth fully searched was 5

Maximum time set at 600 seconds

Total time taken was 579 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 4003 inferral cache hits and 890573 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 18128 tilings in it right now.
There were 9182 tilings of which 1195 are verified.
There were 4806 SiblingNodes of which 463 are verified.

The function splittings called the partitioning cache *891568* times, (3994 originating)
There were 0 cache misses

A proof tree was found in 579 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           └─────12
                        │     │                 ├─────13
                        │     │                 │     ├─────14
                        │     │                 │     │     ├─────15
                        │     │                 │     │     └─────16
                        │     │                 │     │           ├─────17
                        │     │                 │     │           └─────18
                        │     │                 │     └─────19
                        │     │                 │           ├─────20
                        │     │                 │           │     ├─────21
                        │     │                 │           │     └─────22
                        │     │                 │           └─────23
                        │     │                 └─────24
                        │     │                       ├─────25
                        │     │                       │     ├─────26
                        │     │                       │     └─────27
                        │     │                       └─────28
                        │     │                             ├─────29
                        │     │                             └─────30
                        │     └─────31
                        └─────32
                              ├─────33
                              │     ├─────34
                              │     └─────35
                              └─────36
                                    ├─────37
                                    └─────38

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point

Label: 6

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 7

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |6|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |4| | |5|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
6: Av(Perm((0, 1)))

Label: 8

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |4| | |5|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+-+-+-+
| | |3| |
+-+-+-+-+
|4| | |5|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 11

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| | | |1|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))

Label: 12

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 0, 2)))
2: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 13

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
3: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |4| | |
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | |2| | |5|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|1| |2| | |3|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: point
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 14

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| | |4|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |1| | |2|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
2: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 15

+-+
|1|
+-+
1: point

Label: 16

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
2: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 17

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point

Label: 18

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 0, 2)))
2: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 19

+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |3| |4|
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((1, 0)))

Label: 20

+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 21

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1)))

Label: 22

+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 23

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | | |2| |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| |5| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
5: Av+(Perm((0, 1)))

Label: 24

+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | |5| | |6|
+-+-+-+-+-+-+-+
| | | | |4| | |
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| |1| |2| |3| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: point
5: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
6: Av(Perm((1, 0)))

Label: 25

+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | |4| | |5|
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | |1| |2| |
+-+-+-+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 26

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |3| |
+-+-+-+-+
|4| | |5|
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))

Label: 27

+-+
|1|
+-+
1: point

Label: 28

+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
| | | |5| | |
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| |1| |2| |3|
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: point
5: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |3| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
|6| | | | | | |6|
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |5| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| |2|
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))
6: Av(Perm((0, 1)))

Label: 29

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 30

+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | | | |6|
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | |5| | | |
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | |1| |2|
+-+-+-+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
5: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))
6: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: Av+(Perm((0, 1)))

Label: 31

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |5|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |3| | |4|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
5: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
| | | |5| | |
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| |1| |2| |3|
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
4: point
5: Av(Perm((0, 1)))

Label: 32

+-+-+-+
| | |4|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |5|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |4| |4|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1)))
5: Av(Perm((0, 1)), Perm((1, 0)))

Label: 33

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |4| |4|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |1| |2|
+-+-+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1)))

Label: 34

+-+-+-+-+
| |4| |4|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 35

+-+
|1|
+-+
1: point

Label: 36

+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | |1| |2| | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 0)))
2: Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
3: point
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 37

+-+-+-+-+
| | | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 2)), Perm((1, 0, 2)))
4: Av+(Perm((0, 1)))

Label: 38

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1711, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1712, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1713, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1714, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1713, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1715, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 0, 2))).", "identifier": 86, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1716, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0)}]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=3, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1717, "in_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1718, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av+(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 4]": "point", "[6, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=5, j=2). | Inserting the top most point in to the cell Cell(i=3, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=4). | Inserting the top most point in to the cell Cell(i=5, j=3). | "}], "formal_step": "We perform cell insertion into cell (3, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1719, "in_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1720, "in_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 1]": "point", "[6, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 6]": "Av+(Perm((0, 1)))", "[2, 7]": "point", "[3, 5]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[4, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)), Perm((1, 0, 2)))", "[5, 1]": "point", "[6, 2]": "Av(Perm((1, 0)))", "[7, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=1, j=3). | Inserting the top most point in to the cell Cell(i=5, j=2). | "}], "formal_step": "We perform cell insertion into cell (7, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 1721, "in_tiling": {"[0, 1]": "point", "[1, 6]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 0]": "Av(Perm((0, 1)))", "[4, 7]": "point", "[5, 3]": "point", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[6, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 2]": "point", "[7, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=5, j=2). | Inserting the bottom most point in to the cell Cell(i=5, j=2). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 1722, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[5, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=4, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 92, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=2). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=0). | Inserting the right most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1723, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[2, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[5, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=2). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 109, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1707, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))", "[3, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[4, 6]": "point", "[5, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[5, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[5, 5]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[2, 4]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=2, j=4). | "}], "formal_step": "A splitting of the tiling", "identifier": 1724, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[2, 4]": "point", "[3, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 7]": "point", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))", "[5, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[6, 6]": "point", "[7, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[7, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[7, 5]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=5), Cell(i=1, j=1): Cell(i=3, j=7)}, {Cell(i=0, j=4): Cell(i=1, j=4), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=3): Cell(i=4, j=3), Cell(i=3, j=0): Cell(i=5, j=0), Cell(i=4, j=6): Cell(i=6, j=6), Cell(i=5, j=0): Cell(i=7, j=0), Cell(i=5, j=2): Cell(i=7, j=2), Cell(i=5, j=5): Cell(i=7, j=5)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=2). | Inserting the top most point in to the cell Cell(i=3, j=2). | Inserting the bottom most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=2). | Inserting the bottom most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1725, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[6, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=3, j=2). | Inserting the bottom most point in to the cell Cell(i=3, j=2). | "}], "formal_step": "Placing the maximum point into row 0", "identifier": 1715, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0))).", "identifier": 92, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "A splitting of the tiling", "identifier": 1726, "in_tiling": {"[0, 4]": "point", "[1, 0]": "Av(Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[2, 2]": "point", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 0]": "Av(Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[2, 2]": "point", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=3): Cell(i=1, j=3), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=4): Cell(i=3, j=5), Cell(i=3, j=1): Cell(i=4, j=1), Cell(i=3, j=3): Cell(i=4, j=3)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1724, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 5]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 4]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[2, 4]": "point", "[3, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | Inserting the bottom most point in to the cell Cell(i=3, j=2). | "}], "formal_step": "We perform cell insertion into cell (4, 5); either it is empty or Av+(Perm((0, 1))).", "identifier": 1707, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[2, 4]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "point", "[1, 0]": "Av(Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[2, 2]": "point", "[3, 6]": "point", "[4, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 5]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=4). | The reverse of: Inserting the left most point in to the cell Cell(i=1, j=0). | Inserting the right most point in to the cell Cell(i=1, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 84, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 1727, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 3]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=3): Cell(i=2, j=3), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=3, j=0): Cell(i=4, j=0), Cell(i=3, j=3): Cell(i=4, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1728, "in_tiling": {"[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((1, 0, 2)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))", "[5, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1718, "in_tiling": {"[0, 1]": "point", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av+(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=0). | Inserting the top most point in to the cell Cell(i=1, j=4). | The reverse of: Inserting the top most point in to the cell Cell(i=3, j=0). | Inserting the bottom most point in to the cell Cell(i=5, j=2). | "}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1729, "in_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av(Perm((1, 0)))", "[4, 1]": "point", "[5, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[6, 6]": "point", "[7, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "Av+(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[3, 4]": "point", "[4, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=3, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=3). | "}], "formal_step": "We perform cell insertion into cell (4, 5); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 1730, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 4]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "Av(Perm((1, 0, 2)), Perm((0, 1, 3, 2)), Perm((1, 2, 3, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[4, 3]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "Placing the leftmost point into column 1", "identifier": 1731, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1, 2)), Perm((0, 2, 1))).", "identifier": 84, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0))).", "identifier": 83, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0))).", "identifier": 1732, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 2, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}}
