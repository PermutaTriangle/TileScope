0132_1203_1230

===========================================
Log created Wed, 07 Jun 2017 09:40:46

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 101976 inferral cache hits and 15280 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 42617 tilings in it right now.
There were 14255 tilings of which 399 are verified.
There were 5711 SiblingNodes of which 254 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *16318* times, (8159 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Wed, 07 Jun 2017 09:50:47

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 121514 inferral cache hits and 16675 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 48172 tilings in it right now.
There were 17671 tilings of which 541 are verified.
There were 8639 SiblingNodes of which 384 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *17814* times, (8907 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Wed, 07 Jun 2017 10:00:47

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 124963 inferral cache hits and 16284 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 48262 tilings in it right now.
There were 17789 tilings of which 1021 are verified.
There were 5517 SiblingNodes of which 311 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *17392* times, (8696 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Wed, 07 Jun 2017 10:10:48

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 126612 inferral cache hits and 339840 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 52321 tilings in it right now.
There were 17060 tilings of which 473 are verified.
There were 6592 SiblingNodes of which 302 are verified.

The function splittings called the partitioning cache *341006* times, (4243 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Wed, 07 Jun 2017 10:20:48

Maximum depth fully searched was 4

Maximum time set at 600 seconds

Total time taken was 600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 143254 inferral cache hits and 249298 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 55345 tilings in it right now.
There were 20355 tilings of which 662 are verified.
There were 9859 SiblingNodes of which 464 are verified.

The function splittings called the partitioning cache *250616* times, (4608 originating)
There were 0 cache misses

No proof tree was found after 600 seconds

===========================================
Log created Wed, 07 Jun 2017 10:27:25

Maximum depth fully searched was 3

Maximum time set at 600 seconds

Total time taken was 396 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 100821 inferral cache hits and 134713 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 38304 tilings in it right now.
There were 14422 tilings of which 917 are verified.
There were 4374 SiblingNodes of which 286 are verified.

The function splittings called the partitioning cache *135563* times, (2883 originating)
There were 0 cache misses

A proof tree was found in 396 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     ├─────7
                  │     │     ├─────8
                  │     │     └─────9
                  │     └─────10
                  │           ├─────11
                  │           │     ├─────12
                  │           │     └─────13
                  │           └─────14
                  │                 ├─────15
                  │                 │     ├─────16
                  │                 │     ├─────17
                  │                 │     │     ├─────18
                  │                 │     │     └─────19
                  │                 │     └─────20
                  │                 │           ├─────21
                  │                 │           │     ├─────22
                  │                 │           │     │     ├─────23
                  │                 │           │     │     └─────24
                  │                 │           │     └─────25
                  │                 │           └─────26
                  │                 │                 ├─────27
                  │                 │                 └─────28
                  │                 └─────29
                  └─────30

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+-+
|1|2|
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
2: point
We use his sibling for the next strategy
+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+
|2|
+-+
|1|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+
|1|
+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 5

+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 6

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 7

+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+
|1| | |
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 10

+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 11

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 12

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 15

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |1|
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 16

+-+-+
| |1|
+-+-+
|1| |
+-+-+
1: point

Label: 17

+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 18

+-+
|1|
+-+
1: point

Label: 19

+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 20

+-+-+-+
| | |1|
+-+-+-+
| | |1|
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 21

+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
|2| |3| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
|2| |3| | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 22

+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| |3| | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | |3| |4| |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 23

+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
2: point
3: Av(Perm((1, 0)))

Label: 24

+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |1|2| |3| |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| |3| | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 25

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | |4| | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))

Label: 26

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | |3| |4|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 27

+-+-+-+
| | |1|
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Label: 28

+-+
|1|
+-+
1: point

Label: 29

+-+
|1|
+-+
1: point

Label: 30

+-+-+-+
| |1| |
+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 316, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 317, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 318, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 317, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 30, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 2)))", "[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Isolating the point at Cell(i=1, j=2) in its column. | "}], "formal_step": "A splitting of the tiling", "identifier": 38, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[3, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=2)}, {Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=0, j=2): Cell(i=1, j=3), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=1): Cell(i=3, j=1)}]", "relation": "| Isolating the point at Cell(i=2, j=3) in its column. | The reverse of: Isolating the point at Cell(i=1, j=3) in its column. | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 30, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 2)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 317, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 319, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 0]": "point", "[4, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1, 2)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=1): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": "| Isolating the point at Cell(i=1, j=3) in its column. | The reverse of: Isolating the point at Cell(i=0, j=3) in its column. | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 320, "in_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 317, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 24, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its column. | "}], "formal_step": "A splitting of the tiling", "identifier": 321, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=2, j=3), Cell(i=2, j=1): Cell(i=3, j=1)}]", "relation": "| Isolating the point at Cell(i=3, j=3) in its column. | The reverse of: Isolating the point at Cell(i=2, j=3) in its column. | "}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 322, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[2, 2]": "point", "[3, 3]": "point", "[4, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=3, j=3). | Separating the bottommost point from cell Cell(i=3, j=3). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 323, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "point", "[5, 3]": "Av(Perm((1, 0)))", "[6, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 3]": "Av(Perm((1, 0)))", "[6, 5]": "Av(Perm((1, 0)))", "[7, 6]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=2, j=3). | Separting the leftmost point from cell Cell(i=2, j=3). | Isolating the point at Cell(i=6, j=4) in its row. | "}], "formal_step": "insert rightmost point into col 2", "identifier": 324, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 0)))", "[5, 4]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=4) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=0, j=0). | Separting the leftmost point from cell Cell(i=0, j=0). | The reverse of: Isolating the point at Cell(i=2, j=2) in its column. | Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Separating the topmost point from cell Cell(i=2, j=2). | Separating the bottommost point from cell Cell(i=2, j=2). | Isolating the point at Cell(i=3, j=4) in its column. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 325, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 5]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 6]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 7]": "point", "[5, 4]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[7, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=5, j=2). | Separting the rightmost point from cell Cell(i=5, j=2). | Isolating the point at Cell(i=4, j=5) in its row. | "}], "formal_step": "insert topmost point into row 2", "identifier": 326, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[4, 4]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 5]": "point", "[6, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=4) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=2, j=3) in its column. | Separating the bottommost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=3, j=5) in its column. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 24, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 317, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 327, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=2, j=2): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=3) in its column. | "}], "formal_step": "Isolated the point at Cell(i=2, j=2) in its column", "identifier": 328, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert topmost point into row 1", "identifier": 24, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=2) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 317, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "A splitting of the tiling", "identifier": 329, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=3, j=2): Cell(i=3, j=2), Cell(i=4, j=1): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": "| Isolating the point at Cell(i=1, j=3) in its column. | The reverse of: Isolating the point at Cell(i=0, j=3) in its column. | "}], "formal_step": "Isolated the point at Cell(i=2, j=2) in its column", "identifier": 330, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert topmost point into row 1", "identifier": 30, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[2, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 24, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=2) in its column. | "}], "formal_step": "Isolated the point at Cell(i=0, j=2) in its column", "identifier": 331, "in_tiling": {"[0, 0]": "point", "[0, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[0, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the bottommost point from cell Cell(i=0, j=1). | Separating the topmost point from cell Cell(i=0, j=1). | "}], "formal_step": "insert bottommost point into row 1", "identifier": 28, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))", "[1, 0]": "point"}, "out_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=0, j=0). | Separating the bottommost point from cell Cell(i=0, j=0). | "}], "formal_step": "insert rightmost point into col 0", "identifier": 332, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": ""}}
