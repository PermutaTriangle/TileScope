0132_0213_1230

===========================================
Log created Fri, 16 Jun 2017 04:51:18

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 696637 inferral cache hits and 3609336 partitioning cache hits.
The partitioning cache had 5 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 84737 tilings of which 2474 are verified.
There were 21698 SiblingNodes of which 678 are verified.

The function splittings called the partitioning cache *3612984* times, (14548 originating)
There were 0 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 16 Jun 2017 05:53:14

Maximum depth fully searched was 3

Maximum time set at 3600 seconds

Total time taken was 3715 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 188000 inferral cache hits and 29910748 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 52990 tilings in it right now.
There were 20563 tilings of which 1548 are verified.
There were 8866 SiblingNodes of which 919 are verified.

The function splittings called the partitioning cache *29911269* times, (2602 originating)
There were 0 cache misses

No proof tree was found after 3715 seconds

===========================================
Log created Fri, 16 Jun 2017 06:55:17

Maximum depth fully searched was 17

Maximum time set at 3600 seconds

Total time taken was 3722 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 29170 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 56491 tilings in it right now.
There were 37940 tilings of which 19386 are verified.
There were 18474 SiblingNodes of which 5795 are verified.

There were 0 cache misses

No proof tree was found after 3722 seconds

===========================================
Log created Fri, 16 Jun 2017 07:55:19

Maximum depth fully searched was 14

Maximum time set at 3600 seconds

Total time taken was 3601 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 81218 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 106821 tilings of which 60815 are verified.
There were 38639 SiblingNodes of which 11015 are verified.

There were 0 cache misses

No proof tree was found after 3601 seconds

===========================================
Log created Fri, 16 Jun 2017 08:55:21

Maximum depth fully searched was 18

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 7820 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 43967 tilings in it right now.
There were 24669 tilings of which 13125 are verified.
There were 12489 SiblingNodes of which 3654 are verified.

There were 0 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 16 Jun 2017 09:55:23

Maximum depth fully searched was 13

Maximum time set at 3600 seconds

Total time taken was 3601 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 63928 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 80094 tilings of which 33819 are verified.
There were 25076 SiblingNodes of which 5693 are verified.

There were 0 cache misses

No proof tree was found after 3601 seconds

===========================================
Log created Fri, 16 Jun 2017 11:29:05

Maximum depth fully searched was 5

Maximum time set at 3600 seconds

Total time taken was 5621 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 13190 inferral cache hits and 44684 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 52053 tilings in it right now.
There were 28752 tilings of which 3133 are verified.
There were 15090 SiblingNodes of which 1240 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *47422* times, (23728 originating)
There were 2 cache misses

No proof tree was found after 5621 seconds

===========================================
Log created Fri, 16 Jun 2017 12:29:06

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3601 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty

There were 891382 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 106681 tilings of which 4172 are verified.
There were 24385 SiblingNodes of which 960 are verified.

There were 0 cache misses

No proof tree was found after 3601 seconds

===========================================
Log created Fri, 16 Jun 2017 13:29:08

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 327906 inferral cache hits and 42170 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 40398 tilings of which 1564 are verified.
There were 15026 SiblingNodes of which 931 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *44810* times, (22430 originating)
There were 3 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 16 Jun 2017 14:29:13

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3604 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 465443 inferral cache hits and 53851 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 58449 tilings of which 1647 are verified.
There were 26098 SiblingNodes of which 1116 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *57240* times, (28645 originating)
There were 3 cache misses

No proof tree was found after 3604 seconds

===========================================
Log created Fri, 16 Jun 2017 15:29:15

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 461061 inferral cache hits and 51454 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 58356 tilings of which 2966 are verified.
There were 16908 SiblingNodes of which 805 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *54702* times, (27375 originating)
There were 3 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 16 Jun 2017 16:29:16

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3600 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 537922 inferral cache hits and 4714855 partitioning cache hits.
The partitioning cache had 9 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 63878 tilings of which 1838 are verified.
There were 23265 SiblingNodes of which 1081 are verified.

The function splittings called the partitioning cache *4719103* times, (18226 originating)
There were 0 cache misses

No proof tree was found after 3600 seconds

===========================================
Log created Fri, 16 Jun 2017 17:20:04

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3046 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 526151 inferral cache hits and 2913918 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 66184 tilings of which 2603 are verified.
There were 29228 SiblingNodes of which 1542 are verified.

The function splittings called the partitioning cache *2917773* times, (15663 originating)
There were 0 cache misses

A proof tree was found in 3046 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           │     ├─────11
                  │           │     └─────12
                  │           │           ├─────13
                  │           │           └─────14
                  │           │                 ├─────15
                  │           │                 ├─────16
                  │           │                 │     ├─────17
                  │           │                 │     │     ├─────18
                  │           │                 │     │     └─────19
                  │           │                 │     └─────20
                  │           │                 │           ├─────21
                  │           │                 │           │     ├─────22
                  │           │                 │           │     │     ├─────23
                  │           │                 │           │     │     │     ├─────24
                  │           │                 │           │     │     │     ├─────25
                  │           │                 │           │     │     │     │     ├─────26
                  │           │                 │           │     │     │     │     └─────27
                  │           │                 │           │     │     │     └─────28
                  │           │                 │           │     │     └─────29
                  │           │                 │           │     └─────30
                  │           │                 │           └─────31
                  │           │                 │                 ├─────32
                  │           │                 │                 └─────33
                  │           │                 └─────34
                  │           │                       ├─────35
                  │           │                       └─────36
                  │           └─────37
                  └─────38

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|2|
+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
2: point

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+
|2|
+-+
|2|
+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
2: point

Label: 5

+-+-+-+
| | |3|
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 6

+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point
We use his sibling for the next strategy
+-+-+
| |2|
+-+-+
|2| |
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point

Label: 7

+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
|1|2| |
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1)))

Label: 8

+-+-+-+
| | |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point

Label: 9

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point

Label: 10

+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 11

+-+
|1|
+-+
1: point

Label: 12

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 13

+-+-+-+
| |3| |
+-+-+-+
|3| | |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point

Label: 14

+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+
|3| | |
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 15

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 16

+-+-+-+
|3| | |
+-+-+-+
| |3| |
+-+-+-+
|3| | |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 17

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| |1| |2| |3|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point

Label: 18

+-+
|1|
+-+
1: point

Label: 19

+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 20

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |1| |2|
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
| | | |4| | | |
+-+-+-+-+-+-+-+
|1| |2| |2| |3|
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point

Label: 21

+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|2| |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point

Label: 22

+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point

Label: 23

+-+-+
|2| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
3: point

Label: 24

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 25

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point

Label: 26

+-+
|1|
+-+
1: point

Label: 27

+-+-+
|2| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: point

Label: 28

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|2| |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1)))
3: point

Label: 29

+-+
|1|
+-+
1: point

Label: 30

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1)))
3: point

Label: 31

+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
| | | |4| | | |
+-+-+-+-+-+-+-+
|1| |1| |2| |3|
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point

Label: 32

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
4: point

Label: 33

+-+
|1|
+-+
1: point

Label: 34

+-+-+-+
|3| | |
+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 35

+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Label: 36

+-+
|1|
+-+
1: point

Label: 37

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av+(Perm((0, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))
4: point

Label: 38

+-+-+-+
|3| | |
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))
3: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2271, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2273, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[4, 1]": "point", "[5, 5]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=0) in its row. | Isolating the point at Cell(i=0, j=3) in its column. | ", "strategy_verified": true}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2274, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 1]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "insert rightmost point into col 0", "identifier": 2275, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 1]": "point", "[1, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=1) in its column. | ", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1995, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=1) in its column. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2276, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 49, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 2277, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 3]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=2, j=3), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=1): Cell(i=4, j=2), Cell(i=4, j=0): Cell(i=5, j=0)}]", "relation": "| Isolating the point at Cell(i=1, j=3) in its column. | ", "strategy_verified": false}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 2276, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 302, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 2]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 2]": "point", "[1, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 2278, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[4, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 3]": "point", "[2, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=1, j=3), Cell(i=1, j=1): Cell(i=2, j=2)}]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=3) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 2279, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[2, 1]": "point", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "insert topmost point into row 0", "identifier": 302, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 2]": "point", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 2280, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2281, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[5, 4]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=4) in its column. | ", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 3, 0))).", "identifier": 2279, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 4]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=4) in its column. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1995, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 2282, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[5, 2]": "point", "[6, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=2): Cell(i=3, j=2), Cell(i=4, j=0): Cell(i=4, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=3) in its column. | ", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (6, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0))).", "identifier": 2283, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[5, 2]": "point", "[6, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=3) in its column. | ", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=0, j=1) in its column", "identifier": 2284, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 1]": "point", "[0, 3]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 1]": "point", "[0, 3]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 49, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 2272, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 2285, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=1): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": "", "strategy_verified": false}], "formal_step": "insert topmost point into row 0", "identifier": 49, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=1) in its column. | The reverse of: Isolating the point at Cell(i=0, j=2) in its column. | ", "strategy_verified": false}], "formal_step": "insert topmost point into row 0", "identifier": 333, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "A splitting of the tiling", "identifier": 2286, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0)}]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2287, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1995, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "We perform cell insertion into cell (4, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0))).", "identifier": 140, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 49, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 3, 0)))", "[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=0, j=1) in its column", "identifier": 332, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[0, 1]": "point", "[0, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[0, 1]": "point", "[0, 2]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert topmost point into row 0", "identifier": 10, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[0, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))", "[0, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert topmost point into row 0", "identifier": 2288, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 2, 3, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
