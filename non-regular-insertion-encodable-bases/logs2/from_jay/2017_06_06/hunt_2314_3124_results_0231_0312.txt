Hunting for proof tree for the class: perm set of all perms avoiding Basis((Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3))))
===============================
Doing depth 1
We had 24 inferral cache hits and 0 partitioning cache hits.
The partitioning cache has 0 tilings in it right now.
The inferral cache has 12 tilings in it right now.
There are 11 tilings in the search tree.
There are 1 verified tilings.
There are 3 SiblingNodes of which 1 are verified.
Time taken so far is 0.08568644523620605 seconds.

There were 0 cache misses
===============================
Doing depth 2
We had 373 inferral cache hits and 28 partitioning cache hits.
The partitioning cache has 0 tilings in it right now.
The inferral cache has 135 tilings in it right now.
There are 96 tilings in the search tree.
There are 6 verified tilings.
There are 28 SiblingNodes of which 6 are verified.
Time taken so far is 1.99810791015625 seconds.

The function splittings called the partitioning cache *36* times, (16 originating)
There were 0 cache misses
===============================
Doing depth 3
We had 6485 inferral cache hits and 2155 partitioning cache hits.
The partitioning cache has 0 tilings in it right now.
The inferral cache has 1995 tilings in it right now.
There are 1140 tilings in the search tree.
There are 69 verified tilings.
There are 388 SiblingNodes of which 33 are verified.
Time taken so far is 46.449843645095825 seconds.

The function splittings called the partitioning cache *2241* times, (219 originating)
There were 0 cache misses
===============================
Doing depth 4
We had 107911 inferral cache hits and 152116 partitioning cache hits.
The partitioning cache has 96 tilings in it right now.
The inferral cache has 31919 tilings in it right now.
There are 14892 tilings in the search tree.
There are 745 verified tilings.
There are 4475 SiblingNodes of which 232 are verified.
Time taken so far is 1260.2983310222626 seconds.

The function splittings called the partitioning cache *153025* times, (3126 originating)
There were 0 cache misses
root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           └─────11
                  └─────12
                        ├─────13
                        └─────14

Label: 0

+-+
|1|
+-+
1: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
2: point

Label: 4

+-+-+
| |1|
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point

Label: 5

+-+-+-+
| |3| |
+-+-+-+
|3| | |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
4: point

Label: 6

+-+-+-+-+
| | |3| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | |2|
+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point

Label: 7

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| |2| |3|
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av+(Perm((0, 1)))
3: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
4: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | |4| | |2|
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|1| | | | |2|
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point
4: Av(Perm((0, 1)))

Label: 10

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |4| | |2|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|1| | | |2|
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+
| |1|
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))

Label: 11

+-+
|1|
+-+
1: point

Label: 12

+-+-+-+
| |3| |
+-+-+-+
| | |3|
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((2, 0, 1)))
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
3: point
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1|2| |3|
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))

Label: 13

+-+-+-+-+
| | |1| |
+-+-+-+-+
|1|2| |3|
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+
| |1|
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))

Label: 14

+-+
|1|
+-+
1: point
{
  "root": {
    "children": [
      {
        "children": [],
        "in_tiling": {},
        "identifier": 391,
        "relation": "",
        "out_tiling": {},
        "recurse": "[]",
        "formal_step": "Verified because it is a one by one tiling with a subclass"
      },
      {
        "children": [
          {
            "children": [],
            "in_tiling": {
              "[1, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
              "[0, 1]": "point"
            },
            "identifier": 392,
            "relation": "",
            "out_tiling": {
              "[1, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
              "[0, 1]": "point"
            },
            "recurse": "[]",
            "formal_step": "The tiling is a subset of the subclass"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [
                      {
                        "children": [],
                        "in_tiling": {
                          "[1, 1]": "point",
                          "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                          "[2, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
                        },
                        "identifier": 54,
                        "relation": "| The reverse of: Isolating the point at Cell(i=0, j=1) in its column. | The reverse of: Separating the topmost point from cell Cell(i=0, j=0). | ",
                        "out_tiling": {
                          "[0, 0]": "Av+(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
                        },
                        "recurse": "[]",
                        "formal_step": "recurse"
                      },
                      {
                        "children": [],
                        "in_tiling": {
                          "[0, 0]": "point"
                        },
                        "identifier": 1,
                        "relation": "",
                        "out_tiling": {
                          "[0, 0]": "point"
                        },
                        "recurse": "[]",
                        "formal_step": "Verified because it is a one by one tiling with a subclass"
                      }
                    ],
                    "in_tiling": {
                      "[2, 2]": "point",
                      "[3, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                      "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                      "[1, 1]": "point"
                    },
                    "identifier": 393,
                    "relation": "",
                    "out_tiling": {
                      "[2, 2]": "point",
                      "[3, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                      "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                      "[1, 1]": "point"
                    },
                    "recurse": "[{Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=1): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]",
                    "formal_step": "A splitting of the tiling"
                  },
                  {
                    "children": [
                      {
                        "children": [],
                        "in_tiling": {
                          "[1, 2]": "Av(Perm((0, 1)))",
                          "[4, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                          "[2, 1]": "point",
                          "[3, 3]": "point",
                          "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                          "[4, 2]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
                        },
                        "identifier": 209,
                        "relation": "| The reverse of: Isolating the point at Cell(i=2, j=1) in its row. | The reverse of: Separting the rightmost point from cell Cell(i=0, j=0). | Separting the leftmost point from cell Cell(i=0, j=0). | The reverse of: Isolating the point at Cell(i=1, j=1) in its column. | ",
                        "out_tiling": {
                          "[1, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                          "[1, 1]": "point",
                          "[0, 0]": "point"
                        },
                        "recurse": "[]",
                        "formal_step": "recurse"
                      },
                      {
                        "children": [],
                        "in_tiling": {
                          "[0, 0]": "point"
                        },
                        "identifier": 1,
                        "relation": "",
                        "out_tiling": {
                          "[0, 0]": "point"
                        },
                        "recurse": "[]",
                        "formal_step": "recurse"
                      }
                    ],
                    "in_tiling": {
                      "[1, 1]": "point",
                      "[4, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                      "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                      "[3, 2]": "point",
                      "[2, 0]": "Av+(Perm((0, 1)))"
                    },
                    "identifier": 394,
                    "relation": "| Separting the rightmost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=4, j=2) in its row. | ",
                    "out_tiling": {
                      "[5, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                      "[4, 4]": "point",
                      "[3, 1]": "point",
                      "[1, 3]": "point",
                      "[2, 2]": "Av(Perm((0, 1)))",
                      "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                      "[5, 2]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
                    },
                    "recurse": "[{Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=3, j=3): Cell(i=4, j=4), Cell(i=4, j=2): Cell(i=5, j=2), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=4, j=0): Cell(i=5, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]",
                    "formal_step": "A splitting of the tiling"
                  }
                ],
                "in_tiling": {
                  "[1, 2]": "point",
                  "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[2, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                  "[0, 1]": "point"
                },
                "identifier": 212,
                "relation": "| Isolating the point at Cell(i=1, j=2) in its column. | ",
                "out_tiling": {
                  "[1, 1]": "point",
                  "[4, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                  "[0, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[3, 2]": "point",
                  "[2, 0]": "Av(Perm((0, 1)))"
                },
                "recurse": "[]",
                "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1)))."
              },
              {
                "children": [
                  {
                    "children": [],
                    "in_tiling": {
                      "[1, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                      "[3, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                      "[2, 1]": "point",
                      "[0, 0]": "point"
                    },
                    "identifier": 209,
                    "relation": "| The reverse of: Isolating the point at Cell(i=1, j=1) in its column. | ",
                    "out_tiling": {
                      "[1, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                      "[1, 1]": "point",
                      "[0, 0]": "point"
                    },
                    "recurse": "[]",
                    "formal_step": "recurse"
                  },
                  {
                    "children": [],
                    "in_tiling": {
                      "[0, 0]": "point"
                    },
                    "identifier": 1,
                    "relation": "",
                    "out_tiling": {
                      "[0, 0]": "point"
                    },
                    "recurse": "[]",
                    "formal_step": "recurse"
                  }
                ],
                "in_tiling": {
                  "[2, 1]": "point",
                  "[0, 0]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[2, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                  "[1, 2]": "point"
                },
                "identifier": 395,
                "relation": "| Isolating the point at Cell(i=1, j=2) in its column. | Separting the leftmost point from cell Cell(i=0, j=0). | The reverse of: Isolating the point at Cell(i=1, j=2) in its column. | ",
                "out_tiling": {
                  "[1, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[3, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
                  "[2, 1]": "point",
                  "[0, 0]": "point",
                  "[1, 2]": "point"
                },
                "recurse": "[{Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=2, j=1): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=2)}]",
                "formal_step": "A splitting of the tiling"
              }
            ],
            "in_tiling": {
              "[1, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
              "[1, 1]": "point",
              "[0, 0]": "point"
            },
            "identifier": 209,
            "relation": "| Isolating the point at Cell(i=1, j=1) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | ",
            "out_tiling": {
              "[1, 1]": "point",
              "[0, 0]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1)))",
              "[2, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
            },
            "recurse": "[]",
            "formal_step": "insert topmost point into row 0"
          }
        ],
        "in_tiling": {
          "[0, 0]": "Av+(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
        },
        "identifier": 54,
        "relation": "| Separting the leftmost point from cell Cell(i=0, j=0). | ",
        "out_tiling": {
          "[1, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))",
          "[0, 0]": "point"
        },
        "recurse": "[]",
        "formal_step": "insert topmost point into row 0"
      }
    ],
    "in_tiling": {
      "[0, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
    },
    "identifier": 220,
    "relation": "",
    "out_tiling": {
      "[0, 0]": "Av(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))"
    },
    "recurse": "[]",
    "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0, 3)), Perm((2, 0, 1, 3)))."
  }
}
I took 1260.3246042728424 seconds
