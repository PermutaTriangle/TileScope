Hunting for proof tree for the class: perm set of all perms avoiding Basis((Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1))))
===============================
Doing depth 1
We had 24 inferral cache hits and 0 partitioning cache hits.
The partitioning cache has 0 tilings in it right now.
The inferral cache has 14 tilings in it right now.
There are 11 tilings in the search tree.
There are 1 verified tilings.
There are 3 SiblingNodes of which 1 are verified.
Time taken so far is 0.08028793334960938 seconds.

There were 0 cache misses
===============================
Doing depth 2
We had 375 inferral cache hits and 30 partitioning cache hits.
The partitioning cache has 0 tilings in it right now.
The inferral cache has 151 tilings in it right now.
There are 96 tilings in the search tree.
There are 6 verified tilings.
There are 28 SiblingNodes of which 6 are verified.
Time taken so far is 2.064220905303955 seconds.

The function splittings called the partitioning cache *38* times, (16 originating)
There were 0 cache misses
===============================
Doing depth 3
We had 6291 inferral cache hits and 2391 partitioning cache hits.
The partitioning cache has 0 tilings in it right now.
The inferral cache has 2205 tilings in it right now.
There are 1134 tilings in the search tree.
There are 62 verified tilings.
There are 400 SiblingNodes of which 28 are verified.
Time taken so far is 45.77553200721741 seconds.

The function splittings called the partitioning cache *2477* times, (227 originating)
There were 0 cache misses
===============================
Doing depth 4
We had 52795 inferral cache hits and 112651 partitioning cache hits.
The partitioning cache has 198 tilings in it right now.
The inferral cache has 17653 tilings in it right now.
There are 7840 tilings in the search tree.
There are 421 verified tilings.
There are 2546 SiblingNodes of which 160 are verified.
Time taken so far is 718.7412295341492 seconds.

The function splittings called the partitioning cache *113288* times, (2247 originating)
There were 0 cache misses
root: 0
      ├─────1
      └─────2
            ├─────3
            │     ├─────4
            │     │     ├─────5
            │     │     └─────6
            │     ├─────7
            │     │     ├─────8
            │     │     └─────9
            │     └─────10
            │           ├─────11
            │           └─────12
            └─────13

Label: 0

+-+
|1|
+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
We use his sibling for the next strategy
+-+
|2|
+-+
|1|
+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point

Label: 3

+-+-+
|2| |
+-+-+
|1|2|
+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| | |5| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
4: Av(Perm((2, 0, 1)))
5: Av(Perm((0, 1)))

Label: 4

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point

Label: 5

+-+
|2|
+-+
|1|
+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))

Label: 6

+-+
|1|
+-+
1: point

Label: 7

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
|4| | |5| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
4: Av(Perm((2, 0, 1)))
5: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2|3|
+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point

Label: 8

+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2|3|
+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
|1|2|
+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|4| | | |5| |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| |2| | | |
+-+-+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
4: Av(Perm((2, 0, 1)))
5: Av(Perm((0, 1)))

Label: 11

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| | |5| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1)))
3: point
4: Av(Perm((2, 0, 1)))
5: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
|1|2|
+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point

Label: 12

+-+
|1|
+-+
1: point

Label: 13

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))
2: point
{
  "root": {
    "in_tiling": {
      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"
    },
    "relation": "",
    "recurse": "[]",
    "out_tiling": {
      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"
    },
    "children": [
      {
        "in_tiling": {},
        "relation": "",
        "recurse": "[]",
        "out_tiling": {},
        "children": [],
        "identifier": 370,
        "formal_step": "Verified because it is a one by one tiling with a subclass"
      },
      {
        "in_tiling": {
          "[0, 0]": "Av+(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"
        },
        "relation": "| Separating the topmost point from cell Cell(i=0, j=0). | ",
        "recurse": "[]",
        "out_tiling": {
          "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
          "[0, 1]": "point"
        },
        "children": [
          {
            "in_tiling": {
              "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
              "[0, 1]": "point",
              "[1, 0]": "point"
            },
            "relation": "| Isolating the point at Cell(i=0, j=1) in its column. | Isolating the point at Cell(i=1, j=1) in its row. | ",
            "recurse": "[]",
            "out_tiling": {
              "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
              "[4, 1]": "point",
              "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
              "[0, 2]": "Av(Perm((2, 0, 1)))",
              "[3, 2]": "Av(Perm((0, 1)))",
              "[1, 3]": "point"
            },
            "children": [
              {
                "in_tiling": {
                  "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                  "[1, 2]": "point",
                  "[3, 1]": "point",
                  "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))"
                },
                "relation": "| The reverse of: Isolating the point at Cell(i=0, j=2) in its column. | ",
                "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=0): Cell(i=0, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]",
                "out_tiling": {
                  "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                  "[1, 1]": "point",
                  "[0, 2]": "point"
                },
                "children": [
                  {
                    "in_tiling": {
                      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                      "[0, 1]": "point"
                    },
                    "relation": "| The reverse of: Separating the topmost point from cell Cell(i=0, j=0). | ",
                    "recurse": "[]",
                    "out_tiling": {
                      "[0, 0]": "Av+(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))"
                    },
                    "children": [],
                    "identifier": 246,
                    "formal_step": "recurse"
                  },
                  {
                    "in_tiling": {
                      "[0, 0]": "point"
                    },
                    "relation": "",
                    "recurse": "[]",
                    "out_tiling": {
                      "[0, 0]": "point"
                    },
                    "children": [],
                    "identifier": 0,
                    "formal_step": "Verified because it is a one by one tiling with a subclass"
                  }
                ],
                "identifier": 371,
                "formal_step": "A splitting of the tiling"
              },
              {
                "in_tiling": {
                  "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                  "[4, 1]": "point",
                  "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[1, 4]": "point",
                  "[0, 2]": "Av(Perm((2, 0, 1)))",
                  "[3, 2]": "Av(Perm((0, 1)))",
                  "[0, 3]": "point"
                },
                "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | The reverse of: Separting the rightmost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=1, j=2) in its column. | Separting the rightmost point from cell Cell(i=4, j=0). | The reverse of: Isolating the point at Cell(i=2, j=2) in its column. | ",
                "recurse": "[{Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=1): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]",
                "out_tiling": {
                  "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                  "[3, 0]": "point",
                  "[2, 2]": "point",
                  "[1, 1]": "point",
                  "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))"
                },
                "children": [
                  {
                    "in_tiling": {
                      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                      "[3, 0]": "point",
                      "[1, 1]": "point",
                      "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))"
                    },
                    "relation": "| The reverse of: Isolating the point at Cell(i=0, j=1) in its column. | ",
                    "recurse": "[]",
                    "out_tiling": {
                      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                      "[0, 1]": "point",
                      "[1, 0]": "point"
                    },
                    "children": [],
                    "identifier": 140,
                    "formal_step": "recurse"
                  },
                  {
                    "in_tiling": {
                      "[0, 0]": "point"
                    },
                    "relation": "",
                    "recurse": "[]",
                    "out_tiling": {
                      "[0, 0]": "point"
                    },
                    "children": [],
                    "identifier": 0,
                    "formal_step": "recurse"
                  }
                ],
                "identifier": 372,
                "formal_step": "A splitting of the tiling"
              },
              {
                "in_tiling": {
                  "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                  "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[5, 1]": "point",
                  "[0, 2]": "Av(Perm((2, 0, 1)))",
                  "[3, 3]": "point",
                  "[4, 2]": "Av(Perm((0, 1)))",
                  "[1, 4]": "point"
                },
                "relation": "",
                "recurse": "[{Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=2): Cell(i=4, j=2), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=4, j=1): Cell(i=5, j=1), Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=0, j=0): Cell(i=0, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]",
                "out_tiling": {
                  "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                  "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                  "[5, 1]": "point",
                  "[0, 2]": "Av(Perm((2, 0, 1)))",
                  "[3, 3]": "point",
                  "[4, 2]": "Av(Perm((0, 1)))",
                  "[1, 4]": "point"
                },
                "children": [
                  {
                    "in_tiling": {
                      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                      "[4, 1]": "point",
                      "[2, 0]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1)))",
                      "[0, 2]": "Av(Perm((2, 0, 1)))",
                      "[3, 2]": "Av(Perm((0, 1)))",
                      "[1, 3]": "point"
                    },
                    "relation": "| The reverse of: Isolating the point at Cell(i=1, j=1) in its row. | The reverse of: Isolating the point at Cell(i=0, j=1) in its column. | ",
                    "recurse": "[]",
                    "out_tiling": {
                      "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
                      "[0, 1]": "point",
                      "[1, 0]": "point"
                    },
                    "children": [],
                    "identifier": 140,
                    "formal_step": "recurse"
                  },
                  {
                    "in_tiling": {
                      "[0, 0]": "point"
                    },
                    "relation": "",
                    "recurse": "[]",
                    "out_tiling": {
                      "[0, 0]": "point"
                    },
                    "children": [],
                    "identifier": 0,
                    "formal_step": "recurse"
                  }
                ],
                "identifier": 373,
                "formal_step": "A splitting of the tiling"
              }
            ],
            "identifier": 140,
            "formal_step": "insert topmost point into row 2"
          },
          {
            "in_tiling": {
              "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
              "[1, 1]": "point"
            },
            "relation": "",
            "recurse": "[]",
            "out_tiling": {
              "[0, 0]": "Av(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))",
              "[1, 1]": "point"
            },
            "children": [],
            "identifier": 374,
            "formal_step": "The tiling is a subset of the subclass"
          }
        ],
        "identifier": 246,
        "formal_step": "insert rightmost point into col 0"
      }
    ],
    "identifier": 375,
    "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((3, 1, 2, 0)), Perm((3, 2, 0, 1)))."
  }
}
I took 718.7664649486542 seconds
