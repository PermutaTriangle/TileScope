0231_2130

===========================================
Log created Mon, 12 Jun 2017 17:35:19

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3776 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 261748 inferral cache hits and 27098 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 93497 tilings in it right now.
There were 32890 tilings of which 427 are verified.
There were 10942 SiblingNodes of which 310 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *28840* times, (14420 originating)
There were 0 cache misses

No proof tree was found after 3776 seconds

===========================================
Log created Mon, 12 Jun 2017 18:38:51

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 3811 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 240254 inferral cache hits and 26102 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 80132 tilings in it right now.
There were 31781 tilings of which 591 are verified.
There were 13714 SiblingNodes of which 419 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *27816* times, (13908 originating)
There were 0 cache misses

No proof tree was found after 3811 seconds

===========================================
Log created Mon, 12 Jun 2017 19:16:44

Maximum depth fully searched was 4

Maximum time set at 3600 seconds

Total time taken was 2272 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 390620 inferral cache hits and 34189 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 49211 tilings of which 2400 are verified.
There were 12204 SiblingNodes of which 516 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *36382* times, (18191 originating)
There were 0 cache misses

A proof tree was found in 2272 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           │     ├─────9
                  │           │     │     ├─────10
                  │           │     │     └─────11
                  │           │     │           ├─────12
                  │           │     │           │     ├─────13
                  │           │     │           │     └─────14
                  │           │     │           └─────15
                  │           │     └─────16
                  │           ├─────17
                  │           │     ├─────18
                  │           │     └─────19
                  │           └─────20
                  │                 ├─────21
                  │                 └─────22
                  └─────23
                        ├─────24
                        └─────25

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
We use his sibling for the next strategy
+-+
|2|
+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+
|1|
+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))

Label: 5

+-+-+-+
| | |1|
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |3| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))

Label: 6

+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))

Label: 7

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2|1| |3| |3|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| |4| | |3| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| |1| |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 8

+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |3| | |4| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| |1| |1| | |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
| | |1|
+-+-+-+
|1|2| |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))

Label: 9

+-+-+
|1|2|
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |2|
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 10

+-+-+
|2| |
+-+-+
| |2|
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point

Label: 11

+-+-+
| |2|
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |2|
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |2|
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 12

+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |4|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |4| | |5|
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | |1| |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
5: Av(Perm((1, 2, 0)))

Label: 13

+-+-+-+-+-+
| |3| | |4|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| |1| |1| |
+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))

Label: 14

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0)))
2: point

Label: 15

+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2|1| |3| |3|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))

Label: 16

+-+
|1|
+-+
1: point

Label: 17

+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| |4| | | | | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2|3|
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | |1| |1| | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((1, 2, 0)))
3: point
4: Av(Perm((1, 0)))

Label: 18

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)))

Label: 19

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((1, 2, 0)))
3: Av(Perm((1, 0)))

Label: 20

+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |2|3|
+-+-+-+-+-+-+-+-+
| |4| | |3| | | |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| |1| |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
3: Av(Perm((1, 2, 0)))

Label: 21

+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2|1| |3| |3|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))

Label: 22

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))

Label: 23

+-+-+-+
|1| | |
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
4: Av(Perm((1, 2, 0)))

Label: 24

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |2|
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point

Label: 25

+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))
3: Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |4|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((1, 2, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2003, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2004, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2005, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=1, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 315, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=3) in its column. | The reverse of: Separating the topmost point from cell Cell(i=1, j=0). | Separating the bottommost point from cell Cell(i=1, j=0). | The reverse of: Isolating the point at Cell(i=1, j=1) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 97, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=2), Cell(i=2, j=5)]", "identifier": 2006, "in_tiling": {"[0, 1]": "point", "[1, 2]": "Av(Perm((1, 0)))", "[2, 4]": "point", "[3, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[3, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 0)))", "[1, 3]": "point", "[2, 5]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[3, 4]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[6, 4]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=1, j=3), Cell(i=1, j=0): Cell(i=3, j=0), Cell(i=1, j=3): Cell(i=3, j=4), Cell(i=2, j=1): Cell(i=4, j=1), Cell(i=3, j=0): Cell(i=5, j=0), Cell(i=4, j=3): Cell(i=6, j=4)}, {Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=5)}]", "relation": "| Separating the bottommost point from cell Cell(i=3, j=0). | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=1). | Separting the rightmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=3, j=0). | Separating the topmost point from cell Cell(i=3, j=0). | Isolating the point at Cell(i=2, j=5) in its column. | "}, {"children": [], "formal_step": "recurse", "identifier": 1545, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 3]": "Av(Perm((1, 2, 0)))", "[2, 5]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Separating the bottommost point from cell Cell(i=1, j=0). | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | Isolating the point at Cell(i=2, j=2) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=1). | Separting the rightmost point from cell Cell(i=0, j=1). | "}], "formal_step": "Isolated the point at Cell(i=1, j=3) in its column", "identifier": 2007, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[1, 3]": "Av(Perm((1, 2, 0)))", "[1, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))", "[1, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separating the topmost point from cell Cell(i=1, j=0). | "}], "formal_step": "insert topmost point into row 3", "identifier": 315, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[1, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=1, j=1) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | Separating the topmost point from cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=2)]", "identifier": 378, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=4) in its column. | The reverse of: Separating the topmost point from cell Cell(i=1, j=0). | Separating the bottommost point from cell Cell(i=1, j=0). | The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2008, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[3, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its row. | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 905, "in_tiling": {"[0, 2]": "Av(Perm((1, 0)))", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 0)))", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=0, j=4), Cell(i=2, j=0), Cell(i=5, j=1)]", "identifier": 2009, "in_tiling": {"[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[5, 6]": "point", "[6, 2]": "point", "[7, 2]": "Av(Perm((1, 2, 0)))", "[7, 5]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "Av(Perm((1, 0)))", "[1, 5]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[3, 7]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 2, 0)))", "[6, 6]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=1, j=5), Cell(i=1, j=4): Cell(i=3, j=7), Cell(i=2, j=0): Cell(i=4, j=2), Cell(i=3, j=1): Cell(i=6, j=3), Cell(i=3, j=3): Cell(i=6, j=6)}, {Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=1): Cell(i=5, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=3, j=6) in its column. | The reverse of: Separating the topmost point from cell Cell(i=2, j=0). | Separating the bottommost point from cell Cell(i=2, j=0). | Isolating the point at Cell(i=3, j=6) in its row. | Isolating the point at Cell(i=3, j=8) in its column. | The reverse of: Isolating the point at Cell(i=5, j=5) in its row. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=4). | The reverse of: Isolating the point at Cell(i=2, j=5) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | Separting the rightmost point from cell Cell(i=0, j=3). | Isolating the point at Cell(i=3, j=4) in its row. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1545, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 4]": "Av(Perm((1, 2, 0)))", "[2, 6]": "point", "[3, 2]": "Av(Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=2) in its row. | Isolating the point at Cell(i=2, j=2) in its column. | The reverse of: Separting the leftmost point from cell Cell(i=0, j=1). | Separting the rightmost point from cell Cell(i=0, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2010, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=6), Cell(i=5, j=7)]", "identifier": 2011, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 4]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[4, 4]": "Av(Perm((1, 2, 0)))", "[5, 6]": "point", "[6, 5]": "point", "[7, 2]": "Av(Perm((1, 2, 0)))", "[7, 5]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 4]": "Av(Perm((1, 2, 0)))", "[2, 8]": "point", "[3, 6]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[4, 5]": "Av(Perm((1, 2, 0)))", "[5, 7]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=1, j=4): Cell(i=1, j=4), Cell(i=2, j=6): Cell(i=2, j=8), Cell(i=3, j=2): Cell(i=4, j=2), Cell(i=3, j=5): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=3, j=6), Cell(i=1, j=1): Cell(i=5, j=7)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=6) in its column. | The reverse of: Separating the topmost point from cell Cell(i=1, j=0). | Separating the bottommost point from cell Cell(i=1, j=0). | Isolating the point at Cell(i=2, j=6) in its row. | "}], "formal_step": "insert leftmost point into col 6", "identifier": 1545, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 4]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[4, 4]": "Av(Perm((1, 2, 0)))", "[5, 6]": "point", "[6, 2]": "Av(Perm((1, 2, 0)))", "[6, 5]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Separting the rightmost point from cell Cell(i=0, j=1). | Separting the leftmost point from cell Cell(i=0, j=1). | The reverse of: Isolating the point at Cell(i=2, j=2) in its column. | Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | Separating the topmost point from cell Cell(i=1, j=0). | Isolating the point at Cell(i=2, j=6) in its column. | "}], "formal_step": "insert rightmost point into col 0", "identifier": 11, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 2005, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Separating the bottommost point from cell Cell(i=1, j=0). | Separating the topmost point from cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 2006, "in_tiling": {"[0, 1]": "Av+(Perm((1, 0)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "Av(Perm((1, 0)))", "[2, 4]": "point", "[3, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[3, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=1, j=2) in its column. | Separting the leftmost point from cell Cell(i=0, j=1). | Isolating the point at Cell(i=2, j=2) in its row. | The reverse of: Separating the bottommost point from cell Cell(i=3, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 0))).", "identifier": 367, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((0, 2, 3, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=2) in its column. | "}], "formal_step": "Isolated the point at Cell(i=0, j=0) in its column", "identifier": 2012, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[0, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[0, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "insert bottommost point into row 0", "identifier": 37, "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))", "[0, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | Separating the topmost point from cell Cell(i=0, j=0). | "}], "formal_step": "insert leftmost point into col 0", "identifier": 257, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}}
