0231_1203

===========================================
Log created Mon, 10 Jul 2017 11:40:30

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7214 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 783218 inferral cache hits and 4816294 partitioning cache hits.
The partitioning cache had 8 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 183083 tilings of which 8990 are verified.
There were 17742 SiblingNodes of which 607 are verified.

The function splittings called the partitioning cache *4819466* times, (12842 originating)
There were 0 cache misses

No proof tree was found after 7214 seconds

===========================================
Log created Mon, 10 Jul 2017 13:47:49

Maximum depth fully searched was 3

Maximum time set at 7200 seconds

Total time taken was 7637 seconds

The strategies applied were:
Batch: extreme_point_boundaries, all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 288106 inferral cache hits and 19590333 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 57763 tilings of which 5350 are verified.
There were 8852 SiblingNodes of which 616 are verified.

The function splittings called the partitioning cache *19590925* times, (3156 originating)
There were 0 cache misses

No proof tree was found after 7637 seconds

===========================================
Log created Mon, 10 Jul 2017 15:47:55

Maximum depth fully searched was 16

Maximum time set at 7200 seconds

Total time taken was 7203 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 6991 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 42449 tilings in it right now.
There were 43717 tilings of which 23719 are verified.
There were 12999 SiblingNodes of which 3000 are verified.

There were 0 cache misses

No proof tree was found after 7203 seconds

===========================================
Log created Mon, 10 Jul 2017 17:47:58

Maximum depth fully searched was 12

Maximum time set at 7200 seconds

Total time taken was 7202 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 46577 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 138149 tilings of which 37427 are verified.
There were 22591 SiblingNodes of which 2541 are verified.

There were 0 cache misses

No proof tree was found after 7202 seconds

===========================================
Log created Mon, 10 Jul 2017 19:48:01

Maximum depth fully searched was 13

Maximum time set at 7200 seconds

Total time taken was 7201 seconds

The strategies applied were:
Batch: all_cell_insertions, all_leftmost_column_placements
Equivalent: all_equivalent_leftmost_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 37108 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 79579 tilings of which 19669 are verified.
There were 14200 SiblingNodes of which 2095 are verified.

There were 0 cache misses

No proof tree was found after 7201 seconds

===========================================
Log created Mon, 10 Jul 2017 21:48:04

Maximum depth fully searched was 12

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 53742 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 160220 tilings of which 45286 are verified.
There were 26917 SiblingNodes of which 3333 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Mon, 10 Jul 2017 23:48:15

Maximum depth fully searched was 5

Maximum time set at 7200 seconds

Total time taken was 7209 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 6900 inferral cache hits and 21119 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 50822 tilings in it right now.
There were 55755 tilings of which 6001 are verified.
There were 17856 SiblingNodes of which 1903 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *22382* times, (11209 originating)
There were 2 cache misses

No proof tree was found after 7209 seconds

===========================================
Log created Tue, 11 Jul 2017 01:48:17

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 7200 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_and_column_insertions, all_point_isolations
Equivalent: all_point_placements, all_equivalent_point_isolations, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: 
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 1423358 inferral cache hits and 0 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 309914 tilings of which 18909 are verified.
There were 27909 SiblingNodes of which 711 are verified.

There were 0 cache misses

No proof tree was found after 7200 seconds

===========================================
Log created Tue, 11 Jul 2017 02:18:19

Maximum depth fully searched was 4

Maximum time set at 7200 seconds

Total time taken was 1799 seconds

The strategies applied were:
Batch: all_row_and_column_insertions, all_point_isolations
Equivalent: all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty
The 2 symmetries of the basis were used

There were 195730 inferral cache hits and 22243 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 100000 tilings in it right now.
There were 48280 tilings of which 1136 are verified.
There were 8066 SiblingNodes of which 348 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *23638* times, (11819 originating)
There were 0 cache misses

A proof tree was found in 1799 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            ├─────4
            │     ├─────5
            │     ├─────6
            │     │     ├─────7
            │     │     │     ├─────8
            │     │     │     └─────9
            │     │     └─────10
            │     │           ├─────11
            │     │           │     ├─────12
            │     │           │     ├─────13
            │     │           │     ├─────14
            │     │           │     │     ├─────15
            │     │           │     │     │     ├─────16
            │     │           │     │     │     │     ├─────17
            │     │           │     │     │     │     │     ├─────18
            │     │           │     │     │     │     │     └─────19
            │     │           │     │     │     │     │           ├─────20
            │     │           │     │     │     │     │           └─────21
            │     │           │     │     │     │     └─────22
            │     │           │     │     │     ├─────23
            │     │           │     │     │     │     ├─────24
            │     │           │     │     │     │     └─────25
            │     │           │     │     │     ├─────26
            │     │           │     │     │     │     ├─────27
            │     │           │     │     │     │     └─────28
            │     │           │     │     │     └─────29
            │     │           │     │     │           ├─────30
            │     │           │     │     │           └─────31
            │     │           │     │     └─────32
            │     │           │     └─────33
            │     │           │           ├─────34
            │     │           │           └─────35
            │     │           └─────36
            │     └─────37
            │           ├─────38
            │           │     ├─────39
            │           │     └─────40
            │           └─────41
            │                 ├─────42
            │                 └─────43
            │                       ├─────44
            │                       └─────45
            └─────46

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|2|
+-+
|1|
+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))

Label: 5

+-+-+
|1| |
+-+-+
| |1|
+-+-+
1: point

Label: 6

+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| |3| |3|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))

Label: 7

+-+-+-+-+
|2| |3| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))

Label: 10

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 11

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 12

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 13

+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
We use his sibling for the next strategy
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point

Label: 14

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 15

+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 16

+-+-+-+-+-+-+
|2| |3| |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 17

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 18

+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 19

+-+-+-+-+-+
|2| |1|3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 20

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 21

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 22

+-+
|1|
+-+
1: point

Label: 23

+-+-+-+-+-+-+
|4| |2| |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | |3| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|4| |2| |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | |3| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 24

+-+-+-+-+-+-+
|4| |2| |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | |3| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 25

+-+
|1|
+-+
1: point

Label: 26

+-+-+-+-+-+-+-+-+
|4| |2| | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|2| | |2| | |3| |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|2| |3| | |4|1|
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 27

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 28

+-+
|1|
+-+
1: point

Label: 29

+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | |2| |3| |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 30

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 31

+-+
|1|
+-+
1: point

Label: 32

+-+
|1|
+-+
1: point

Label: 33

+-+-+-+-+-+-+
|2| |3| |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 34

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 35

+-+
|1|
+-+
1: point

Label: 36

+-+
|1|
+-+
1: point

Label: 37

+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))

Label: 38

+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 39

+-+-+-+-+-+-+
|2| |3| |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 40

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 41

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|2| |3| |4| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 42

+-+
|1|
+-+
1: point

Label: 43

+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Label: 44

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))

Label: 45

+-+-+-+-+-+-+
|2| |3| |4|1|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| |2| | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|2| | |2| |3| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))

Label: 46

+-+-+-+
|2| |3|
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1172, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1174, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 325, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=0) in its column. | The reverse of: Isolating the point at Cell(i=0, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "The components of the tiling", "identifier": 1175, "in_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))", "[3, 0]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "point", "[2, 1]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))", "[3, 0]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=2, j=1), Cell(i=2, j=2): Cell(i=2, j=3)}]", "relation": "| Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1176, "in_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1177, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | ", "strategy_verified": true}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1178, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 275, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: a symmetry. | ", "strategy_verified": false}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 42, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": true}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=3, j=2), Cell(i=4, j=1)]", "identifier": 1179, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3)}, {Cell(i=0, j=1): Cell(i=3, j=2), Cell(i=1, j=0): Cell(i=4, j=1)}]", "relation": "| Isolating the point at Cell(i=2, j=2) in its row. | ", "strategy_verified": false}], "formal_step": "insert leftmost point into col 2", "identifier": 275, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1)]", "identifier": 1180, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 895, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=0, j=1) in its column. | The reverse of: Isolating the point at Cell(i=3, j=2) in its row. | Isolating the point at Cell(i=0, j=1) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=0)]", "identifier": 1181, "in_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "point", "[2, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=4): Cell(i=2, j=5), Cell(i=3, j=0): Cell(i=3, j=1), Cell(i=4, j=2): Cell(i=4, j=3), Cell(i=4, j=4): Cell(i=4, j=5), Cell(i=5, j=3): Cell(i=5, j=4)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": "| The reverse of: Isolating the point at Cell(i=5, j=3) in its row. | Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=0) in its column. | Isolating the point at Cell(i=5, j=3) in its row. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 930, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 2, 0)))", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | Isolating the point at Cell(i=3, j=2) in its row. | Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=4, j=1)]", "identifier": 1182, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 1]": "point", "[6, 3]": "Av(Perm((1, 2, 0)))", "[6, 5]": "Av(Perm((0, 1)))", "[7, 4]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 1]": "point", "[5, 3]": "Av(Perm((1, 2, 0)))", "[6, 3]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2), Cell(i=4, j=2): Cell(i=5, j=3), Cell(i=5, j=2): Cell(i=6, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=6, j=3) in its row. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 930, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 2, 0)))", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | Isolating the point at Cell(i=3, j=2) in its row. | Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1)]", "identifier": 1183, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 2]": "point", "[5, 3]": "Av(Perm((1, 2, 0)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2), Cell(i=4, j=2): Cell(i=4, j=3), Cell(i=5, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": "| The reverse of: Isolating the point at Cell(i=5, j=3) in its row. | Isolating the point at Cell(i=4, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 2", "identifier": 930, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 2, 0)))", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 2, 0)))", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=0)]", "identifier": 1184, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 3]": "Av(Perm((1, 2, 0)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 4]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=4): Cell(i=2, j=5), Cell(i=3, j=2): Cell(i=3, j=3), Cell(i=4, j=1): Cell(i=4, j=2), Cell(i=5, j=2): Cell(i=5, j=3), Cell(i=5, j=4): Cell(i=5, j=5), Cell(i=6, j=3): Cell(i=6, j=4)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": "| Isolating the point at Cell(i=4, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=0) in its column. | Isolating the point at Cell(i=5, j=3) in its row. | ", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 275, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=0)]", "identifier": 1185, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=0) in its column. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 2", "identifier": 895, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=1)]", "identifier": 1176, "in_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "point", "[2, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=0): Cell(i=3, j=0), Cell(i=4, j=2): Cell(i=4, j=3), Cell(i=5, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": "| Isolating the point at Cell(i=0, j=2) in its column. | The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "insert rightmost point into col 4", "identifier": 1186, "in_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=0) in its column. | ", "strategy_verified": false}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1185, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 1184, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert rightmost point into col 4", "identifier": 1187, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1173, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 275, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 930, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point", "[5, 2]": "Av(Perm((1, 2, 0)))", "[5, 4]": "Av(Perm((0, 1)))", "[6, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Isolating the point at Cell(i=2, j=1) in its column. | Isolating the point at Cell(i=3, j=2) in its row. | Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "insert rightmost point into col 4", "identifier": 67, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "The components of the tiling", "identifier": 1188, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))", "[3, 0]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 0]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=5, j=0)}, {Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2), Cell(i=4, j=2): Cell(i=4, j=3)}]", "relation": "| Isolating the point at Cell(i=2, j=2) in its column. | ", "strategy_verified": false}], "formal_step": "Isolated the point at Cell(i=2, j=0) in its column", "identifier": 1189, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 2]": "point", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}], "formal_step": "insert bottommost point into row 2", "identifier": 325, "in_tiling": {"[0, 1]": "point", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 1]": "point", "[2, 0]": "point", "[2, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=1) in its column. | The reverse of: Isolating the point at Cell(i=2, j=0) in its column. | ", "strategy_verified": false}, {"children": [], "formal_step": "recurse", "identifier": 67, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 1]": "point", "[2, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=2, j=1) in its column. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 1", "identifier": 3, "in_tiling": {"[0, 0]": "point", "[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Isolating the point at Cell(i=0, j=0) in its column. | ", "strategy_verified": false}], "formal_step": "insert bottommost point into row 0", "identifier": 95, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)))"}, "recurse": "[]", "relation": "", "strategy_verified": false}}
