0132_0231_0321_1320_3120
Log created  Tue, 02 May 2017 14:11:03
Finding the proof tree took 96 seconds
The depth searched was 8

Strategies applied: standard_strategies_w_all_cols
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           │     ├─────12
                        │     │           │     └─────13
                        │     │           └─────14
                        │     └─────15
                        └─────16
                              ├─────17
                              │     ├─────18
                              │     └─────19
                              │           ├─────20
                              │           │     ├─────21
                              │           │     ├─────22
                              │           │     └─────23
                              │           └─────24
                              │                 ├─────25
                              │                 └─────26
                              └─────27
                                    ├─────28
                                    │     ├─────29
                                    │     └─────30
                                    │           ├─────31
                                    │           │     ├─────32
                                    │           │     └─────33
                                    │           └─────34
                                    └─────35
                                          ├─────36
                                          ├─────37
                                          │     ├─────38
                                          │     │     ├─────39
                                          │     │     └─────40
                                          │     └─────41
                                          └─────42
                                                ├─────43
                                                └─────44

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 5

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
2: point

Label: 6

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 7

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 8

+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point

Label: 9

+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
|1| | |
+-+-+-+
1: point

Label: 10

+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point

Label: 11

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 12

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point

Label: 15

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 16

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 17

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 18

+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point

Label: 19

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((1, 0)))

Label: 20

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 21

+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point

Label: 22

+-+
|1|
+-+
1: point

Label: 23

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 24

+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 25

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 26

+-+
|1|
+-+
1: point

Label: 27

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 28

+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 29

+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 30

+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 31

+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 32

+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point

Label: 33

+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 34

+-+
|1|
+-+
1: point

Label: 35

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 36

+-+-+-+
|1| | |
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point

Label: 37

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 38

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 39

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((1, 0)))

Label: 40

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))

Label: 41

+-+
|1|
+-+
1: point

Label: 42

+-+-+-+-+
| | |4| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 43

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 44

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 102, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 103, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 104, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 105, "in_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 25, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3)]", "identifier": 49, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 5]": "point", "[3, 2]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 5]": "point", "[3, 2]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=3, j=3): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 106, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 12, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1))).", "identifier": 5, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 4, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=2)]", "identifier": 25, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 4]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 107, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 4, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4), Cell(i=3, j=2)]", "identifier": 108, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 5]": "point", "[3, 2]": "Av(Perm((1, 0)))", "[4, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 5]": "point", "[3, 2]": "Av(Perm((1, 0)))", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=3): Cell(i=2, j=5), Cell(i=2, j=2): Cell(i=4, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=4)}, {Cell(i=0, j=0): Cell(i=3, j=2)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 73, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=2)]", "identifier": 109, "in_tiling": {"[0, 2]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=1, j=3), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=3): Cell(i=2, j=4), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=2)}]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 110, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 73, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 111, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "Av(Perm((1, 0)))", "[5, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 107, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 112, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 101, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=3)]", "identifier": 113, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 112, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 114, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 110, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 3]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 115, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 70, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=3)]", "identifier": 116, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 71, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3)]", "identifier": 117, "in_tiling": {"[0, 3]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 2]": "Av+(Perm((0, 1)))", "[2, 5]": "Av(Perm((1, 0)))", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[2, 2]": "Av+(Perm((0, 1)))", "[2, 5]": "Av(Perm((1, 0)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=1, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 115, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av+(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 4); either it is empty or Av+(Perm((1, 0))).", "identifier": 71, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 100, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 0", "identifier": 61, "in_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 118, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0))).", "identifier": 119, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0))).", "identifier": 120, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}}
