0231_1203_1320
Log created  Wed, 17 May 2017 01:30:52
Finding the proof tree took 1154 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     │     ├─────10
                        │     │     │     │     ├─────11
                        │     │     │     │     └─────12
                        │     │     │     └─────13
                        │     │     │           ├─────14
                        │     │     │           │     ├─────15
                        │     │     │           │     └─────16
                        │     │     │           │           ├─────17
                        │     │     │           │           ├─────18
                        │     │     │           │           ├─────19
                        │     │     │           │           ├─────20
                        │     │     │           │           └─────21
                        │     │     │           └─────22
                        │     │     └─────23
                        │     └─────24
                        └─────25

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point

Label: 5

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 6

+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((1, 0)))

Label: 7

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| | |2|
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | |5| | | |
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| |4| | | | |1|
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |4| | | |1|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |3| |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |1| |2|
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point

Label: 9

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|4| | | |1|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 10

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point

Label: 11

+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point

Label: 12

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av+(Perm((1, 2, 0)))
2: Av(Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 13

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|4| | | |1|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | |5| | | | |1|
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| |4| | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | |3| | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av(Perm((1, 0)))

Label: 14

+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| |4| | | |1| |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 15

+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |4| | | |1|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 16

+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |3| | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |3| | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 17

+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point

Label: 18

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 19

+-+
|1|
+-+
1: point

Label: 20

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 21

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 22

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |5| | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((0, 1)))

Label: 23

+-+
|1|
+-+
1: point

Label: 24

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |5| | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av+(Perm((1, 0)))

Label: 25

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| |2| |
+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: Av+(Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |3| | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 2, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3459, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3460, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3461, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 4]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3462, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3463, "in_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)))", "[1, 4]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 6]": "point", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 5]": "point", "[6, 4]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | The reverse of: Inserting the left most point in to the cell Cell(i=4, j=3). | Inserting the top most point in to the cell Cell(i=4, j=3). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 3464, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 4]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[3, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 4]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[3, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 3465, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 5]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 5]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3466, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)))", "[4, 3]": "Av(Perm((1, 2, 0)))", "[5, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 2, 0)))", "[4, 4]": "Av(Perm((1, 2, 0)))", "[5, 5]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | Inserting the left most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=0), Cell(i=3, j=8), Cell(i=5, j=1), Cell(i=9, j=6)]", "identifier": 3467, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 6]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 2, 0)))", "[7, 5]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 8]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 2, 0)))", "[7, 5]": "Av(Perm((1, 2, 0)))", "[8, 7]": "point", "[9, 6]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=1, j=3), Cell(i=2, j=0): Cell(i=4, j=2), Cell(i=3, j=1): Cell(i=6, j=3), Cell(i=4, j=3): Cell(i=7, j=5), Cell(i=5, j=4): Cell(i=8, j=7)}, {Cell(i=0, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=8)}, {Cell(i=0, j=0): Cell(i=5, j=1)}, {Cell(i=0, j=0): Cell(i=9, j=6)}]", "relation": "| Inserting the top most point in to the cell Cell(i=7, j=5). | "}], "formal_step": "We perform cell insertion into cell (6, 5); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 3468, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 6]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))", "[6, 5]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 6]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))", "[6, 5]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 3469, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 6]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "point", "[3, 4]": "point", "[4, 5]": "point", "[5, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=5). | The reverse of: Inserting the left most point in to the cell Cell(i=5, j=0). | Inserting the bottom most point in to the cell Cell(i=5, j=0). | The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=4). | Inserting the top most point in to the cell Cell(i=2, j=4). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=2). | The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=0). | Inserting the right most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (2, 5); either it is empty or Av+(Perm((1, 0))).", "identifier": 3470, "in_tiling": {"[0, 3]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 4]": "point", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av(Perm((1, 0)))", "[3, 0]": "Av(Perm((1, 2, 0)))", "[4, 6]": "point", "[5, 2]": "point", "[6, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[6, 3]": "Av(Perm((1, 2, 0)))", "[7, 5]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=3). | "}], "formal_step": "We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 2288, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 4]": "point", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[4, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=2, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 3465, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 5]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=1, j=1): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=1)}]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=3, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 3469, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 6]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((1, 0)))", "[3, 6]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 5); either it is empty or Av+(Perm((1, 0))).", "identifier": 3471, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[3, 3]": "point", "[4, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((1, 0)))", "[4, 6]": "point", "[5, 2]": "point", "[6, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[6, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=4, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 3467, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 0]": "Av+(Perm((1, 2, 0)))", "[4, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 0]": "Av(Perm((1, 2, 0)))", "[3, 6]": "point", "[4, 2]": "point", "[5, 1]": "Av(Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 2, 0)))", "[7, 5]": "Av+(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=3, j=0). | "}], "formal_step": "We perform cell insertion into cell (5, 3); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 3472, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (4, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0))).", "identifier": 2675, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 4]": "point", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[5, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=2). | "}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 22, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0))).", "identifier": 3473, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": ""}}
