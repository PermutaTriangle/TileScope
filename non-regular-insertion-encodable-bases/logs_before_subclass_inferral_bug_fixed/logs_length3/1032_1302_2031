1032_1302_2031
Log created  Fri, 05 May 2017 16:18:30
Finding the proof tree took 41 seconds
The depth searched was 4

Strategies applied: standard_strategies_w_all_rows_cols
Maximum depth set at 4

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     ├─────7
                  │     └─────8
                  └─────9
                        ├─────10
                        │     ├─────11
                        │     │     ├─────12
                        │     │     ├─────13
                        │     │     └─────14
                        │     └─────15
                        ├─────16
                        └─────17

Label: 0

+-+
|1|
+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
We use his sibling for the next strategy
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
2: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
2: point
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 5

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 6

+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
2: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 7

+-+
|1|
+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| |3| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 10

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
3: Av(Perm((1, 0)))

Label: 11

+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 12

+-+
|1|
+-+
1: point

Label: 13

+-+
|1|
+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 14

+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
2: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 15

+-+-+-+-+-+
|2| | | |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| |3| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))
3: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 16

+-+
|1|
+-+
1: Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))

Label: 17

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 101, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 102, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 12, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 16, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4), Cell(i=1, j=0)]", "identifier": 103, "in_tiling": {"[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[2, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[2, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=2, j=1), Cell(i=0, j=2): Cell(i=2, j=3), Cell(i=1, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=0, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 16, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 12, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "The components of the tiling", "identifier": 104, "in_tiling": {"[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 105, "in_tiling": {"[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[4, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=4, j=4). | The reverse of: Inserting the right most point in to the cell Cell(i=1, j=1). | "}], "formal_step": "We perform cell insertion into cell (4, 4); either it is empty or Av+(Perm((1, 0))).", "identifier": 85, "in_tiling": {"[0, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[4, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=1). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 16, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3), Cell(i=4, j=2)]", "identifier": 105, "in_tiling": {"[0, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 1); either it is empty or Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1))).", "identifier": 106, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[3, 3]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1))).", "identifier": 12, "in_tiling": {"[0, 0]": "Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[0, 2]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1))).", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}}
