0213_1320_2130
Log created  Tue, 16 May 2017 18:56:54
Finding the proof tree took 1410 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           ├─────11
                  │           ├─────12
                  │           └─────13
                  └─────14
                        ├─────15
                        └─────16
                              ├─────17
                              ├─────18
                              ├─────19
                              ├─────20
                              ├─────21
                              ├─────22
                              └─────23

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
2: point

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|4| | | | |5|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))
5: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))

Label: 5

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| | |2| |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
3: point
4: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))

Label: 6

+-+-+-+-+
| | |3| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | |2|
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
3: point

Label: 7

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))
3: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | |4| | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 10

+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| | | |2|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 11

+-+
|1|
+-+
1: point

Label: 12

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 13

+-+
|1|
+-+
1: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))

Label: 14

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| | | |4|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| |5| | | | | |4|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
5: Av(Perm((1, 0)))

Label: 15

+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |5| | | | | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
5: Av(Perm((1, 0)))

Label: 16

+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| |4| | | | | |5|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((1, 0)))
5: Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+
| | |4| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |3| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |4| |
+-+-+-+-+-+-+-+-+-+-+
| |4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |4| | |
+-+-+-+-+-+-+-+-+-+-+
| | | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))
4: Av(Perm((1, 0)))

Label: 17

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 18

+-+
|1|
+-+
1: point

Label: 19

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 20

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 21

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((1, 0, 2)))

Label: 22

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))

Label: 23

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 4207, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 4208, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 21, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1)]", "identifier": 4209, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=1): Cell(i=2, j=2), Cell(i=2, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 4210, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[2, 1]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=0). | Inserting the right most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 8, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 49, "in_tiling": {"[0, 0]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=6), Cell(i=4, j=5), Cell(i=6, j=4)]", "identifier": 4211, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[4, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "point", "[2, 6]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[4, 5]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[5, 3]": "point", "[6, 4]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=3, j=3): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=6)}, {Cell(i=0, j=0): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=6, j=4)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=3). | "}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0))).", "identifier": 4212, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))", "[4, 2]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))", "[4, 2]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 4213, "in_tiling": {"[0, 4]": "point", "[1, 5]": "Av(Perm((1, 0)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[4, 1]": "point", "[5, 6]": "point", "[6, 3]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 5]": "Av(Perm((1, 0)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[4, 1]": "point", "[5, 6]": "point", "[6, 3]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 373, "in_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 1]": "Av(Perm((1, 0)))", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=2, j=1). | Inserting the bottom most point in to the cell Cell(i=2, j=1). | "}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 17, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 17, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 8, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 54, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 17, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4), Cell(i=1, j=5), Cell(i=2, j=9), Cell(i=3, j=2), Cell(i=4, j=0), Cell(i=7, j=3)]", "identifier": 4214, "in_tiling": {"[0, 4]": "point", "[1, 5]": "Av(Perm((1, 0)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[4, 1]": "point", "[5, 6]": "point", "[6, 3]": "Av(Perm((1, 0)))", "[7, 5]": "Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 5]": "Av(Perm((1, 0)))", "[2, 9]": "Av(Perm((1, 0)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[5, 1]": "point", "[6, 10]": "point", "[7, 3]": "Av(Perm((1, 0)))", "[8, 6]": "Av(Perm((1, 0)))", "[8, 8]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[9, 7]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=5, j=1), Cell(i=1, j=4): Cell(i=6, j=10), Cell(i=2, j=1): Cell(i=8, j=6), Cell(i=2, j=3): Cell(i=8, j=8), Cell(i=3, j=2): Cell(i=9, j=7)}, {Cell(i=0, j=0): Cell(i=0, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=5)}, {Cell(i=0, j=0): Cell(i=2, j=9)}, {Cell(i=0, j=0): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=4, j=0)}, {Cell(i=0, j=0): Cell(i=7, j=3)}]", "relation": "| Inserting the right most point in to the cell Cell(i=7, j=5). | "}], "formal_step": "We perform cell insertion into cell (7, 5); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0))).", "identifier": 2226, "in_tiling": {"[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 2]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 5]": "Av(Perm((1, 0)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[4, 1]": "point", "[5, 6]": "point", "[6, 3]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))", "[7, 5]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2))).", "identifier": 4215, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((2, 1, 3, 0)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))", "[5, 2]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=2). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=0). | Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 3, 2, 0))).", "identifier": 21, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0))).", "identifier": 4216, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((1, 3, 2, 0)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}}
