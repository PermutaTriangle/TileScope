0321_2301
Log created  Tue, 02 May 2017 18:47:52
Finding the proof tree took 499 seconds
The depth searched was 8

Strategies applied: standard_strategies_w_all_cols
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           │     ├─────12
                        │     │           │     └─────13
                        │     │           └─────14
                        │     └─────15
                        │           ├─────16
                        │           │     ├─────17
                        │           │     │     ├─────18
                        │           │     │     └─────19
                        │           │     └─────20
                        │           └─────21
                        │                 ├─────22
                        │                 │     ├─────23
                        │                 │     ├─────24
                        │                 │     └─────25
                        │                 ├─────26
                        │                 │     ├─────27
                        │                 │     │     ├─────28
                        │                 │     │     │     ├─────29
                        │                 │     │     │     └─────30
                        │                 │     │     │           ├─────31
                        │                 │     │     │           │     ├─────32
                        │                 │     │     │           │     └─────33
                        │                 │     │     │           └─────34
                        │                 │     │     └─────35
                        │                 │     ├─────36
                        │                 │     └─────37
                        │                 └─────38
                        │                       ├─────39
                        │                       ├─────40
                        │                       ├─────41
                        │                       └─────42
                        └─────43
                              ├─────44
                              │     ├─────45
                              │     └─────46
                              └─────47

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 5

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point

Label: 6

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 7

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 8

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
3: Av+(Perm((0, 1)))

Label: 9

+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 10

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
3: Av+(Perm((0, 1)))

Label: 11

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
3: Av+(Perm((0, 1)))

Label: 12

+-+
|1|
+-+
1: point

Label: 13

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 14

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))

Label: 15

+-+-+-+
|4| | |
+-+-+-+
| | |2|
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 1)))

Label: 16

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 17

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 18

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 19

+-+
|1|
+-+
1: point

Label: 20

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 21

+-+-+-+
|4| | |
+-+-+-+
| | |2|
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 1)))

Label: 22

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 23

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 24

+-+
|1|
+-+
1: Av+(Perm((0, 1)))

Label: 25

+-+
|1|
+-+
1: point

Label: 26

+-+-+-+-+-+-+
|5| | | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))
5: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))

Label: 27

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))

Label: 28

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 29

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point

Label: 30

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 31

+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 32

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 33

+-+
|1|
+-+
1: point

Label: 34

+-+
|1|
+-+
1: point

Label: 35

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 36

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 37

+-+
|1|
+-+
1: point

Label: 38

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))

Label: 39

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 40

+-+
|1|
+-+
1: point

Label: 41

+-+
|1|
+-+
1: point

Label: 42

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 43

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))

Label: 44

+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 45

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 46

+-+
|1|
+-+
1: point

Label: 47

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 342, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 343, "in_tiling": {"[0, 1]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 344, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 345, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=2). | "}, {"children": [{"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 51, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 346, "in_tiling": {"[0, 1]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 5]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 5]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 4]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=3): Cell(i=3, j=4)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 347, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 0", "identifier": 348, "in_tiling": {"[0, 1]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 218, "in_tiling": {"[0, 1]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 51, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=3)]", "identifier": 349, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 5]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 5]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 4]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=3): Cell(i=3, j=4)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 350, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 3]": "point", "[3, 1]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 3]": "point", "[3, 1]": "point", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 0", "identifier": 351, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 3]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 51, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 25, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=6), Cell(i=4, j=5)]", "identifier": 352, "in_tiling": {"[0, 6]": "Av+(Perm((0, 1)))", "[1, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 6]": "Av+(Perm((0, 1)))", "[1, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point", "[4, 5]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=0, j=4): Cell(i=1, j=4), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=3): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=6)}, {Cell(i=0, j=0): Cell(i=4, j=5)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 353, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 19, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 21, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4)]", "identifier": 56, "in_tiling": {"[0, 4]": "point", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=1, j=3): Cell(i=2, j=3), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=4)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 23, "in_tiling": {"[0, 4]": "point", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=4)]", "identifier": 70, "in_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=3): Cell(i=3, j=3), Cell(i=3, j=1): Cell(i=4, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=7), Cell(i=6, j=5)]", "identifier": 354, "in_tiling": {"[0, 6]": "Av+(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 1]": "point", "[5, 5]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 1)))", "[1, 6]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 3]": "point", "[5, 1]": "point", "[6, 5]": "point"}, "recurse": "[{Cell(i=0, j=5): Cell(i=1, j=6), Cell(i=1, j=4): Cell(i=2, j=4), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=3, j=3): Cell(i=4, j=3), Cell(i=4, j=1): Cell(i=5, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=7)}, {Cell(i=0, j=0): Cell(i=6, j=5)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=6). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 19, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 355, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0), Cell(i=0, j=2): Cell(i=1, j=2), Cell(i=1, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=4, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=4)}, {Cell(i=0, j=0): Cell(i=0, j=5)}]", "relation": ""}], "formal_step": "Placing the rightmost point into column 0", "identifier": 356, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 207, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 51, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 4, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "point", "[2, 1]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 70, "in_tiling": {"[0, 4]": "Av+(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 3]": "point", "[4, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=4). | "}], "formal_step": "We perform cell insertion into cell (0, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 24, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 0", "identifier": 19, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 0, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 357, "in_tiling": {"[0, 0]": "Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[0, 2]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 358, "in_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}}
