0213_0231_1203_1230_3120

===========================================
Log created Sun, 28 May 2017 14:21:50

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 5739 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 8856 inferral cache hits and 25646 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 35179 tilings in it right now.
There were 19574 tilings of which 1935 are verified.
There were 8476 SiblingNodes of which 425 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *27252* times, (13626 originating)
There were 0 cache misses

No proof tree was found after 5739 seconds

===========================================
Log created Sun, 28 May 2017 14:51:59

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1809 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 9015 inferral cache hits and 3139319 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 34338 tilings in it right now.
There were 20285 tilings of which 2720 are verified.
There were 9365 SiblingNodes of which 1146 are verified.

The function splittings called the partitioning cache *3140912* times, (7003 originating)
There were 0 cache misses

No proof tree was found after 1809 seconds

===========================================
Log created Sun, 28 May 2017 15:22:02

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1802 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 15941 inferral cache hits and 33398 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 41708 tilings in it right now.
There were 26060 tilings of which 2476 are verified.
There were 6818 SiblingNodes of which 348 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *35480* times, (17740 originating)
There were 0 cache misses

No proof tree was found after 1802 seconds

===========================================
Log created Sun, 28 May 2017 15:54:17

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1934 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 16913 inferral cache hits and 2581595 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 42844 tilings in it right now.
There were 26952 tilings of which 3374 are verified.
There were 7468 SiblingNodes of which 984 are verified.

The function splittings called the partitioning cache *2583648* times, (8486 originating)
There were 0 cache misses

No proof tree was found after 1934 seconds

===========================================
Log created Sun, 28 May 2017 16:24:18

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 192741 inferral cache hits and 35224 partitioning cache hits.
The partitioning cache had 28 tilings in it right now.
The inferral cache has 55888 tilings in it right now.
There were 27914 tilings of which 3069 are verified.
There were 6782 SiblingNodes of which 532 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *37468* times, (18734 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sun, 28 May 2017 16:54:19

Maximum depth fully searched was 4

Maximum time set at 1800 seconds

Total time taken was 1800 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 229605 inferral cache hits and 2280505 partitioning cache hits.
The partitioning cache had 13 tilings in it right now.
The inferral cache has 64400 tilings in it right now.
There were 32955 tilings of which 3736 are verified.
There were 8068 SiblingNodes of which 837 are verified.

The function splittings called the partitioning cache *2282956* times, (10137 originating)
There were 0 cache misses

No proof tree was found after 1800 seconds

===========================================
Log created Sun, 28 May 2017 17:24:45

Maximum depth fully searched was 10

Maximum time set at 1800 seconds

Total time taken was 1825 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 1011 inferral cache hits and 9784 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 4116 tilings in it right now.
There were 3637 tilings of which 1243 are verified.
There were 2397 SiblingNodes of which 393 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *10290* times, (5145 originating)
There were 0 cache misses

No proof tree was found after 1825 seconds

===========================================
Log created Sun, 28 May 2017 18:25:59

Maximum depth fully searched was 9

Maximum time set at 1800 seconds

Total time taken was 3673 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 1083 inferral cache hits and 1286290 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 3815 tilings in it right now.
There were 3887 tilings of which 1471 are verified.
There were 2635 SiblingNodes of which 691 are verified.

The function splittings called the partitioning cache *1286780* times, (2940 originating)
There were 0 cache misses

No proof tree was found after 3673 seconds

===========================================
Log created Sun, 28 May 2017 18:56:40

Maximum depth fully searched was 5

Maximum time set at 1800 seconds

Total time taken was 1841 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 757 inferral cache hits and 4055 partitioning cache hits.
The partitioning cache had 10 tilings in it right now.
The inferral cache has 1340 tilings in it right now.
There were 1015 tilings of which 230 are verified.
There were 191 SiblingNodes of which 52 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *4314* times, (2157 originating)
There were 0 cache misses

No proof tree was found after 1841 seconds

===========================================
Log created Sun, 28 May 2017 19:28:09

Maximum depth fully searched was 6

Maximum time set at 1800 seconds

Total time taken was 1881 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 4529 inferral cache hits and 129234 partitioning cache hits.
The partitioning cache had 29 tilings in it right now.
The inferral cache has 5412 tilings in it right now.
There were 4198 tilings of which 567 are verified.
There were 720 SiblingNodes of which 149 are verified.

The function splittings called the partitioning cache *130314* times, (3940 originating)
There were 0 cache misses

No proof tree was found after 1881 seconds

===========================================
Log created Mon, 29 May 2017 01:44:18

Maximum depth fully searched was 10

Maximum time set at 1800 seconds

Total time taken was 22567 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 430 inferral cache hits and 5110 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 1301 tilings in it right now.
There were 1946 tilings of which 256 are verified.
There were 1606 SiblingNodes of which 103 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *5366* times, (2683 originating)
There were 0 cache misses

No proof tree was found after 22567 seconds

===========================================
Log created Mon, 29 May 2017 03:26:26

Maximum depth fully searched was 10

Maximum time set at 1800 seconds

Total time taken was 6127 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 394 inferral cache hits and 3145569 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 1244 tilings in it right now.
There were 2316 tilings of which 674 are verified.
There were 1987 SiblingNodes of which 528 are verified.

The function splittings called the partitioning cache *3145811* times, (1569 originating)
There were 0 cache misses

No proof tree was found after 6127 seconds

===========================================
Log created Mon, 29 May 2017 03:56:49

Maximum depth fully searched was 5

Maximum time set at 1800 seconds

Total time taken was 1822 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 612 inferral cache hits and 3274 partitioning cache hits.
The partitioning cache had 9 tilings in it right now.
The inferral cache has 1048 tilings in it right now.
There were 799 tilings of which 141 are verified.
There were 182 SiblingNodes of which 35 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *3476* times, (1738 originating)
There were 0 cache misses

No proof tree was found after 1822 seconds

===========================================
Log created Mon, 29 May 2017 04:27:27

Maximum depth fully searched was 6

Maximum time set at 1800 seconds

Total time taken was 1836 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 2120 inferral cache hits and 74936 partitioning cache hits.
The partitioning cache had 15 tilings in it right now.
The inferral cache has 2690 tilings in it right now.
There were 2168 tilings of which 302 are verified.
There were 509 SiblingNodes of which 97 are verified.

The function splittings called the partitioning cache *75486* times, (2158 originating)
There were 0 cache misses

No proof tree was found after 1836 seconds

===========================================
Log created Mon, 29 May 2017 04:54:39

Maximum depth fully searched was 10

Maximum time set at 1800 seconds

Total time taken was 1630 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 813 inferral cache hits and 8070 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 3686 tilings in it right now.
There were 3200 tilings of which 1106 are verified.
There were 2102 SiblingNodes of which 368 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *8494* times, (4247 originating)
There were 0 cache misses

A proof tree was found in 1630 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           │     ├─────12
                        │     │           │     └─────13
                        │     │           └─────14
                        │     │                 ├─────15
                        │     │                 └─────16
                        │     │                       ├─────17
                        │     │                       └─────18
                        │     └─────19
                        │           ├─────20
                        │           │     ├─────21
                        │           │     └─────22
                        │           └─────23
                        │                 ├─────24
                        │                 ├─────25
                        │                 │     ├─────26
                        │                 │     │     ├─────27
                        │                 │     │     │     ├─────28
                        │                 │     │     │     │     ├─────29
                        │                 │     │     │     │     │     ├─────30
                        │                 │     │     │     │     │     └─────31
                        │                 │     │     │     │     │           ├─────32
                        │                 │     │     │     │     │           │     ├─────33
                        │                 │     │     │     │     │           │     │     ├─────34
                        │                 │     │     │     │     │           │     │     │     ├─────35
                        │                 │     │     │     │     │           │     │     │     │     ├─────36
                        │                 │     │     │     │     │           │     │     │     │     └─────37
                        │                 │     │     │     │     │           │     │     │     │           ├─────38
                        │                 │     │     │     │     │           │     │     │     │           │     ├─────39
                        │                 │     │     │     │     │           │     │     │     │           │     └─────40
                        │                 │     │     │     │     │           │     │     │     │           └─────41
                        │                 │     │     │     │     │           │     │     │     └─────42
                        │                 │     │     │     │     │           │     │     └─────43
                        │                 │     │     │     │     │           │     │           ├─────44
                        │                 │     │     │     │     │           │     │           │     ├─────45
                        │                 │     │     │     │     │           │     │           │     └─────46
                        │                 │     │     │     │     │           │     │           └─────47
                        │                 │     │     │     │     │           │     │                 ├─────48
                        │                 │     │     │     │     │           │     │                 ├─────49
                        │                 │     │     │     │     │           │     │                 │     ├─────50
                        │                 │     │     │     │     │           │     │                 │     └─────51
                        │                 │     │     │     │     │           │     │                 └─────52
                        │                 │     │     │     │     │           │     └─────53
                        │                 │     │     │     │     │           │           ├─────54
                        │                 │     │     │     │     │           │           │     ├─────55
                        │                 │     │     │     │     │           │           │     └─────56
                        │                 │     │     │     │     │           │           └─────57
                        │                 │     │     │     │     │           └─────58
                        │                 │     │     │     │     │                 ├─────59
                        │                 │     │     │     │     │                 ├─────60
                        │                 │     │     │     │     │                 │     ├─────61
                        │                 │     │     │     │     │                 │     └─────62
                        │                 │     │     │     │     │                 └─────63
                        │                 │     │     │     │     │                       ├─────64
                        │                 │     │     │     │     │                       │     ├─────65
                        │                 │     │     │     │     │                       │     └─────66
                        │                 │     │     │     │     │                       └─────67
                        │                 │     │     │     │     └─────68
                        │                 │     │     │     └─────69
                        │                 │     │     │           ├─────70
                        │                 │     │     │           │     ├─────71
                        │                 │     │     │           │     └─────72
                        │                 │     │     │           │           ├─────73
                        │                 │     │     │           │           └─────74
                        │                 │     │     │           │                 ├─────75
                        │                 │     │     │           │                 └─────76
                        │                 │     │     │           └─────77
                        │                 │     │     ├─────78
                        │                 │     │     └─────79
                        │                 │     └─────80
                        │                 │           ├─────81
                        │                 │           │     ├─────82
                        │                 │           │     └─────83
                        │                 │           └─────84
                        │                 │                 ├─────85
                        │                 │                 ├─────86
                        │                 │                 │     ├─────87
                        │                 │                 │     │     ├─────88
                        │                 │                 │     │     │     ├─────89
                        │                 │                 │     │     │     │     ├─────90
                        │                 │                 │     │     │     │     └─────91
                        │                 │                 │     │     │     ├─────92
                        │                 │                 │     │     │     └─────93
                        │                 │                 │     │     └─────94
                        │                 │                 │     └─────95
                        │                 │                 ├─────96
                        │                 │                 │     ├─────97
                        │                 │                 │     └─────98
                        │                 │                 └─────99
                        │                 └─────100
                        │                       ├─────101
                        │                       └─────102
                        │                             ├─────103
                        │                             │     ├─────104
                        │                             │     └─────105
                        │                             └─────106
                        │                                   ├─────107
                        │                                   ├─────108
                        │                                   ├─────109
                        │                                   │     ├─────110
                        │                                   │     └─────111
                        │                                   └─────112
                        │                                         ├─────113
                        │                                         │     ├─────114
                        │                                         │     └─────115
                        │                                         └─────116
                        └─────117
                              ├─────118
                              └─────119
                                    ├─────120
                                    │     ├─────121
                                    │     │     ├─────122
                                    │     │     └─────123
                                    │     └─────124
                                    └─────125
                                          ├─────126
                                          └─────127

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point

Label: 6

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 7

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
4: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 8

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 9

+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))

Label: 10

+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 11

+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 12

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 15

+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))

Label: 16

+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 17

+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 18

+-+
|1|
+-+
1: point

Label: 19

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
4: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 20

+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 21

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 22

+-+
|1|
+-+
1: point

Label: 23

+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 24

+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point

Label: 25

+-+-+-+-+
| | |5| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1)))
5: Av+(Perm((0, 1)))

Label: 26

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 27

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 28

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 29

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 30

+-+-+-+
| |3| |
+-+-+-+
| | |1|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av+(Perm((0, 1)))

Label: 31

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 32

+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 33

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 34

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 35

+-+-+-+
| |3| |
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 36

+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 37

+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av+(Perm((0, 1)))

Label: 38

+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 39

+-+-+-+
| |3| |
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 40

+-+
|1|
+-+
1: point

Label: 41

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 42

+-+
|1|
+-+
1: point

Label: 43

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 44

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 45

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 46

+-+
|1|
+-+
1: point

Label: 47

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 48

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point

Label: 49

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 50

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 51

+-+
|1|
+-+
1: point

Label: 52

+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 53

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 54

+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 55

+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))

Label: 56

+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 57

+-+
|1|
+-+
1: point

Label: 58

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 59

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point

Label: 60

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 61

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 62

+-+
|1|
+-+
1: point

Label: 63

+-+-+-+-+
| |4| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 64

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 65

+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 66

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 67

+-+
|1|
+-+
1: point

Label: 68

+-+
|1|
+-+
1: point

Label: 69

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 70

+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 71

+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))

Label: 72

+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 73

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 74

+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 75

+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 76

+-+
|1|
+-+
1: point

Label: 77

+-+
|1|
+-+
1: point

Label: 78

+-+
|1|
+-+
1: point

Label: 79

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 80

+-+-+-+-+
| | |5| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))
5: Av+(Perm((0, 1)))

Label: 81

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 82

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 83

+-+
|1|
+-+
1: point

Label: 84

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 85

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point

Label: 86

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 87

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 88

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av+(Perm((0, 1)))

Label: 89

+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 90

+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1)))

Label: 91

+-+
|1|
+-+
1: point

Label: 92

+-+
|1|
+-+
1: point

Label: 93

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 94

+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 95

+-+
|1|
+-+
1: point

Label: 96

+-+-+-+-+-+
| | |5| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))
5: Av+(Perm((0, 1)))

Label: 97

+-+-+-+-+
| | |5| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))
5: Av+(Perm((0, 1)))

Label: 98

+-+
|1|
+-+
1: point

Label: 99

+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point

Label: 100

+-+-+-+-+
| | |5| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 1)))

Label: 101

+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |4| | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 102

+-+-+-+-+
| | |5| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
5: Av+(Perm((0, 1)))

Label: 103

+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 104

+-+-+-+
| |4| |
+-+-+-+
| | |2|
+-+-+-+
| |3| |
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 105

+-+
|1|
+-+
1: point

Label: 106

+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 107

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point

Label: 108

+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point

Label: 109

+-+-+-+-+-+
| | |5| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
5: Av+(Perm((0, 1)))

Label: 110

+-+-+-+-+
| | |5| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |4| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))
5: Av+(Perm((0, 1)))

Label: 111

+-+
|1|
+-+
1: point

Label: 112

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 113

+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((0, 1)))

Label: 114

+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |4| | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 115

+-+-+-+-+
| | |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
4: Av+(Perm((0, 1)))

Label: 116

+-+
|1|
+-+
1: point

Label: 117

+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 118

+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point

Label: 119

+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 120

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
4: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 121

+-+-+-+-+
| |1| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 122

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 123

+-+
|1|
+-+
1: point

Label: 124

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))

Label: 125

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 126

+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))
2: point
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 127

+-+
|1|
+-+
1: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1247, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1248, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1249, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1250, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=2, j=2). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 49, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=1)]", "identifier": 1251, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=3, j=2), Cell(i=2, j=3): Cell(i=3, j=4)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1252, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 3]": "point", "[3, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 0]": "point", "[2, 5]": "point", "[3, 1]": "Av(Perm((1, 0)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=3, j=1). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 136, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=4)]", "identifier": 1253, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=2, j=3): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=4)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 1254, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 4]": "point", "[3, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 2", "identifier": 136, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 49, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 38, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1)]", "identifier": 669, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1255, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point", "[2, 4]": "point", "[3, 0]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point", "[2, 4]": "point", "[3, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1256, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1257, "in_tiling": {"[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=2). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 121, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=0)]", "identifier": 1258, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1259, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 0]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 0]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=1). | "}], "formal_step": "Placing the rightmost point into column 1", "identifier": 1260, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av+(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 121, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=3)]", "identifier": 1261, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 58, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=3)]", "identifier": 1262, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=1): Cell(i=2, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1263, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[2, 5]": "point", "[3, 1]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[2, 5]": "point", "[3, 1]": "point", "[4, 4]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 518, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=3)]", "identifier": 1264, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 5]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=5): Cell(i=2, j=6), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=3, j=4): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1265, "in_tiling": {"[0, 3]": "point", "[1, 6]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 2]": "Av+(Perm((0, 1)))", "[4, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 1]": "point", "[6, 4]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 7]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 1]": "point", "[7, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=2). | "}], "formal_step": "Placing the leftmost point into column 1", "identifier": 1266, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 518, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 282, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 4]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1267, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 57, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 29, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=2)]", "identifier": 259, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=2): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=2)}]", "relation": ""}], "formal_step": "Placing the rightmost point into column 1", "identifier": 57, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1268, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 130, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=3)]", "identifier": 1269, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 3]": "point", "[3, 4]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 3]": "point", "[3, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=3): Cell(i=3, j=4)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1270, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[3, 3]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 0)))", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1271, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 128, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=3)]", "identifier": 1272, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=2): Cell(i=1, j=2), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=3): Cell(i=2, j=4)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}], "formal_step": "Placing the rightmost point into column 1", "identifier": 1271, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 130, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 74, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4)]", "identifier": 1273, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=3): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=4)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1274, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 0)))", "[4, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=1, j=0). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1275, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av+(Perm((0, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av(Perm((1, 0)))", "[3, 4]": "Av+(Perm((0, 1)))", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 124, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4)]", "identifier": 1276, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=1, j=3), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=4)}]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 1277, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 124, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=2)]", "identifier": 1278, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=1, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=3), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=0, j=2)}]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 58, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 22, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1), Cell(i=3, j=3)]", "identifier": 1279, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=3): Cell(i=2, j=5), Cell(i=2, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1271, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=4)]", "identifier": 1280, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=3): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=4)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1281, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 2]": "point", "[2, 4]": "point", "[2, 6]": "point", "[3, 0]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 2]": "point", "[2, 4]": "point", "[2, 6]": "point", "[3, 0]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 58, "in_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=2)]", "identifier": 1282, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=1): Cell(i=3, j=1)}, {Cell(i=0, j=0): Cell(i=2, j=2)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 22, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1), Cell(i=3, j=4)]", "identifier": 1283, "in_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point", "[5, 2]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=4): Cell(i=2, j=6), Cell(i=2, j=2): Cell(i=4, j=3), Cell(i=3, j=1): Cell(i=5, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=4)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=3). | "}, {"children": [], "formal_step": "recurse", "identifier": 1284, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1238, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av+(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av+(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=3)]", "identifier": 1285, "in_tiling": {"[0, 6]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[2, 7]": "Av+(Perm((0, 1)))", "[3, 3]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 6]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[2, 7]": "Av+(Perm((0, 1)))", "[3, 3]": "point", "[4, 4]": "point"}, "recurse": "[{Cell(i=0, j=5): Cell(i=0, j=6), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=2, j=4): Cell(i=2, j=5), Cell(i=2, j=6): Cell(i=2, j=7), Cell(i=3, j=3): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1239, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=3)]", "identifier": 1286, "in_tiling": {"[0, 6]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 5]": "Av(Perm((0, 1)))", "[2, 7]": "Av+(Perm((0, 1)))", "[3, 4]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 6]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 5]": "Av(Perm((0, 1)))", "[2, 7]": "Av+(Perm((0, 1)))", "[3, 4]": "point", "[4, 3]": "point"}, "recurse": "[{Cell(i=0, j=5): Cell(i=0, j=6), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=2, j=4): Cell(i=2, j=5), Cell(i=2, j=6): Cell(i=2, j=7), Cell(i=3, j=3): Cell(i=3, j=4)}, {Cell(i=0, j=0): Cell(i=4, j=3)}]", "relation": ""}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1287, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "point", "[2, 2]": "point", "[2, 4]": "point", "[3, 6]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "point", "[2, 2]": "point", "[2, 4]": "point", "[3, 6]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 2", "identifier": 1284, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 1239, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 1288, "in_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1289, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 4]": "Av(Perm((1, 0)))", "[5, 5]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((1, 0)))", "[5, 4]": "Av+(Perm((1, 0)))", "[6, 6]": "Av(Perm((1, 0)))", "[7, 7]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=2, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1271, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 2]": "Av+(Perm((1, 0)))", "[1, 4]": "Av+(Perm((0, 1)))", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3)]", "identifier": 1290, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 4]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 5]": "Av+(Perm((0, 1)))", "[3, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=1, j=4): Cell(i=2, j=5), Cell(i=2, j=3): Cell(i=3, j=4)}, {Cell(i=0, j=0): Cell(i=0, j=3)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1291, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point", "[2, 4]": "point", "[2, 6]": "point", "[3, 0]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 2]": "point", "[2, 4]": "point", "[2, 6]": "point", "[3, 0]": "point", "[4, 5]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "This tiling contains no avoiding perms", "identifier": 1292, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "point", "[2, 4]": "point", "[2, 6]": "point", "[3, 2]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "point", "[2, 4]": "point", "[2, 6]": "point", "[3, 2]": "point", "[4, 5]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1246, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=6)]", "identifier": 1293, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 7]": "Av+(Perm((0, 1)))", "[3, 5]": "point", "[4, 6]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 7]": "Av+(Perm((0, 1)))", "[3, 5]": "point", "[4, 6]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=2, j=4): Cell(i=2, j=4), Cell(i=2, j=6): Cell(i=2, j=7), Cell(i=3, j=5): Cell(i=3, j=5)}, {Cell(i=0, j=0): Cell(i=4, j=6)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1294, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 4]": "Av+(Perm((1, 0)))", "[5, 5]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((1, 0)))", "[5, 4]": "Av+(Perm((1, 0)))", "[6, 6]": "Av+(Perm((1, 0)))", "[7, 7]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=2, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 1295, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 6); either it is empty or Av+(Perm((0, 1))).", "identifier": 1241, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=6)]", "identifier": 1296, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 7]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 7]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 5]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=2, j=4): Cell(i=2, j=4), Cell(i=2, j=6): Cell(i=2, j=7), Cell(i=3, j=5): Cell(i=4, j=5)}, {Cell(i=0, j=0): Cell(i=3, j=6)}]", "relation": ""}], "formal_step": "Placing the rightmost point into column 2", "identifier": 1295, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((1, 0))).", "identifier": 1246, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 6]": "Av+(Perm((0, 1)))", "[3, 5]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 6); either it is empty or Av+(Perm((0, 1))).", "identifier": 1297, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 2", "identifier": 668, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 415, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3))).", "identifier": 118, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1298, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 49, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=4)]", "identifier": 43, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[3, 3]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=2, j=1): Cell(i=3, j=1), Cell(i=2, j=3): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=1, j=4)}]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 44, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=0)]", "identifier": 142, "in_tiling": {"[0, 3]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[4, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[4, 4]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=0): Cell(i=2, j=1), Cell(i=3, j=1): Cell(i=4, j=2), Cell(i=3, j=3): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 50, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=3)]", "identifier": 1299, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[3, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[3, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=3): Cell(i=1, j=4), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=3)}]", "relation": ""}], "formal_step": "Placing the leftmost point into column 2", "identifier": 208, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 50, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[2, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 38, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 1300, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 2, 1, 3))).", "identifier": 1301, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 2, 1, 3)))", "[1, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((3, 1, 2, 0))).", "identifier": 1302, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((1, 2, 3, 0)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}}
