0231_2031_2130

===========================================
Log created Sat, 20 May 2017 20:50:15

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 173 inferral cache hits and 1209 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 1814 tilings in it right now.
There were 968 tilings of which 97 are verified.
There were 426 SiblingNodes of which 41 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1296* times, (648 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:50:45

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 197 inferral cache hits and 20556 partitioning cache hits.
The partitioning cache had 2 tilings in it right now.
The inferral cache has 1741 tilings in it right now.
There were 969 tilings of which 96 are verified.
There were 459 SiblingNodes of which 48 are verified.

The function splittings called the partitioning cache *20642* times, (285 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:51:15

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 272 inferral cache hits and 1232 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 1624 tilings in it right now.
There were 1065 tilings of which 75 are verified.
There were 295 SiblingNodes of which 31 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1324* times, (662 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:51:46

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements, all_column_placements
Equivalent: all_equivalent_row_placements, all_equivalent_column_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 359 inferral cache hits and 14359 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 1907 tilings in it right now.
There were 1285 tilings of which 129 are verified.
There were 365 SiblingNodes of which 33 are verified.

The function splittings called the partitioning cache *14475* times, (339 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:52:16

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 5798 inferral cache hits and 1219 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 1767 tilings in it right now.
There were 1110 tilings of which 77 are verified.
There were 303 SiblingNodes of which 31 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1310* times, (655 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:52:47

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_point_isolations
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 7694 inferral cache hits and 9038 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 2757 tilings in it right now.
There were 1542 tilings of which 127 are verified.
There were 431 SiblingNodes of which 53 are verified.

The function splittings called the partitioning cache *9178* times, (370 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:53:18

Maximum depth fully searched was 7

Maximum time set at 30 seconds

Total time taken was 31 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 37 inferral cache hits and 683 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 259 tilings in it right now.
There were 191 tilings of which 74 are verified.
There were 127 SiblingNodes of which 26 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *728* times, (364 originating)
There were 0 cache misses

No proof tree was found after 31 seconds

===========================================
Log created Sat, 20 May 2017 20:53:59

Maximum depth fully searched was 7

Maximum time set at 30 seconds

Total time taken was 40 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 74 inferral cache hits and 48329 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 489 tilings in it right now.
There were 533 tilings of which 195 are verified.
There were 417 SiblingNodes of which 121 are verified.

The function splittings called the partitioning cache *48396* times, (265 originating)
There were 0 cache misses

No proof tree was found after 40 seconds

===========================================
Log created Sat, 20 May 2017 20:54:29

Maximum depth fully searched was 4

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 204 inferral cache hits and 1159 partitioning cache hits.
The partitioning cache had 4 tilings in it right now.
The inferral cache has 323 tilings in it right now.
There were 291 tilings of which 46 are verified.
There were 65 SiblingNodes of which 16 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1242* times, (621 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:55:00

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_row_placements
Equivalent: all_equivalent_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 391 inferral cache hits and 4018 partitioning cache hits.
The partitioning cache had 13 tilings in it right now.
The inferral cache has 784 tilings in it right now.
There were 655 tilings of which 175 are verified.
There were 145 SiblingNodes of which 43 are verified.

The function splittings called the partitioning cache *4190* times, (449 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:55:32

Maximum depth fully searched was 8

Maximum time set at 30 seconds

Total time taken was 31 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 7 inferral cache hits and 357 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 89 tilings in it right now.
There were 64 tilings of which 22 are verified.
There were 54 SiblingNodes of which 13 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *380* times, (190 originating)
There were 0 cache misses

No proof tree was found after 31 seconds

===========================================
Log created Sat, 20 May 2017 20:56:06

Maximum depth fully searched was 9

Maximum time set at 30 seconds

Total time taken was 34 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 24 inferral cache hits and 5332 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 183 tilings in it right now.
There were 155 tilings of which 52 are verified.
There were 127 SiblingNodes of which 25 are verified.

The function splittings called the partitioning cache *5379* times, (222 originating)
There were 0 cache misses

No proof tree was found after 34 seconds

===========================================
Log created Sat, 20 May 2017 20:56:38

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 32 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 147 inferral cache hits and 990 partitioning cache hits.
The partitioning cache had 3 tilings in it right now.
The inferral cache has 266 tilings in it right now.
There were 242 tilings of which 35 are verified.
There were 55 SiblingNodes of which 15 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *1060* times, (530 originating)
There were 0 cache misses

No proof tree was found after 32 seconds

===========================================
Log created Sat, 20 May 2017 20:57:09

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 30 seconds

The strategies applied were:
Batch: all_cell_insertions, all_minimum_row_placements
Equivalent: all_equivalent_minimum_row_placements, point_separation
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: splittings
Verification: subset_verified, is_empty

There were 355 inferral cache hits and 3882 partitioning cache hits.
The partitioning cache had 0 tilings in it right now.
The inferral cache has 557 tilings in it right now.
There were 457 tilings of which 82 are verified.
There were 87 SiblingNodes of which 23 are verified.

The function splittings called the partitioning cache *4024* times, (359 originating)
There were 0 cache misses

No proof tree was found after 30 seconds

===========================================
Log created Sat, 20 May 2017 20:57:16

Maximum depth fully searched was 5

Maximum time set at 30 seconds

Total time taken was 7 seconds

The strategies applied were:
Batch: all_cell_insertions, all_column_placements
Equivalent: all_equivalent_column_placements
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Recursive: components, reversibly_deletable_cells
Verification: subset_verified, is_empty

There were 14 inferral cache hits and 367 partitioning cache hits.
The partitioning cache had 1 tilings in it right now.
The inferral cache has 172 tilings in it right now.
There were 152 tilings of which 62 are verified.
There were 106 SiblingNodes of which 34 are verified.

The function cells_of_occurrences_by_perms called the partitioning cache *394* times, (206 originating)
There were 1 cache misses

A proof tree was found in 7 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     ├─────9
                        │     ├─────10
                        │     ├─────11
                        │     └─────12
                        └─────13
                              ├─────14
                              │     ├─────15
                              │     └─────16
                              └─────17
                                    ├─────18
                                    ├─────19
                                    └─────20

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point

Label: 6

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 2, 0)))

Label: 7

+-+-+-+-+
| | | |4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
4: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 8

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))

Label: 9

+-+
|1|
+-+
1: point

Label: 10

+-+
|1|
+-+
1: point

Label: 11

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 12

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Label: 13

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 14

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 15

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 16

+-+
|1|
+-+
1: point

Label: 17

+-+-+-+-+
| | | |4|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 2, 0)))
4: Av(Perm((1, 2, 0)))

Label: 18

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))
2: point
3: Av+(Perm((1, 2, 0)))

Label: 19

+-+
|1|
+-+
1: point

Label: 20

+-+
|1|
+-+
1: Av(Perm((1, 2, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 44, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 45, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 46, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 4, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3), Cell(i=3, j=5), Cell(i=4, j=4), Cell(i=5, j=6)]", "identifier": 47, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 4]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[3, 5]": "point", "[4, 4]": "Av(Perm((1, 2, 0)))", "[5, 6]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=5)}, {Cell(i=0, j=0): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=5, j=6)}]", "relation": "| Inserting the left most point in to the cell Cell(i=3, j=4). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 40, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=1)]", "identifier": 48, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 3]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=2), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=3)}, {Cell(i=0, j=0): Cell(i=0, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 41, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 49, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av+(Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av+(Perm((1, 2, 0)))", "[3, 4]": "Av(Perm((1, 2, 0)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=4)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 50, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[2, 2]": "Av(Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 41, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av+(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 40, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0))).", "identifier": 4, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))", "[1, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0))).", "identifier": 51, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)))"}, "recurse": "[]", "relation": ""}}
