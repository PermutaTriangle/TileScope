0213_0231_0312_1302_3021_3120
Log created  Fri, 14 Apr 2017 08:12:03
Finding the proof tree for 0213_0231_0312_1302_3021_3120 took 34 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  └─────8
                        ├─────9
                        └─────10

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))
2: point
3: Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))
2: point

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))
2: point
3: Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | |5| | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| |1| | |2| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))

Label: 5

+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))

Label: 6

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
3: Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))

Label: 7

+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |2| |3| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))

Label: 8

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((0, 1)))

Label: 9

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))
2: point
3: Av(Perm((0, 1)))

Label: 10

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
| | |5| | | | | | |
+-+-+-+-+-+-+-+-+-+
|4| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | |3| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 65, "in_tiling": {}, "out_tiling": {}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 66, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "recurse": false, "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 67, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[2, 2]": "point", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[1, 0]": "point"}, "recurse": false, "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 68, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 0)))", "[4, 2]": "point"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=0). | The reverse of: Inserting the right most point in to the cell Cell(i=0, j=3). | "}], "formal_step": "We perform cell insertion into cell (3, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 69, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[2, 3]": "point", "[3, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 70, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 71, "in_tiling": {"[0, 2]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "point", "[2, 6]": "Av(Perm((1, 0)))", "[3, 2]": "Av(Perm((0, 1)))", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 1]": "point", "[6, 8]": "Av(Perm((0, 1)))", "[7, 7]": "point", "[8, 3]": "point"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=2). | Inserting the right most point in to the cell Cell(i=3, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 72, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "recurse": false, "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((3, 1, 2, 0))).", "identifier": 73, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[2, 4]": "Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 1]": "point"}, "recurse": false, "relation": "| Inserting the right most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1))).", "identifier": 74, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((3, 1, 2, 0)))", "[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)))", "[1, 1]": "point"}, "recurse": false, "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0))).", "identifier": 75, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))"}, "recurse": false, "relation": ""}}
