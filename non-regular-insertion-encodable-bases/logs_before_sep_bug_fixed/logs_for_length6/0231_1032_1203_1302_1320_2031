0231_1032_1203_1302_1320_2031
Log created  Fri, 14 Apr 2017 11:37:30
Finding the proof tree for 0231_1032_1203_1302_1320_2031 took 5 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
2: point
3: Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|4| | | | |5|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))
5: Av(Perm((1, 0)))

Label: 5

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))

Label: 6

+-+-+-+-+-+
|3| | | |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|5| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| |3| | | |4| |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 3, "in_tiling": {}, "out_tiling": {}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 4, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))"}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 5, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 6, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "point", "[2, 0]": "point", "[3, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))", "[4, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))", "[5, 3]": "Av(Perm((1, 0)))", "[6, 4]": "point"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=4, j=3). | "}], "formal_step": "We perform cell insertion into cell (5, 4); either it is empty or Av+(Perm((1, 0))).", "identifier": 7, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))", "[1, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0, 3)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))", "[5, 4]": "Av(Perm((1, 0)))"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=1). | Inserting the right most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1))).", "identifier": 8, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))", "[1, 2]": "Av(Perm((1, 2, 0)), Perm((1, 0, 3, 2)))"}, "recurse": false, "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1))).", "identifier": 9, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 0, 3, 2)), Perm((1, 2, 0, 3)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": false, "relation": ""}}
