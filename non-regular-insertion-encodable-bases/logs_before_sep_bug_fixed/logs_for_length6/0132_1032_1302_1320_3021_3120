0132_1032_1302_1320_3021_3120
Log created  Fri, 14 Apr 2017 07:15:57
Finding the proof tree for 0132_1032_1302_1320_3021_3120 took 43 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        └─────8

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))
2: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |5| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))

Label: 5

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((1, 0)))

Label: 6

+-+-+-+-+-+
| | | |5| |
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
| | | |4| | | |
+-+-+-+-+-+-+-+
| |5| | | | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |4| |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((1, 0)))
5: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 7

+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| |5| | | | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |3|
+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)), Perm((1, 0)))
2: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
3: point
4: Av(Perm((1, 0)))
5: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 8

+-+-+-+-+-+-+-+
| | | | |4| | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av+(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 106, "in_tiling": {}, "out_tiling": {}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 107, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "point"}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 108, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 2]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 109, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 6]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 5]": "point", "[3, 7]": "Av(Perm((1, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 0)))", "[7, 4]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 6]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 5]": "point", "[3, 7]": "Av(Perm((1, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[6, 3]": "Av(Perm((1, 0)))", "[7, 4]": "point"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 110, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 6]": "Av+(Perm((1, 0)))", "[5, 1]": "Av(Perm((1, 0)))", "[6, 2]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 6]": "Av+(Perm((1, 0)))", "[5, 1]": "Av(Perm((1, 0)))", "[6, 2]": "point"}, "recurse": false, "relation": ""}], "formal_step": "We perform cell insertion into cell (5, 8); either it is empty or Av+(Perm((1, 0))).", "identifier": 111, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 3]": "point", "[3, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((1, 0)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 6]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 5]": "point", "[3, 7]": "Av(Perm((1, 0)))", "[4, 2]": "point", "[5, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[5, 3]": "Av(Perm((1, 0)))", "[5, 8]": "Av(Perm((1, 0)))", "[6, 4]": "point"}, "recurse": false, "relation": "| Inserting the left most point in to the cell Cell(i=3, j=1). | "}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 31, "in_tiling": {"[0, 0]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))", "[1, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((1, 0)))", "[4, 2]": "point"}, "recurse": false, "relation": "| Inserting the right most point in to the cell Cell(i=2, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=2). | Inserting the bottom most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0))).", "identifier": 112, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0))).", "identifier": 113, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 0, 3, 2)), Perm((1, 3, 0, 2)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)), Perm((3, 1, 2, 0)))"}, "recurse": false, "relation": ""}}
