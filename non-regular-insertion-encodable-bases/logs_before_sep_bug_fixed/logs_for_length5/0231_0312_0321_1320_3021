0231_0312_0321_1320_3021
Log created  Sat, 15 Apr 2017 15:47:46
Finding the proof tree for 0231_0312_0321_1320_3021 took 144 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     ├─────7
                  │     └─────8
                  └─────9
                        ├─────10
                        │     ├─────11
                        │     └─────12
                        └─────13

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|1| |2| |2| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 5

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 6

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))

Label: 7

+-+
|1|
+-+
1: point

Label: 8

+-+
|1|
+-+
1: Av(Perm((0, 1)), Perm((1, 0)))

Label: 9

+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | | | | |4|
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | |1| |2| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: Av+(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1)), Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | | |4|
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | |3| |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | |1| | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 10

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | |3|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | |1| | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
|1| |3| | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 11

+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
|1| |3| | | | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 12

+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
|1| |4| | | | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: Av+(Perm((0, 2, 1)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 13

+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av+(Perm((0, 2, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 214, "in_tiling": {}, "out_tiling": {}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 215, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": false, "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 151, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))"}, "recurse": true, "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 19, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": false, "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=3), Cell(i=4, j=2)]", "identifier": 216, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": false, "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 217, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 3]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 2, 1)))", "[5, 0]": "Av(Perm((0, 2, 1)))", "[6, 1]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 1)))", "[1, 3]": "Av(Perm((0, 2, 1)))", "[2, 4]": "point", "[3, 6]": "point", "[4, 2]": "Av(Perm((0, 2, 1)))", "[5, 0]": "Av(Perm((0, 2, 1)))", "[6, 1]": "point"}, "recurse": false, "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=4, j=0). | Inserting the top most point in to the cell Cell(i=4, j=0). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=3). | Inserting the right most point in to the cell Cell(i=0, j=3). | The reverse of: Inserting the top most point in to the cell Cell(i=4, j=0). | Inserting the right most point in to the cell Cell(i=4, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 218, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 3]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 1]": "Av+(Perm((0, 2, 1)))", "[4, 5]": "point", "[5, 0]": "Av(Perm((0, 2, 1)))", "[6, 2]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 2, 1)))", "[1, 5]": "Av(Perm((0, 2, 1)))", "[2, 6]": "point", "[3, 3]": "Av(Perm((0, 2, 1)))", "[4, 1]": "Av(Perm((0, 2, 1)))", "[5, 2]": "point", "[6, 8]": "point", "[7, 0]": "Av(Perm((0, 2, 1)))", "[8, 4]": "point"}, "recurse": false, "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=3). | Inserting the right most point in to the cell Cell(i=0, j=3). | Inserting the right most point in to the cell Cell(i=3, j=1). | "}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 219, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 5]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 2, 1)))", "[5, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 1)))", "[1, 4]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 1]": "Av(Perm((0, 2, 1)))", "[4, 6]": "point", "[5, 3]": "Av(Perm((0, 2, 1)))", "[6, 0]": "Av(Perm((0, 2, 1)))", "[7, 2]": "point"}, "recurse": false, "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=3, j=0). | Inserting the right most point in to the cell Cell(i=3, j=0). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=4). | Inserting the bottom most point in to the cell Cell(i=0, j=4). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 220, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 2, 1)))", "[1, 5]": "Av(Perm((1, 0)))", "[2, 7]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[4, 2]": "Av(Perm((1, 0)))", "[5, 6]": "point"}, "out_tiling": {"[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[5, 4]": "point"}, "recurse": false, "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=3, j=0). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=1). | Inserting the top most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "We perform cell insertion into cell (6, 5); either it is empty or Av+(Perm((0, 1)), Perm((1, 0))).", "identifier": 16, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 4]": "point", "[4, 0]": "Av+(Perm((0, 2, 1)))", "[5, 3]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 6]": "point", "[4, 1]": "point", "[5, 0]": "Av(Perm((0, 2, 1)))", "[5, 2]": "Av(Perm((1, 0)))", "[6, 5]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=2). | Inserting the left most point in to the cell Cell(i=0, j=2). | The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=0). | Inserting the left most point in to the cell Cell(i=3, j=0). | "}], "formal_step": "We perform cell insertion into cell (4, 0); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 221, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "Av(Perm((0, 2, 1)))", "[5, 2]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1))).", "identifier": 151, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1))).", "identifier": 222, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 2, 0)), Perm((3, 0, 2, 1)))"}, "recurse": false, "relation": ""}}
