0213_0231_2031_2130_3120
Log created  Sat, 15 Apr 2017 14:15:32
Finding the proof tree for 0213_0231_2031_2130_3120 took 176 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     └─────9
                        └─────10

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
3: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| |4| |5|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))
3: Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 1)))
5: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 5

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))
3: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
4: Av(Perm((0, 1)))

Label: 6

+-+-+-+-+-+
|3| |4| |5|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))
3: Av+(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 1)))
5: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
|2| |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |4| |
+-+-+-+-+-+-+-+-+-+
|2| | |3| |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 7

+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
|2| |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
|2| | |3| |2| | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | |5| | | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |3| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |4|
+-+-+-+-+-+-+-+-+-+
|2| | | |3| |2| | |
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
5: Av(Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 8

+-+-+-+-+-+-+-+-+
| |5| | | | | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | | |2| |3| | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
5: Av(Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 9

+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | | | |5|
+-+-+-+-+-+-+-+-+
|2| | |3| |4| | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
5: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+-+
| | |2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | |5|
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | |4| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| |3| | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1)), Perm((1, 0)))
5: Av(Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 10

+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | |2| |3| | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 306, "in_tiling": {}, "out_tiling": {}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 307, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[1, 0]": "point"}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 308, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 309, "in_tiling": {"[0, 5]": "point", "[1, 6]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "point", "[7, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 5]": "point", "[1, 6]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "point", "[7, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 310, "in_tiling": {"[0, 1]": "Av+(Perm((1, 0)))", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "point", "[7, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 3]": "Av(Perm((1, 0)))", "[10, 6]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[2, 9]": "Av(Perm((0, 1)))", "[3, 8]": "point", "[4, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 1]": "Av(Perm((1, 0)))", "[8, 5]": "Av(Perm((1, 0)))", "[9, 7]": "point"}, "recurse": false, "relation": "| Inserting the left most point in to the cell Cell(i=0, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=7). | Inserting the bottom most point in to the cell Cell(i=1, j=7). | "}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((1, 0))).", "identifier": 311, "in_tiling": {"[0, 1]": "Av(Perm((1, 0)))", "[0, 4]": "Av(Perm((1, 0)))", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "point", "[7, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0)))", "[1, 5]": "point", "[2, 6]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 1]": "Av(Perm((1, 0)))", "[7, 3]": "point", "[8, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=4). | Inserting the left most point in to the cell Cell(i=0, j=4). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 312, "in_tiling": {"[0, 4]": "Av(Perm((1, 0)))", "[1, 5]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 2]": "point", "[7, 6]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 4]": "Av(Perm((1, 0)))", "[1, 5]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 2]": "point", "[7, 6]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": ""}], "formal_step": "We perform cell insertion into cell (8, 6); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 313, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))", "[0, 3]": "Av+(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0)))", "[0, 4]": "Av(Perm((1, 0)))", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "point", "[7, 2]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))", "[8, 6]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=0, j=3). | The reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=1). | Inserting the top most point in to the cell Cell(i=4, j=1). | "}], "formal_step": "We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1))).", "identifier": 11, "in_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 0, 1)))", "[0, 3]": "Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=1). | "}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 314, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((1, 0, 2)), Perm((2, 0, 1)), Perm((0, 2, 3, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((3, 1, 2, 0))).", "identifier": 315, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((2, 0, 3, 1)), Perm((2, 1, 3, 0)), Perm((3, 1, 2, 0)))"}, "recurse": false, "relation": ""}}
