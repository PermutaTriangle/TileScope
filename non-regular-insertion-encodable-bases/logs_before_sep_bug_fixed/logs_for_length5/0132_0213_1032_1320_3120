0132_0213_1032_1320_3120
Log created  Sat, 15 Apr 2017 00:19:09
Finding the proof tree for 0132_0213_1032_1320_3120 took 103 seconds

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     └─────11
                        └─────12

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((3, 1, 2, 0)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((3, 1, 2, 0)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| |4| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((1, 0)))

Label: 5

+-+-+-+-+-+
| | |4| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((1, 0)))

Label: 6

+-+-+-+-+-+
|3| |4| |5|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
4: Av(Perm((1, 0)))
5: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | |4| | | | | | |
+-+-+-+-+-+-+-+-+-+
|5| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | | | | | |4| | |
+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |3| |4| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 7

+-+-+-+-+-+-+-+-+
| |4| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | |4| | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |3| |4| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | |4| | |
+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |3| |4| | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | |4| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
|5| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |3| |4| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 9

+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | |2| |3| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))

Label: 10

+-+-+-+-+-+-+-+-+
| | | | | | |6| |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
|5| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((0, 1)))
5: Av(Perm((0, 2, 1)), Perm((2, 0, 1)))
6: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |3| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1)), Perm((1, 0)))

Label: 11

+-+-+-+-+-+-+-+
| |4| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | |2| |3| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| |3| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| |3| | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))

Label: 12

+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
|4| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| |3| | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 35, "in_tiling": {}, "out_tiling": {}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 36, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((3, 1, 2, 0)))"}, "recurse": false, "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 37, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 38, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 4]": "point", "[6, 5]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 4]": "point", "[6, 5]": "Av(Perm((1, 0)))"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 39, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 5]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 6]": "point", "[6, 7]": "Av(Perm((1, 0)))", "[7, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 6]": "point", "[1, 5]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((1, 0)))", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[4, 8]": "point", "[5, 9]": "Av(Perm((1, 0)))", "[6, 3]": "Av(Perm((0, 1)))", "[7, 1]": "point", "[8, 2]": "Av(Perm((1, 0)))"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=7, j=1). | The reverse of: Inserting the left most point in to the cell Cell(i=4, j=7). | Inserting the top most point in to the cell Cell(i=4, j=7). | The reverse of: Inserting the bottom most point in to the cell Cell(i=7, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=2). | Inserting the left most point in to the cell Cell(i=0, j=2). | Inserting the bottom most point in to the cell Cell(i=6, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=3, j=7). | Inserting the left most point in to the cell Cell(i=3, j=7). | "}], "formal_step": "We perform cell insertion into cell (7, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 40, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((1, 0)))", "[2, 0]": "point", "[3, 2]": "Av(Perm((1, 0)))", "[4, 5]": "Av(Perm((1, 0)))", "[5, 6]": "point", "[6, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 4]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 0)))", "[5, 5]": "point", "[6, 6]": "Av(Perm((1, 0)))", "[7, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=0, j=2). | Inserting the top most point in to the cell Cell(i=0, j=2). | The reverse of: Inserting the top most point in to the cell Cell(i=4, j=4). | Inserting the left most point in to the cell Cell(i=4, j=4). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 41, "in_tiling": {"[0, 2]": "point", "[1, 5]": "Av+(Perm((1, 0)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((1, 0)))", "[5, 3]": "Av(Perm((1, 0)))", "[6, 4]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "Av(Perm((1, 0)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "Av(Perm((1, 0)))", "[7, 4]": "point"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=1, j=5). | "}], "formal_step": "We perform cell insertion into cell (1, 7); either it is empty or Av+(Perm((1, 0))).", "identifier": 42, "in_tiling": {"[0, 3]": "point", "[1, 7]": "Av(Perm((1, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 0)))", "[5, 5]": "Av(Perm((1, 0)))", "[6, 6]": "point", "[7, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 7]": "Av(Perm((1, 0)))", "[2, 2]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 2]": "Av(Perm((1, 0)))", "[5, 5]": "Av(Perm((1, 0)))", "[6, 6]": "point", "[7, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 43, "in_tiling": {"[0, 5]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 6]": "Av(Perm((1, 0)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "Av(Perm((1, 0)))", "[7, 4]": "point"}, "out_tiling": {"[0, 5]": "Av+(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 6]": "Av(Perm((1, 0)))", "[3, 1]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 1]": "Av(Perm((1, 0)))", "[6, 3]": "Av(Perm((1, 0)))", "[7, 4]": "point"}, "recurse": false, "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 7); either it is empty or Av+(Perm((0, 2, 1)), Perm((2, 0, 1))).", "identifier": 44, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))", "[4, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 3]": "point", "[2, 8]": "Av(Perm((1, 0)))", "[3, 2]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((1, 0)))", "[4, 0]": "point", "[5, 2]": "Av(Perm((1, 0)))", "[6, 5]": "Av(Perm((1, 0)))", "[7, 6]": "point", "[8, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": false, "relation": "| Inserting the top most point in to the cell Cell(i=4, j=3). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=2). | Inserting the left most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (4, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 45, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)), Perm((2, 0, 1)))", "[1, 2]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 0]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))", "[4, 3]": "Av(Perm((1, 0)))"}, "recurse": false, "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=1). | Inserting the bottom most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2))).", "identifier": 46, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((3, 1, 2, 0)))"}, "recurse": false, "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0))).", "identifier": 47, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)), Perm((3, 1, 2, 0)))"}, "recurse": false, "relation": ""}}
