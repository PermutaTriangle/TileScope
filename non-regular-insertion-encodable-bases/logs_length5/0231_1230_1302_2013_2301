0231_1230_1302_2013_2301
Log created  Tue, 02 May 2017 02:01:08
Finding the proof tree took 14 seconds
The depth searched was 8

Strategies applied: standard_strategies_w_min_row
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     └─────9
                        │           ├─────10
                        │           │     ├─────11
                        │           │     └─────12
                        │           └─────13
                        │                 ├─────14
                        │                 │     ├─────15
                        │                 │     │     ├─────16
                        │                 │     │     └─────17
                        │                 │     └─────18
                        │                 ├─────19
                        │                 └─────20
                        └─────21
                              ├─────22
                              └─────23
                                    ├─────24
                                    └─────25
                                          ├─────26
                                          │     ├─────27
                                          │     │     ├─────28
                                          │     │     └─────29
                                          │     └─────30
                                          └─────31
                                                ├─────32
                                                └─────33

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))

Label: 6

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 7

+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 8

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 9

+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av(Perm((0, 1)))
4: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 10

+-+-+-+-+
|2| | |3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 11

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 12

+-+
|1|
+-+
1: point

Label: 13

+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 14

+-+-+-+-+-+-+
|2| | |3| |4|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 15

+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 16

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 17

+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 18

+-+
|1|
+-+
1: point

Label: 19

+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 20

+-+-+-+
| | |1|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
1: point

Label: 21

+-+-+-+-+-+
|2| |3| |4|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 22

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
3: Av(Perm((0, 1)))

Label: 23

+-+-+-+-+-+
|2| |2| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 24

+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))

Label: 25

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 26

+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | |2| | |3|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))

Label: 27

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | |2| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))

Label: 28

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
3: Av(Perm((0, 1)))

Label: 29

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| |3|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 1)))
3: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))

Label: 30

+-+
|1|
+-+
1: point

Label: 31

+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | |4| | | | |
+-+-+-+-+-+-+-+
| | | | |2| |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| |1| | | | | | |
+-+-+-+-+-+-+-+-+
| | | |4| | | | |
+-+-+-+-+-+-+-+-+
| | | | | |2| |3|
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))

Label: 32

+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | |2| |3|
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))
3: Av+(Perm((0, 1)))

Label: 33

+-+
|1|
+-+
1: Av+(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 35, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 36, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 37, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 38, "in_tiling": {"[0, 1]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 7, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=0)]", "identifier": 39, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 0]": "point", "[3, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 40, "in_tiling": {"[0, 1]": "point", "[1, 2]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "point", "[4, 4]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=2). | "}, {"children": [], "formal_step": "recurse", "identifier": 41, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 15, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=1)]", "identifier": 42, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "point", "[3, 3]": "Av+(Perm((0, 1)))", "[4, 0]": "point", "[5, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "point", "[3, 3]": "Av+(Perm((0, 1)))", "[4, 0]": "point", "[5, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2), Cell(i=2, j=2): Cell(i=3, j=3), Cell(i=3, j=0): Cell(i=4, j=0), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=1)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 43, "in_tiling": {"[0, 5]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 0]": "point", "[5, 4]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 5]": "point", "[2, 1]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 0]": "point", "[6, 4]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=5). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 44, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 2", "identifier": 41, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 45, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1))).", "identifier": 14, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 46, "in_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=3). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 47, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 48, "in_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=3). | "}, {"children": [], "formal_step": "recurse", "identifier": 49, "in_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 11, "in_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=2)]", "identifier": 50, "in_tiling": {"[0, 4]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 1]": "point", "[5, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 4]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 1]": "point", "[5, 3]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=4, j=1), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=2)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 48, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 0]": "point", "[3, 1]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=2). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=3). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 6, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=4)]", "identifier": 51, "in_tiling": {"[0, 5]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 3]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 5]": "point", "[2, 0]": "point", "[3, 4]": "Av+(Perm((0, 1)))", "[4, 1]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point", "[7, 3]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[{Cell(i=0, j=5): Cell(i=0, j=6), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=4, j=1), Cell(i=4, j=3): Cell(i=5, j=3), Cell(i=5, j=2): Cell(i=6, j=2), Cell(i=6, j=3): Cell(i=7, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=4)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=5). | "}], "formal_step": "Placing the minimum point into row 2", "identifier": 49, "in_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 3]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3))).", "identifier": 52, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 13, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 2]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the minimum point into row 1", "identifier": 7, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((1, 2, 0)), Perm((2, 0, 1, 3))).", "identifier": 53, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1))).", "identifier": 54, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 2)), Perm((1, 3, 0, 2)), Perm((2, 3, 0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((1, 2, 0)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)), Perm((2, 3, 0, 1))).", "identifier": 55, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 2, 3, 0)), Perm((1, 3, 0, 2)), Perm((2, 0, 1, 3)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}}
