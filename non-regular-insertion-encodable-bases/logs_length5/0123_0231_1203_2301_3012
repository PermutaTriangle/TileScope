0123_0231_1203_2301_3012
Log created  Sat, 13 May 2017 06:51:52
Finding the proof tree took 266 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           │     ├─────11
                  │           │     └─────12
                  │           │           ├─────13
                  │           │           └─────14
                  │           │                 ├─────15
                  │           │                 │     ├─────16
                  │           │                 │     └─────17
                  │           │                 └─────18
                  │           │                       ├─────19
                  │           │                       │     ├─────20
                  │           │                       │     └─────21
                  │           │                       └─────22
                  │           └─────23
                  └─────24
                        ├─────25
                        └─────26
                              ├─────27
                              └─────28

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
3: point

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | |1| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 5

+-+-+-+-+-+
|3| | |4| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))
4: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))

Label: 6

+-+-+-+-+
|3| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 7

+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))

Label: 8

+-+-+-+-+
|3| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 9

+-+-+-+-+-+
|3| | |4| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
4: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|1| | |1| | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|1| | |1| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 10

+-+-+-+-+-+
|2| |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| |2| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|2| | |3| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))

Label: 11

+-+
|1|
+-+
1: point

Label: 12

+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | |3| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 13

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point

Label: 14

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 15

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 16

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 17

+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | |1| | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
|2| | | | | | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 18

+-+-+-+
|4| | |
+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| |1| | |1| | |
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | |3| | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: point

Label: 19

+-+-+-+-+-+-+
| |1| |1| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
|2| |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| |2| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 20

+-+-+-+-+
|2| |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | |3| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))

Label: 21

+-+
|1|
+-+
1: point

Label: 22

+-+-+-+-+-+-+-+
|1| | | |1| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |3| | | |3| |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 23

+-+-+-+-+-+-+-+
|3| | | |3| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|1| | | |1| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))

Label: 24

+-+-+-+-+
|4| | | |
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))

Label: 25

+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |1| |1| | |
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: point

Label: 26

+-+-+-+-+
|3| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| |1| |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 27

+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|2| | | |3| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 28

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 523, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 524, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 525, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 1]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 1]": "point", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 526, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 527, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 528, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 529, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[1, 5]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=3). | Inserting the top most point in to the cell Cell(i=0, j=3). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 530, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 1)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 1]": "point", "[6, 4]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 7]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 3]": "point", "[6, 2]": "Av(Perm((0, 1)))", "[7, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | The reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=1). | Inserting the top most point in to the cell Cell(i=4, j=1). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 531, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av+(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1)))", "[1, 5]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[3, 1]": "point", "[4, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=4). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 318, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 4]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=2, j=1). | Inserting the left most point in to the cell Cell(i=2, j=1). | "}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=2)]", "identifier": 532, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=1): Cell(i=2, j=1), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=0). | Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 533, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point", "[6, 2]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1)))", "[4, 4]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=3). | The reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=4). | The reverse of: Inserting the top most point in to the cell Cell(i=2, j=0). | Inserting the top most point in to the cell Cell(i=3, j=3). | "}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 534, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 6]": "Av(Perm((0, 1)))", "[5, 5]": "point", "[6, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "Placing the rightmost point into column 0", "identifier": 535, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1))).", "identifier": 318, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 4]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=2, j=1). | Inserting the right most point in to the cell Cell(i=2, j=1). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "The components of the tiling", "identifier": 536, "in_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 0]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 2]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 0]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=5, j=0)}, {Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2), Cell(i=4, j=4): Cell(i=4, j=5)}]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=2, j=2). | Inserting the left most point in to the cell Cell(i=2, j=2). | "}, {"children": [], "formal_step": "recurse", "identifier": 533, "in_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point", "[6, 1]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 1)))", "[1, 3]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point", "[6, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=3). | Inserting the top most point in to the cell Cell(i=2, j=0). | Inserting the bottom most point in to the cell Cell(i=4, j=4). | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=3). | "}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 537, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=3, j=3). | "}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 2, 0))).", "identifier": 538, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 532, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 4]": "point", "[5, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 530, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "Av+(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 0]": "Av+(Perm((0, 1)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 1)))", "[5, 1]": "point", "[6, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=1). | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 539, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[0, 5]": "Av(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "point"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "Placing the minimum point into row 0", "identifier": 540, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 541, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 2, 0))).", "identifier": 542, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[4, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=2, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=2). | Inserting the bottom most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1, 2)), Perm((2, 3, 0, 1))).", "identifier": 315, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 2)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2))).", "identifier": 543, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((1, 2, 0, 3)), Perm((2, 3, 0, 1)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}}
