0123_0231_0312_1203_3012
Log created  Sat, 13 May 2017 06:28:10
Finding the proof tree took 516 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           └─────9
                  └─────10
                        ├─────11
                        │     ├─────12
                        │     │     ├─────13
                        │     │     ├─────14
                        │     │     └─────15
                        │     └─────16
                        │           ├─────17
                        │           │     ├─────18
                        │           │     │     ├─────19
                        │           │     │     │     ├─────20
                        │           │     │     │     └─────21
                        │           │     │     │           ├─────22
                        │           │     │     │           │     ├─────23
                        │           │     │     │           │     └─────24
                        │           │     │     │           └─────25
                        │           │     │     │                 ├─────26
                        │           │     │     │                 │     ├─────27
                        │           │     │     │                 │     └─────28
                        │           │     │     │                 └─────29
                        │           │     │     │                       ├─────30
                        │           │     │     │                       └─────31
                        │           │     │     └─────32
                        │           │     └─────33
                        │           ├─────34
                        │           └─────35
                        └─────36
                              ├─────37
                              └─────38

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |4| | |
+-+-+-+-+
| | | |4|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
4: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 5

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 6

+-+-+-+
| |3| |
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))

Label: 7

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 8

+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 9

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 10

+-+-+-+-+
| |5| | |
+-+-+-+-+
| | | |4|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 1)))
5: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 11

+-+-+-+-+
| |4| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
4: Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 12

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |3| |1| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))

Label: 13

+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 2)))
2: point

Label: 14

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 15

+-+
|1|
+-+
1: point

Label: 16

+-+-+-+-+
| |4| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |2| | |2|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)))
4: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 17

+-+-+-+
| |4| |
+-+-+-+
|2| | |
+-+-+-+
| |3| |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)))
4: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |3| | |4| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
4: Av(Perm((0, 1, 2)))

Label: 18

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |3| | |4| |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
4: Av(Perm((0, 1, 2)))

Label: 19

+-+-+-+-+-+-+
| | | |4| | |
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|3| | |3| |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av(Perm((0, 1)))

Label: 20

+-+
|1|
+-+
1: point

Label: 21

+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 2)))
2: Av(Perm((0, 1)))
3: point

Label: 22

+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | |1|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 23

+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 24

+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 25

+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | |2|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 1, 2)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |4| |4| |4| |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | |3| | |4|
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))

Label: 26

+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |4| |4| |4|
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| | |3| | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))

Label: 27

+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
| | |4| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |4| | |
+-+-+-+-+-+-+
| |4| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | |3| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)))
4: Av(Perm((0, 1)))

Label: 28

+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 29

+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | |5| |5| |5| |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | |3| | |4|
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
3: Av(Perm((0, 1, 2)))
4: Av+(Perm((0, 1)))
5: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | |2| |2| |2| | |
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| |3| | | |4| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+
| | |2| | |2| | | |2|
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
4: Av(Perm((0, 1, 2)))

Label: 30

+-+-+-+-+-+-+-+-+-+
| | | | |1| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |3| | | |4| | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | |2| | |2| | |2|
+-+-+-+-+-+-+-+-+-+
| | | | | | |1| | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
4: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |4| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 31

+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+
| | |2| |2| | | |2|
+-+-+-+-+-+-+-+-+-+
| | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | |3|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 32

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |3| |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | |1| |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point

Label: 33

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |4| | |5| |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 1, 2)), Perm((1, 2, 0)))
5: Av(Perm((0, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
| |4| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)))
3: Av+(Perm((0, 1)))
4: Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Label: 34

+-+
|1|
+-+
1: point

Label: 35

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 36

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))

Label: 37

+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |3| |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 38

+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| |3| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1012, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1013, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1014, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=0, j=1). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1015, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1016, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 6); either it is empty or Av+(Perm((0, 1))).", "identifier": 1017, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 5]": "Av(Perm((0, 1)))", "[5, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=3, j=3). | "}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "identifier": 1018, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1019, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 5, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=0), Cell(i=4, j=2)]", "identifier": 1020, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1, 2)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=1, j=3), Cell(i=2, j=0): Cell(i=2, j=1), Cell(i=3, j=1): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=1). | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | Inserting the top most point in to the cell Cell(i=1, j=0). | "}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1021, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1022, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "point", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 6]": "point", "[6, 5]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1023, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 2]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "point", "[3, 2]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 1024, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 1]": "Av(Perm((0, 1, 2)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 0]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1, 2)))", "[5, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=1, j=3). | Inserting the bottom most point in to the cell Cell(i=1, j=3). | "}, {"children": [], "formal_step": "recurse", "identifier": 1016, "in_tiling": {"[0, 3]": "point", "[1, 2]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 0]": "point", "[5, 4]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=1, j=4). | Inserting the bottom most point in to the cell Cell(i=3, j=3). | "}], "formal_step": "We perform cell insertion into cell (6, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 1025, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 1]": "Av(Perm((0, 1, 2)))", "[4, 3]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 1]": "Av(Perm((0, 1, 2)))", "[4, 3]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1026, "in_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 7]": "point", "[5, 1]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1, 2)))", "[5, 6]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 2]": "point", "[8, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=6, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=3). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1027, "in_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 8]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1)))", "[4, 7]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 6]": "Av+(Perm((0, 1)))", "[7, 2]": "point", "[8, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 5]": "Av+(Perm((0, 1)))", "[2, 0]": "point", "[3, 4]": "Av(Perm((0, 1)))", "[4, 3]": "point", "[5, 1]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=6, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=4). | Inserting the bottom most point in to the cell Cell(i=3, j=3). | "}], "formal_step": "We perform cell insertion into cell (7, 5); either it is empty or Av+(Perm((0, 1))).", "identifier": 1028, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 1]": "Av(Perm((0, 1, 2)))", "[4, 3]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 3]": "Av(Perm((0, 1)))", "[7, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 1]": "Av(Perm((0, 1)))", "[5, 3]": "Av(Perm((0, 1, 2)))", "[5, 5]": "Av(Perm((0, 1)))", "[6, 0]": "point", "[7, 5]": "Av(Perm((0, 1)))", "[8, 2]": "point", "[9, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=7, j=1). | "}], "formal_step": "We perform cell insertion into cell (7, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 1029, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 0]": "Av+(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 1]": "Av(Perm((0, 1, 2)))", "[4, 3]": "Av(Perm((0, 1)))", "[5, 0]": "point", "[6, 3]": "Av(Perm((0, 1)))", "[7, 1]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=0). | The reverse of: Inserting the right most point in to the cell Cell(i=0, j=1). | Inserting the left most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (3, 0); either it is empty or Av+(Perm((0, 1, 2))).", "identifier": 619, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 1, 2)))", "[3, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 1024, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 3]": "point", "[3, 5]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1, 2)))", "[5, 0]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 5]": "point", "[3, 1]": "Av(Perm((0, 1, 2)))", "[3, 4]": "Av(Perm((0, 1)))", "[4, 0]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=4, j=0)}, {Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=4): Cell(i=2, j=5), Cell(i=3, j=0): Cell(i=3, j=1), Cell(i=3, j=3): Cell(i=3, j=4)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=3). | Inserting the top most point in to the cell Cell(i=1, j=3). | The reverse of: Inserting the left most point in to the cell Cell(i=0, j=1). | Inserting the right most point in to the cell Cell(i=0, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1030, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 6]": "Av(Perm((0, 1)))", "[4, 5]": "point", "[5, 3]": "Av(Perm((0, 1)))", "[6, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=1, j=0). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1031, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 6]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 1, 2)))", "[5, 1]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 6]": "Av(Perm((0, 1)))", "[4, 2]": "Av(Perm((0, 1, 2)))", "[5, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1026, "in_tiling": {"[0, 4]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 5]": "point", "[3, 7]": "Av(Perm((0, 1)))", "[4, 0]": "Av+(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1, 2)))", "[5, 2]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=0). | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=5). | The reverse of: Inserting the bottom most point in to the cell Cell(i=3, j=1). | "}], "formal_step": "We perform cell insertion into cell (4, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 798, "in_tiling": {"[0, 3]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 1]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 5]": "point", "[3, 7]": "Av(Perm((0, 1)))", "[4, 0]": "Av(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1, 2)))", "[5, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=4). | "}, {"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=0), Cell(i=4, j=1)]", "identifier": 1026, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1, 2)))", "[1, 5]": "Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 1)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=1). | "}], "formal_step": "We perform cell insertion into cell (1, 3); either it is empty or Av+(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "identifier": 1032, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 1030, "in_tiling": {"[0, 4]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 3]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 5]": "Av+(Perm((0, 1)))", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=5). | The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 1033, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[4, 4]": "Av(Perm((0, 1)))", "[5, 3]": "point"}, "out_tiling": {"[0, 5]": "point", "[1, 4]": "Av(Perm((0, 1)))", "[2, 1]": "Av(Perm((0, 1)))", "[3, 0]": "point", "[4, 3]": "Av(Perm((0, 1)))", "[5, 2]": "point", "[6, 7]": "point", "[7, 6]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=4). | The reverse of: Inserting the bottom most point in to the cell Cell(i=5, j=5). | Inserting the top most point in to the cell Cell(i=0, j=4). | Inserting the top most point in to the cell Cell(i=6, j=6). | The reverse of: Inserting the top most point in to the cell Cell(i=3, j=1). | Inserting the bottom most point in to the cell Cell(i=3, j=1). | "}], "formal_step": "Placing the rightmost point into column 3", "identifier": 1034, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[1, 4]": "Av(Perm((0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 1035, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av+(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 1036, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1, 2)))", "[1, 4]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[2, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=1, j=0). | "}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1, 2))).", "identifier": 129, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 2)))", "[1, 2]": "Av(Perm((0, 1, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2))).", "identifier": 1037, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((1, 2, 0, 3)), Perm((3, 0, 1, 2)))"}, "recurse": "[]", "relation": ""}}
