0132_0213_0231_1320_2031
Log created  Wed, 03 May 2017 23:53:12
Finding the proof tree took 21 seconds
The depth searched was 7

Strategies applied: standard_strategies_w_all_rows
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        └─────8
                              ├─────9
                              └─────10
                                    ├─────11
                                    │     ├─────12
                                    │     └─────13
                                    │           ├─────14
                                    │           │     ├─────15
                                    │           │     └─────16
                                    │           └─────17
                                    └─────18

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
3: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 2, 1)))
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
3: point

Label: 5

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 2, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 6

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 2, 1)))
2: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
3: point

Label: 7

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))
2: Av(Perm((0, 2, 1)))
3: point

Label: 8

+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
4: point

Label: 9

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))

Label: 10

+-+-+-+-+-+
| |4| | | |
+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av+(Perm((0, 2, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
4: point

Label: 11

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av+(Perm((0, 2, 1)))
3: point

Label: 12

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)))
2: Av(Perm((0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |3| | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((0, 1)))

Label: 13

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point

Label: 14

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point

Label: 15

+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 16

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av+(Perm((0, 2, 1)))
3: point

Label: 17

+-+
|1|
+-+
1: point

Label: 18

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | | | |1| | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
|3| | | | | | | |
+-+-+-+-+-+-+-+-+
| | |2| | | | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 13, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 14, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 15, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 16, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 4]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 2, 1)))", "[1, 3]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 4]": "point", "[4, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 17, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 2]": "point", "[3, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 3]": "point", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 18, "in_tiling": {"[0, 2]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[2, 4]": "point", "[3, 0]": "Av+(Perm((0, 2, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "Av(Perm((0, 1)))", "[2, 6]": "point", "[3, 1]": "Av(Perm((0, 2, 1)))", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 2, 1)))", "[6, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=0). | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 19, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 20, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 12, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=1)]", "identifier": 21, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=3, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=1)}]", "relation": ""}], "formal_step": "Placing the maximum point into row 0", "identifier": 20, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 22, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[1, 4]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 7]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 6]": "point", "[5, 5]": "Av(Perm((0, 1)))", "[6, 3]": "point", "[7, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=2). | Inserting the top most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "We perform cell insertion into cell (4, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0))).", "identifier": 23, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 24, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 3]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the maximum point into row 0", "identifier": 25, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1))).", "identifier": 26, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 27, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1))).", "identifier": 28, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((1, 3, 2, 0)), Perm((2, 0, 3, 1)))"}, "recurse": "[]", "relation": ""}}
