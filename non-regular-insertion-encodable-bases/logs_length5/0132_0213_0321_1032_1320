0132_0213_0321_1032_1320
Log created  Tue, 02 May 2017 12:15:20
Finding the proof tree took 173 seconds
The depth searched was 8

Strategies applied: standard_strategies_w_all_cols
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           │     ├─────12
                        │     │           │     ├─────13
                        │     │           │     └─────14
                        │     │           └─────15
                        │     │                 ├─────16
                        │     │                 │     ├─────17
                        │     │                 │     └─────18
                        │     │                 │           ├─────19
                        │     │                 │           └─────20
                        │     │                 │                 ├─────21
                        │     │                 │                 ├─────22
                        │     │                 │                 └─────23
                        │     │                 └─────24
                        │     └─────25
                        │           ├─────26
                        │           │     ├─────27
                        │           │     └─────28
                        │           └─────29
                        │                 ├─────30
                        │                 ├─────31
                        │                 ├─────32
                        │                 └─────33
                        └─────34

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))
We use his sibling for the next strategy
+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)))
2: point

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av+(Perm((0, 2, 1)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 6

+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 2, 1)))
2: point

Label: 7

+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av+(Perm((0, 2, 1)))

Label: 8

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av+(Perm((0, 2, 1)))

Label: 9

+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 10

+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)))

Label: 11

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av+(Perm((0, 2, 1)))

Label: 12

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av+(Perm((0, 2, 1)))

Label: 13

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)))

Label: 14

+-+
|1|
+-+
1: point

Label: 15

+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 16

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 17

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 18

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)))
3: Av(Perm((0, 2, 1)))

Label: 19

+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)))
3: Av(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | | | |1| |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 20

+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 21

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 22

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)))

Label: 23

+-+
|1|
+-+
1: point

Label: 24

+-+
|1|
+-+
1: point

Label: 25

+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 2, 1)))
2: point
3: Av(Perm((0, 2, 1)))

Label: 26

+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |2| |
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 2, 1)))
2: point

Label: 27

+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 2, 1)))
2: point

Label: 28

+-+
|1|
+-+
1: point

Label: 29

+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 2, 1)))
2: point
We use his sibling for the next strategy
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av+(Perm((0, 2, 1)))

Label: 30

+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)))

Label: 31

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)))

Label: 32

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)))

Label: 33

+-+
|1|
+-+
1: point

Label: 34

+-+-+-+-+
|2| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 415, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 416, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 417, "in_tiling": {"[0, 1]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)))", "[1, 1]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[3, 0]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=1). | "}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 418, "in_tiling": {"[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 0]": "point", "[4, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=2). | "}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 308, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 6, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1), Cell(i=3, j=0)]", "identifier": 303, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)))", "[0, 5]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[3, 0]": "point", "[4, 4]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)))", "[0, 5]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "Av(Perm((0, 2, 1)))", "[2, 2]": "point", "[3, 0]": "point", "[4, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=3), Cell(i=0, j=3): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=2, j=2), Cell(i=2, j=2): Cell(i=4, j=4)}, {Cell(i=0, j=0): Cell(i=1, j=1)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 419, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 420, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 2]": "Av+(Perm((0, 2, 1)))", "[2, 0]": "point", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 2, 1)))", "[1, 4]": "Av(Perm((0, 2, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 0]": "point", "[5, 5]": "point", "[6, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=1, j=2). | "}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 41, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 6, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=4), Cell(i=4, j=5)]", "identifier": 421, "in_tiling": {"[0, 6]": "Av(Perm((0, 2, 1)))", "[1, 4]": "Av(Perm((0, 2, 1)))", "[2, 0]": "point", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 5]": "point", "[5, 1]": "point"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 2, 1)))", "[1, 4]": "Av(Perm((0, 2, 1)))", "[2, 0]": "point", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 3]": "point", "[4, 5]": "point", "[5, 1]": "point"}, "recurse": "[{Cell(i=0, j=4): Cell(i=0, j=6), Cell(i=1, j=0): Cell(i=2, j=0), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=3): Cell(i=3, j=3), Cell(i=3, j=1): Cell(i=5, j=1)}, {Cell(i=0, j=0): Cell(i=1, j=4)}, {Cell(i=0, j=0): Cell(i=4, j=5)}]", "relation": ""}], "formal_step": "Placing the rightmost point into column 1", "identifier": 240, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av+(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av+(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 41, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=3, j=0)]", "identifier": 283, "in_tiling": {"[0, 5]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point", "[1, 3]": "Av(Perm((0, 2, 1)))", "[2, 4]": "point", "[3, 0]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point", "[1, 3]": "Av(Perm((0, 2, 1)))", "[2, 4]": "point", "[3, 0]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=1, j=3), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=3, j=0)}]", "relation": ""}], "formal_step": "Placing the rightmost point into column 0", "identifier": 65, "in_tiling": {"[0, 1]": "Av+(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 308, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 89, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=1)]", "identifier": 422, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=1)}]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 65, "in_tiling": {"[0, 1]": "Av+(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 6, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 6, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=2), Cell(i=2, j=0), Cell(i=4, j=3)]", "identifier": 423, "in_tiling": {"[0, 2]": "Av+(Perm((0, 2, 1)))", "[0, 4]": "Av+(Perm((0, 2, 1)))", "[1, 0]": "Av+(Perm((0, 2, 1)))", "[2, 1]": "point", "[3, 3]": "point"}, "out_tiling": {"[0, 4]": "Av+(Perm((0, 2, 1)))", "[0, 6]": "Av+(Perm((0, 2, 1)))", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point", "[4, 3]": "point", "[5, 5]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=4), Cell(i=0, j=3): Cell(i=0, j=6), Cell(i=1, j=0): Cell(i=3, j=1), Cell(i=2, j=2): Cell(i=5, j=5)}, {Cell(i=0, j=0): Cell(i=1, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=4, j=3)}]", "relation": "| Inserting the right most point in to the cell Cell(i=1, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 424, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)))", "[0, 4]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)))", "[0, 4]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 414, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)))", "[0, 4]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)))", "[0, 4]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point", "[2, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 41, "in_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 2, 1)))", "[1, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the rightmost point into column 0", "identifier": 89, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 64, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[0, 2]": "Av+(Perm((0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 425, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))", "[0, 2]": "Av(Perm((0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0))).", "identifier": 426, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((1, 3, 2, 0)))"}, "recurse": "[]", "relation": ""}}
