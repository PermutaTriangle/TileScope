0132_0213_0321_1032_2301_3120
Log created  Sat, 29 Apr 2017 16:40:37
Finding the proof tree took 7 seconds
The depth searched was 8

Strategies applied: standard_strategies_w_left_col
Maximum depth set at 8

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  └─────6
                        ├─────7
                        │     ├─────8
                        │     │     ├─────9
                        │     │     └─────10
                        │     │           ├─────11
                        │     │           │     ├─────12
                        │     │           │     └─────13
                        │     │           └─────14
                        │     └─────15
                        │           ├─────16
                        │           │     ├─────17
                        │           │     │     ├─────18
                        │           │     │     └─────19
                        │           │     └─────20
                        │           └─────21
                        └─────22
                              ├─────23
                              └─────24
                                    ├─────25
                                    └─────26
                                          ├─────27
                                          └─────28

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))
We use his sibling for the next strategy
+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 4

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 5

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point

Label: 6

+-+-+
| |3|
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 7

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))
4: Av+(Perm((1, 0)))

Label: 8

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))
3: Av+(Perm((1, 0)))

Label: 9

+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | | |2|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))

Label: 10

+-+-+-+
| | |3|
+-+-+-+
|1| | |
+-+-+-+
| | |2|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))
3: Av+(Perm((1, 0)))

Label: 11

+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 12

+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)), Perm((1, 0)))

Label: 13

+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av+(Perm((1, 0)))
3: Av(Perm((0, 1)), Perm((1, 0)))

Label: 14

+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((1, 0)))

Label: 15

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((1, 0)))
4: Av+(Perm((1, 0)))

Label: 16

+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av+(Perm((1, 0)))

Label: 17

+-+-+-+-+
| | | |4|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))
4: Av+(Perm((1, 0)))

Label: 18

+-+-+-+
| | |4|
+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))
2: point
3: Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))
4: Av+(Perm((1, 0)))

Label: 19

+-+
|1|
+-+
1: point

Label: 20

+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |2| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 21

+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))

Label: 22

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |3|
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 23

+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 24

+-+-+-+-+
| | |4| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 25

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))

Label: 26

+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 27

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 28

+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 34, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 35, "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 36, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 37, "in_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=2). | "}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 38, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 4]": "Av+(Perm((1, 0)))", "[4, 1]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 4]": "point", "[4, 5]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 1]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=4). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 39, "in_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 0]": "point", "[2, 1]": "point", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 4]": "point", "[5, 5]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=4). | "}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 40, "in_tiling": {"[0, 4]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))", "[4, 5]": "Av+(Perm((1, 0)))", "[5, 1]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))", "[4, 5]": "Av+(Perm((1, 0)))", "[5, 1]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 41, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 3]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 3]": "point", "[3, 4]": "Av(Perm((1, 0)))", "[4, 1]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 2", "identifier": 42, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0))).", "identifier": 43, "in_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 33, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=3)]", "identifier": 44, "in_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[3, 5]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[3, 5]": "Av+(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=2, j=1), Cell(i=2, j=0): Cell(i=3, j=0), Cell(i=2, j=2): Cell(i=3, j=2), Cell(i=2, j=4): Cell(i=3, j=5)}, {Cell(i=0, j=0): Cell(i=1, j=3)}]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 45, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 1)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 3]": "point", "[3, 0]": "Av+(Perm((0, 1)))", "[3, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 2", "identifier": 46, "in_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 3]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 47, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "Av+(Perm((1, 0)))", "[4, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[3, 2]": "point", "[4, 3]": "Av(Perm((0, 1)), Perm((1, 0)))", "[5, 5]": "point", "[6, 6]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=4). | Inserting the bottom most point in to the cell Cell(i=3, j=2). | "}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 48, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2))).", "identifier": 33, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[2, 4]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 49, "in_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 2]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 50, "in_tiling": {"[0, 2]": "point", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "point", "[1, 5]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[4, 3]": "point", "[5, 4]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=3). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 51, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 52, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1)))", "[4, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 5]": "point", "[2, 2]": "point", "[3, 0]": "Av+(Perm((0, 1)))", "[4, 3]": "point", "[5, 4]": "Av(Perm((0, 1)), Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=4, j=3). | "}], "formal_step": "We perform cell insertion into cell (5, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 53, "in_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1)))", "[5, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 4]": "point", "[2, 5]": "Av(Perm((1, 0)))", "[3, 2]": "point", "[4, 0]": "Av+(Perm((0, 1)))", "[5, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 3", "identifier": 54, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "Av+(Perm((0, 1)))", "[3, 2]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 0]": "Av+(Perm((0, 1)))", "[3, 2]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((1, 0))).", "identifier": 55, "in_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 3]": "point", "[2, 0]": "Av+(Perm((0, 1)))", "[2, 2]": "Av(Perm((1, 0)))", "[2, 4]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Placing the leftmost point into column 1", "identifier": 56, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1))).", "identifier": 57, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2))).", "identifier": 58, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)))", "[1, 2]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0))).", "identifier": 59, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 2, 1)), Perm((1, 0, 3, 2)), Perm((2, 3, 0, 1)), Perm((3, 1, 2, 0)))"}, "recurse": "[]", "relation": ""}}
