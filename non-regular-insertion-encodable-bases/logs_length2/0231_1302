0231_1302
Log created  Fri, 12 May 2017 18:20:12
Finding the proof tree took 1385 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     ├─────7
                  │     └─────8
                  └─────9
                        ├─────10
                        │     ├─────11
                        │     ├─────12
                        │     └─────13
                        └─────14

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
We use his sibling for the next strategy
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 5

+-+-+-+-+
| | |2| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point

Label: 6

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))

Label: 7

+-+-+
|1| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point
3: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |1| | |2|
+-+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
3: point
4: Av(Perm((1, 2, 0)))

Label: 10

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |1| | |2|
+-+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
3: point
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
| |1| | | |3| |
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point
3: Av(Perm((1, 2, 0)))

Label: 11

+-+-+-+-+-+
| | |2| | |
+-+-+-+-+-+
|1| | |3| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: point
3: Av(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
3: point

Label: 12

+-+
|1|
+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+-+-+-+-+
| | |3| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |4|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| |1| | |2|
+-+-+-+-+-+
1: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
3: point
4: Av+(Perm((1, 2, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | |4| | | | | | |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | |4| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| |
+-+-+-+-+-+-+-+-+-+
| | | | | |3| | | |
+-+-+-+-+-+-+-+-+-+
| | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | |3| | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
2: Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))
3: Av(Perm((1, 2, 0)))
4: point

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2382, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2383, "in_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 3, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 5, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "The components of the tiling", "identifier": 2384, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=3, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=1, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=4)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 155, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 3]": "Av(Perm((1, 2, 0)))", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 3, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=5), Cell(i=3, j=6)]", "identifier": 2385, "in_tiling": {"[0, 2]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[2, 3]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 5]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[2, 2]": "point", "[3, 6]": "point", "[4, 4]": "point", "[5, 3]": "Av(Perm((1, 2, 0)))", "[6, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[{Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=0, j=3): Cell(i=1, j=3), Cell(i=1, j=2): Cell(i=2, j=2), Cell(i=2, j=4): Cell(i=4, j=4), Cell(i=3, j=3): Cell(i=5, j=3), Cell(i=4, j=0): Cell(i=6, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=5)}, {Cell(i=0, j=0): Cell(i=3, j=6)}]", "relation": "| Inserting the right most point in to the cell Cell(i=1, j=0). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2386, "in_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[4, 2]": "Av+(Perm((1, 2, 0)))"}, "out_tiling": {"[0, 7]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 1]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[2, 8]": "point", "[3, 3]": "point", "[4, 2]": "Av(Perm((1, 2, 0)))", "[5, 4]": "Av(Perm((1, 2, 0)))", "[6, 6]": "point", "[7, 5]": "Av(Perm((1, 2, 0)))", "[8, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=4, j=2). | "}], "formal_step": "We perform cell insertion into cell (4, 2); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 2387, "in_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 3]": "Av+(Perm((1, 2, 0)))", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[2, 4]": "point", "[3, 1]": "point", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[4, 2]": "Av(Perm((1, 2, 0)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=3, j=3). | The reverse of: Inserting the right most point in to the cell Cell(i=1, j=0). | "}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 2, 0))).", "identifier": 155, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[0, 3]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 2]": "point", "[2, 4]": "point", "[3, 3]": "Av(Perm((1, 2, 0)))", "[4, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2))).", "identifier": 5, "in_tiling": {"[0, 0]": "Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2))).", "identifier": 3, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 3, 1)), Perm((1, 3, 0, 2)))"}, "recurse": "[]", "relation": ""}}
