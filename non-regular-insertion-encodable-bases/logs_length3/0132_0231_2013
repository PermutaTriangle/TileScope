0132_0231_2013
Log created  Sat, 13 May 2017 04:54:57
Finding the proof tree took 894 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           │     ├─────11
                  │           │     │     ├─────12
                  │           │     │     ├─────13
                  │           │     │     └─────14
                  │           │     └─────15
                  │           └─────16
                  │                 ├─────17
                  │                 │     ├─────18
                  │                 │     └─────19
                  │                 │           ├─────20
                  │                 │           │     ├─────21
                  │                 │           │     └─────22
                  │                 │           │           ├─────23
                  │                 │           │           │     ├─────24
                  │                 │           │           │     │     ├─────25
                  │                 │           │           │     │     └─────26
                  │                 │           │           │     │           ├─────27
                  │                 │           │           │     │           └─────28
                  │                 │           │           │     └─────29
                  │                 │           │           └─────30
                  │                 │           └─────31
                  │                 ├─────32
                  │                 ├─────33
                  │                 ├─────34
                  │                 └─────35
                  └─────36
                        ├─────37
                        └─────38

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 4

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| |5| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
5: Av(Perm((0, 1)))

Label: 5

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 6

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 7

+-+
|1|
+-+
1: point

Label: 8

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 9

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|5| | | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 10

+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 11

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 12

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 13

+-+
|1|
+-+
1: point

Label: 14

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 15

+-+
|1|
+-+
1: point

Label: 16

+-+-+-+-+-+-+
|5| | | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | |3| | |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))
5: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|4| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
| | | | | |3| |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
|2| | | | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 17

+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 18

+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 19

+-+-+-+
|3| | |
+-+-+-+
| |2| |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| |1| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 20

+-+-+-+-+
|3| |1| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 21

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 22

+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))

Label: 23

+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|3| |4| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
4: Av(Perm((0, 1)))

Label: 24

+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
4: Av(Perm((0, 1)))

Label: 25

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 26

+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| |1| | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 27

+-+-+-+-+-+
|3| |4| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
4: Av(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
3: Av+(Perm((0, 1)))

Label: 28

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 29

+-+
|1|
+-+
1: point

Label: 30

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 31

+-+
|1|
+-+
1: point

Label: 32

+-+
|1|
+-+
1: point

Label: 33

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 34

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 35

+-+
|1|
+-+
1: point

Label: 36

+-+-+-+-+-+
|4| |5| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
| | | |3| |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
5: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
|5| |2| | | |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
|4| | | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))
4: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
5: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))

Label: 37

+-+-+-+-+-+
|4| |2| | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))
4: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
We use his sibling for the next strategy
+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))
4: Av+(Perm((0, 1)))

Label: 38

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 2833, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2834, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 94, "in_tiling": {"[0, 0]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "The components of the tiling", "identifier": 95, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=0)}, {Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=1): Cell(i=2, j=2)}]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 94, "in_tiling": {"[0, 0]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the right most point in to the cell Cell(i=0, j=0). | "}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 76, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=0), Cell(i=3, j=3)]", "identifier": 1847, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=2): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=2, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=3)}]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=4)]", "identifier": 2835, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 5]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 5]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point", "[3, 3]": "Av(Perm((1, 0)))", "[4, 4]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=2): Cell(i=2, j=2), Cell(i=3, j=3): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=4)}]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2836, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 2837, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [{"children": [], "formal_step": "recurse", "identifier": 95, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 118, "in_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=2). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 28, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=0)]", "identifier": 112, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 5]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 5]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=0, j=4): Cell(i=0, j=5), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=4): Cell(i=2, j=5), Cell(i=3, j=3): Cell(i=3, j=4), Cell(i=4, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=3). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=0). | Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (2, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 1013, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=1)]", "identifier": 118, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 2]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 1]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=2), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=1)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=2). | "}, {"children": [], "formal_step": "recurse", "identifier": 28, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=2, j=0)]", "identifier": 2838, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[{Cell(i=0, j=2): Cell(i=0, j=3), Cell(i=1, j=0): Cell(i=1, j=1), Cell(i=2, j=2): Cell(i=2, j=3), Cell(i=3, j=1): Cell(i=3, j=2)}, {Cell(i=0, j=0): Cell(i=2, j=0)}]", "relation": ""}], "formal_step": "We perform cell insertion into cell (2, 3); either it is empty or Av+(Perm((0, 1))).", "identifier": 1011, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 3]": "Av(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=2)]", "identifier": 2234, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((0, 1)))", "[3, 3]": "point", "[4, 2]": "point"}, "recurse": "[{Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=1): Cell(i=1, j=1), Cell(i=2, j=0): Cell(i=2, j=0), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=2): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 1657, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 2]": "point", "[2, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 28, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 76, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 0, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=1, j=0), Cell(i=3, j=3), Cell(i=5, j=5), Cell(i=6, j=6)]", "identifier": 2839, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 6]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 2]": "Av+(Perm((0, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[5, 5]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 7]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 4]": "point", "[3, 3]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[5, 5]": "Av(Perm((1, 0)))", "[6, 6]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=1), Cell(i=0, j=3): Cell(i=0, j=7), Cell(i=1, j=2): Cell(i=2, j=4), Cell(i=2, j=1): Cell(i=4, j=2)}, {Cell(i=0, j=0): Cell(i=1, j=0)}, {Cell(i=0, j=0): Cell(i=3, j=3)}, {Cell(i=0, j=0): Cell(i=5, j=5)}, {Cell(i=0, j=0): Cell(i=6, j=6)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=3, j=2). | "}], "formal_step": "We perform cell insertion into cell (3, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 1749, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 6]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 3]": "point", "[3, 2]": "Av(Perm((0, 1)))", "[4, 4]": "Av(Perm((1, 0)))", "[5, 5]": "point"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=2, j=2). | "}], "formal_step": "We perform cell insertion into cell (2, 2); either it is empty or Av+(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1))).", "identifier": 1746, "in_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[3, 3]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "recurse", "identifier": 112, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 5]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 5]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 2]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 3]": "Av+(Perm((0, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=2, j=3). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 102, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=2)]", "identifier": 2840, "in_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 4]": "Av+(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[4, 3]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 6]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 6]": "Av(Perm((0, 1)))", "[3, 5]": "point", "[4, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=1): Cell(i=0, j=1), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=0, j=5): Cell(i=0, j=6), Cell(i=1, j=0): Cell(i=1, j=0), Cell(i=2, j=5): Cell(i=2, j=6), Cell(i=3, j=4): Cell(i=3, j=5), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": "| Inserting the bottom most point in to the cell Cell(i=2, j=4). | "}], "formal_step": "We perform cell insertion into cell (2, 4); either it is empty or Av+(Perm((0, 1))).", "identifier": 1020, "in_tiling": {"[0, 0]": "Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 0]": "point", "[2, 4]": "Av(Perm((0, 1)))", "[3, 2]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)), Perm((2, 0, 1)))", "[4, 3]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1))).", "identifier": 94, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((2, 0, 1)), Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3))).", "identifier": 2, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 3, 1)), Perm((2, 0, 1, 3)))"}, "recurse": "[]", "relation": ""}}
