0132_1302_3021
Log created  Sun, 14 May 2017 08:40:35
Finding the proof tree took 2808 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols-prop_fixed
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           │     ├─────9
                  │           │     │     ├─────10
                  │           │     │     │     ├─────11
                  │           │     │     │     └─────12
                  │           │     │     │           ├─────13
                  │           │     │     │           └─────14
                  │           │     │     │                 ├─────15
                  │           │     │     │                 ├─────16
                  │           │     │     │                 ├─────17
                  │           │     │     │                 ├─────18
                  │           │     │     │                 ├─────19
                  │           │     │     │                 ├─────20
                  │           │     │     │                 └─────21
                  │           │     │     └─────22
                  │           │     └─────23
                  │           └─────24
                  │                 ├─────25
                  │                 └─────26
                  └─────27

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
3: Av(Perm((0, 2, 1)))

Label: 3

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 4

+-+-+-+
|2| |3|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
3: Av+(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|1| |2| | |
+-+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point

Label: 5

+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point

Label: 6

+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
We use his sibling for the next strategy
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
2: point

Label: 7

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| |4| |2| | | |
+-+-+-+-+-+-+-+
| | |3| | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | |3| | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 8

+-+-+-+-+-+-+
| |4| |2| | |
+-+-+-+-+-+-+
| | |3| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| |3| | | | |
+-+-+-+-+-+-+
|4| |2| | | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
| | | | |3| |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 9

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| |2| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 10

+-+-+-+-+
| |2| | |
+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
4: Av(Perm((0, 2, 1)))

Label: 11

+-+-+-+-+
| |1| | |
+-+-+-+-+
|2| |3| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
3: Av(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 12

+-+-+-+-+
| |2| | |
+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
4: Av(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | | |4| |5| |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
4: Av(Perm((0, 2, 1)))
5: Av(Perm((1, 0)))

Label: 13

+-+-+-+-+-+-+
| | | | |4| |
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| | | | | |2|
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
4: Av(Perm((1, 0)))

Label: 14

+-+-+-+-+-+-+-+
| | | |3| |4| |
+-+-+-+-+-+-+-+
| | | | |2| | |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | |1| | | | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 2, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+
| | | |4| | | | |3| |
+-+-+-+-+-+-+-+-+-+-+
| | | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | |4| | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | |2| | | |
+-+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |2|
+-+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
| | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 2, 1)))

Label: 15

+-+-+-+-+
| |2| |3|
+-+-+-+-+
| | |1| |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: point
2: Av(Perm((0, 2, 1)))

Label: 16

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 17

+-+
|1|
+-+
1: Av(Perm((0, 1)))

Label: 18

+-+
|1|
+-+
1: Av(Perm((0, 2, 1)))

Label: 19

+-+
|1|
+-+
1: point

Label: 20

+-+
|1|
+-+
1: Av(Perm((1, 0)))

Label: 21

+-+
|1|
+-+
1: point

Label: 22

+-+-+-+-+-+
| |3| | | |
+-+-+-+-+-+
|4| |5| | |
+-+-+-+-+-+
| | | | |3|
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av+(Perm((0, 2, 1)))
3: point
4: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
5: Av(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
| |3| | |
+-+-+-+-+
|1| |2| |
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 23

+-+
|1|
+-+
1: point

Label: 24

+-+-+-+-+-+-+-+-+
| |5| |3| | | | |
+-+-+-+-+-+-+-+-+
| | |4| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |4|
+-+-+-+-+-+-+-+-+
| | | | | |4| | |
+-+-+-+-+-+-+-+-+
| | | | |3| | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
|1| | | | | | | |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av+(Perm((0, 2, 1)))
3: Av(Perm((0, 2, 1)))
4: point
5: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| |5| |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |3|
+-+-+-+-+-+-+-+-+-+
| | | | | |3| | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |4| |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((1, 0)))
5: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 25

+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
|4| |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |2|
+-+-+-+-+-+-+-+-+
| | | | |2| | | |
+-+-+-+-+-+-+-+-+
| | | |1| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |3| |
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
| | | | | | |1| |
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av(Perm((1, 0)))
4: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
|3| | | | | | |
+-+-+-+-+-+-+-+
| | | | | | |2|
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| |1| | | | | |
+-+-+-+-+-+-+-+
| | | |1| | | |
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
1: Av(Perm((0, 2, 1)))
2: point
3: Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))

Label: 26

+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+
| |2| | | | | | | |
+-+-+-+-+-+-+-+-+-+
| | | |2| | | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | | |3|
+-+-+-+-+-+-+-+-+-+
| | | | | |3| | | |
+-+-+-+-+-+-+-+-+-+
| | | | |2| | | | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |4| |
+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+
| | | | | | | |2| |
+-+-+-+-+-+-+-+-+-+
|1| | | | | | | | |
+-+-+-+-+-+-+-+-+-+
1: Av+(Perm((0, 1)))
2: Av(Perm((0, 2, 1)))
3: point
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+-+-+-+
| | | |1| | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | |3| | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | |3| | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | | |1|
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | |3| | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | |1| | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | |3| | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | | |1| |
+-+-+-+-+-+-+-+-+-+-+-+
| | | | | | | | |3| | |
+-+-+-+-+-+-+-+-+-+-+-+
|2| | | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
| |1| | | | | | | | | |
+-+-+-+-+-+-+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 2, 1)))

Label: 27

+-+-+-+-+-+
| | | |4| |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | | |2|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
4: Av+(Perm((0, 2, 1)))
We use his sibling for the next strategy
+-+-+-+-+
| |2| | |
+-+-+-+-+
|3| |4| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))
4: Av(Perm((0, 2, 1)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 7921, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7922, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 0]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7923, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=0). | "}, {"children": [{"children": [{"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7924, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))", "[3, 0]": "point"}, "out_tiling": {"[0, 1]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 0]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=1). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7925, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 5]": "Av(Perm((1, 0)))", "[5, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "point", "[4, 5]": "Av(Perm((1, 0)))", "[5, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7926, "in_tiling": {"[0, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 1]": "point", "[3, 2]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "point", "[1, 2]": "Av(Perm((0, 2, 1)))", "[2, 3]": "point", "[3, 1]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=1, j=1). | Inserting the top most point in to the cell Cell(i=1, j=1). | "}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 40, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 40, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 20, "in_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 9, "in_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=0, j=3), Cell(i=2, j=0), Cell(i=4, j=6), Cell(i=5, j=7), Cell(i=7, j=5), Cell(i=9, j=2)]", "identifier": 7927, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 5]": "Av+(Perm((0, 2, 1)))", "[4, 4]": "point", "[5, 5]": "Av(Perm((1, 0)))", "[6, 2]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 8]": "Av(Perm((0, 2, 1)))", "[4, 6]": "Av(Perm((0, 2, 1)))", "[5, 7]": "point", "[6, 4]": "point", "[7, 5]": "Av(Perm((1, 0)))", "[8, 8]": "Av(Perm((1, 0)))", "[9, 2]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=1, j=1), Cell(i=1, j=2): Cell(i=3, j=8), Cell(i=2, j=1): Cell(i=6, j=4), Cell(i=3, j=2): Cell(i=8, j=8)}, {Cell(i=0, j=0): Cell(i=0, j=3)}, {Cell(i=0, j=0): Cell(i=2, j=0)}, {Cell(i=0, j=0): Cell(i=4, j=6)}, {Cell(i=0, j=0): Cell(i=5, j=7)}, {Cell(i=0, j=0): Cell(i=7, j=5)}, {Cell(i=0, j=0): Cell(i=9, j=2)}]", "relation": "| Inserting the right most point in to the cell Cell(i=3, j=5). | "}], "formal_step": "We perform cell insertion into cell (3, 5); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 302, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 5]": "Av(Perm((0, 2, 1)))", "[4, 4]": "point", "[5, 5]": "Av(Perm((1, 0)))", "[6, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=3, j=4). | Inserting the bottom most point in to the cell Cell(i=3, j=4). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 7928, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 7929, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 2, 1)))", "[3, 1]": "Av+(Perm((0, 2, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=3). | "}], "formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 181, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 2, 1)))", "[3, 1]": "Av(Perm((0, 2, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 4]": "point", "[2, 3]": "Av(Perm((0, 2, 1)))", "[3, 1]": "Av(Perm((0, 2, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 1, "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "recurse": "[]", "relation": ""}], "formal_step": "Reversibly delete the points at cells [Cell(i=4, j=2)]", "identifier": 7930, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 5]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[2, 4]": "point", "[3, 1]": "Av(Perm((0, 2, 1)))", "[3, 5]": "Av(Perm((0, 2, 1)))", "[4, 2]": "point", "[5, 3]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 5]": "point", "[2, 4]": "Av(Perm((0, 2, 1)))", "[3, 1]": "Av(Perm((0, 2, 1)))", "[4, 2]": "point", "[5, 3]": "point"}, "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=0), Cell(i=0, j=3): Cell(i=0, j=4), Cell(i=1, j=4): Cell(i=1, j=5), Cell(i=2, j=3): Cell(i=2, j=4), Cell(i=3, j=1): Cell(i=3, j=1), Cell(i=4, j=2): Cell(i=5, j=3)}, {Cell(i=0, j=0): Cell(i=4, j=2)}]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=3). | Inserting the top most point in to the cell Cell(i=0, j=3). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7931, "in_tiling": {"[0, 6]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 7]": "point", "[2, 6]": "Av(Perm((0, 2, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)))", "[4, 4]": "point", "[5, 1]": "point", "[6, 0]": "Av(Perm((0, 2, 1)))", "[6, 2]": "Av(Perm((1, 0)))", "[7, 5]": "point"}, "out_tiling": {"[0, 6]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 3]": "Av(Perm((0, 2, 1)))", "[2, 4]": "point", "[3, 2]": "Av(Perm((0, 2, 1)))", "[4, 0]": "Av(Perm((0, 2, 1)))", "[5, 1]": "point", "[6, 5]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=5, j=0). | Inserting the right most point in to the cell Cell(i=5, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=6). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 7932, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[1, 8]": "Av(Perm((0, 2, 1)))", "[2, 9]": "point", "[3, 7]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((0, 2, 1)))", "[5, 5]": "point", "[6, 2]": "point", "[7, 1]": "Av(Perm((0, 2, 1)))", "[7, 3]": "Av(Perm((1, 0)))", "[8, 6]": "point"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[1, 0]": "point", "[10, 7]": "point", "[2, 9]": "Av(Perm((0, 2, 1)))", "[3, 10]": "point", "[4, 8]": "Av(Perm((0, 2, 1)))", "[5, 6]": "Av(Perm((0, 2, 1)))", "[6, 4]": "Av(Perm((0, 2, 1)))", "[7, 5]": "point", "[8, 2]": "Av(Perm((0, 2, 1)))", "[9, 3]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=6, j=1). | Inserting the right most point in to the cell Cell(i=6, j=1). | The reverse of: Inserting the top most point in to the cell Cell(i=1, j=7). | Inserting the bottom most point in to the cell Cell(i=0, j=0). | The reverse of: Inserting the top most point in to the cell Cell(i=3, j=4). | Inserting the right most point in to the cell Cell(i=3, j=4). | Inserting the top most point in to the cell Cell(i=2, j=8). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "identifier": 7933, "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[2, 5]": "point", "[3, 6]": "Av(Perm((0, 2, 1)))", "[4, 2]": "Av(Perm((0, 2, 1)))", "[5, 3]": "point", "[6, 1]": "Av+(Perm((0, 2, 1)))", "[7, 4]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 7]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[2, 8]": "point", "[3, 7]": "Av(Perm((0, 2, 1)))", "[4, 4]": "Av(Perm((0, 2, 1)))", "[5, 5]": "point", "[6, 2]": "point", "[7, 1]": "Av(Perm((0, 2, 1)))", "[7, 3]": "Av(Perm((1, 0)))", "[8, 6]": "point"}, "recurse": "[]", "relation": "| The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=3). | Inserting the top most point in to the cell Cell(i=0, j=3). | Inserting the left most point in to the cell Cell(i=6, j=1). | "}], "formal_step": "We perform cell insertion into cell (5, 1); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 7929, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[0, 3]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[1, 6]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[2, 5]": "point", "[3, 2]": "Av(Perm((0, 2, 1)))", "[3, 6]": "Av(Perm((0, 2, 1)))", "[4, 3]": "point", "[5, 1]": "Av(Perm((0, 2, 1)))", "[6, 4]": "point"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=3). | "}], "formal_step": "We perform cell insertion into cell (0, 3); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1))).", "identifier": 7934, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 2]": "point"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "recurse", "identifier": 302, "in_tiling": {"[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1)))", "[3, 4]": "Av+(Perm((0, 2, 1)))", "[4, 2]": "point"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 2, 1)))", "[3, 1]": "point"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=3, j=4). | The reverse of: Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (3, 4); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 324, "in_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av+(Perm((0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 2, 1)))", "[3, 4]": "Av(Perm((0, 2, 1)))", "[4, 2]": "point"}, "recurse": "[]", "relation": "| Inserting the right most point in to the cell Cell(i=2, j=1). | The reverse of: Inserting the bottom most point in to the cell Cell(i=0, j=0). | Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (2, 1); either it is empty or Av+(Perm((0, 2, 1))).", "identifier": 10, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))", "[1, 0]": "point", "[2, 1]": "Av(Perm((0, 2, 1)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1))).", "identifier": 176, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((1, 3, 0, 2)), Perm((3, 0, 2, 1)))"}, "recurse": "[]", "relation": ""}}
