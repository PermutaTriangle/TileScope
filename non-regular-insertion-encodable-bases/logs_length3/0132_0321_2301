0132_0321_2301
Log created  Sun, 07 May 2017 05:52:20
Finding the proof tree took 405 seconds
The depth searched was 5

Strategies applied: standard_strategies_w_all_rows_cols
Maximum depth set at 5

Human readable:

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     └─────7
                  │           ├─────8
                  │           └─────9
                  └─────10
                        ├─────11
                        │     ├─────12
                        │     └─────13
                        └─────14

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+-+
| |2| |
+-+-+-+
|1| |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point

Label: 3

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point

Label: 4

+-+-+-+
| |3| |
+-+-+-+
|1| |2|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
3: point
We use his sibling for the next strategy
+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |4|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: Av(Perm((0, 1)))
3: point
4: Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 5

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |3|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))

Label: 6

+-+-+-+
|2| | |
+-+-+-+
| | |3|
+-+-+-+
| |2| |
+-+-+-+
| | |1|
+-+-+-+
1: Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point
3: Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
2: point

Label: 7

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |4|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))
4: Av(Perm((1, 0)))

Label: 8

+-+-+-+-+
| |2| | |
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))

Label: 9

+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |4|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+
| | |2| | | | |
+-+-+-+-+-+-+-+
| | | | | | |3|
+-+-+-+-+-+-+-+
| | | | | |2| |
+-+-+-+-+-+-+-+
|1| | | | | | |
+-+-+-+-+-+-+-+
| |2| | | | | |
+-+-+-+-+-+-+-+
| | | |2| | | |
+-+-+-+-+-+-+-+
| | | | |1| | |
+-+-+-+-+-+-+-+
| | | | | | |1|
+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 10

+-+-+-+-+
| |3| | |
+-+-+-+-+
| | | |5|
+-+-+-+-+
|4| | | |
+-+-+-+-+
| | |3| |
+-+-+-+-+
|2| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av(Perm((0, 1)))
2: Av+(Perm((0, 1)))
3: point
4: Av(Perm((0, 2, 1)), Perm((1, 2, 0)))
5: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 11

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 12

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| |3| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((1, 0)))

Label: 13

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
|1| |4| | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
|3| | | | | |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((0, 1)))
4: Av(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+-+-+
| | | | | |2| | |
+-+-+-+-+-+-+-+-+
|1| | | |4| | | |
+-+-+-+-+-+-+-+-+
| | |3| | | | | |
+-+-+-+-+-+-+-+-+
| | | | | | |2| |
+-+-+-+-+-+-+-+-+
| |2| | | | | | |
+-+-+-+-+-+-+-+-+
| | |1| | | | | |
+-+-+-+-+-+-+-+-+
| | | |2| | | | |
+-+-+-+-+-+-+-+-+
| | | | | | | |1|
+-+-+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1)), Perm((1, 0)))
4: Av(Perm((1, 0)))

Label: 14

+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |2| | | | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))
We use his sibling for the next strategy
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | | | | |3|
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| | | | |2| |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av+(Perm((1, 0)))

Computer readable (JSON):

{"root": {"children": [{"children": [], "formal_step": "Verified because it is a one by one tiling with a subclass", "identifier": 883, "in_tiling": {}, "out_tiling": {}, "recurse": "[]", "relation": ""}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 884, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 885, "in_tiling": {"[0, 3]": "point", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[2, 2]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "point", "[1, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the left most point in to the cell Cell(i=1, j=0). | "}, {"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 886, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 3]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 887, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 7]": "point", "[3, 2]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[5, 5]": "point", "[6, 0]": "Av(Perm((0, 1)))", "[6, 6]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the bottom most point in to the cell Cell(i=0, j=2). | Inserting the bottom most point in to the cell Cell(i=4, j=4). | "}], "formal_step": "We perform cell insertion into cell (3, 3); either it is empty or Av+(Perm((1, 0))).", "identifier": 888, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 2]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 3]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": ""}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 889, "in_tiling": {"[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 4]": "point", "[2, 1]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[3, 3]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [{"children": [{"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 890, "in_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 3]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 3]": "Av(Perm((1, 0)))", "[3, 4]": "point", "[4, 2]": "point", "[5, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": ""}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 891, "in_tiling": {"[0, 2]": "Av+(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 6]": "Av(Perm((0, 1)))", "[1, 3]": "point", "[2, 2]": "Av(Perm((0, 1)))", "[2, 5]": "Av(Perm((0, 1)), Perm((1, 0)))", "[3, 1]": "point", "[4, 6]": "Av(Perm((1, 0)))", "[5, 7]": "point", "[6, 4]": "point", "[7, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=2). | "}], "formal_step": "We perform cell insertion into cell (0, 2); either it is empty or Av+(Perm((0, 1))).", "identifier": 892, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 2]": "Av(Perm((0, 1)))", "[0, 4]": "Av(Perm((0, 1)))", "[1, 1]": "point", "[2, 4]": "Av(Perm((1, 0)))", "[3, 5]": "point", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=0, j=1). | Inserting the bottom most point in to the cell Cell(i=0, j=1). | "}, {"children": [], "formal_step": "The tiling is a subset of the subclass", "identifier": 893, "in_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[3, 6]": "point", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 5]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[3, 6]": "point", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 5]": "Av+(Perm((1, 0)))"}, "recurse": "[]", "relation": "| The reverse of: Inserting the top most point in to the cell Cell(i=1, j=1). | Inserting the bottom most point in to the cell Cell(i=1, j=1). | "}], "formal_step": "We perform cell insertion into cell (5, 5); either it is empty or Av+(Perm((1, 0))).", "identifier": 894, "in_tiling": {"[0, 1]": "Av+(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 2, 1)), Perm((1, 2, 0)))", "[1, 5]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1)))", "[3, 4]": "Av(Perm((1, 0)))"}, "out_tiling": {"[0, 4]": "Av(Perm((0, 1)))", "[1, 2]": "point", "[2, 1]": "Av(Perm((0, 1)))", "[2, 4]": "Av(Perm((1, 0)))", "[3, 6]": "point", "[4, 3]": "point", "[5, 0]": "Av(Perm((0, 1)))", "[5, 5]": "Av(Perm((1, 0)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=1). | "}], "formal_step": "We perform cell insertion into cell (0, 1); either it is empty or Av+(Perm((0, 1))).", "identifier": 895, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 1]": "Av(Perm((0, 1)))", "[0, 3]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 5]": "point", "[2, 2]": "point", "[3, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[3, 4]": "Av(Perm((0, 2, 1)), Perm((2, 1, 0)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| Inserting the left most point in to the cell Cell(i=2, j=0). | "}], "formal_step": "We perform cell insertion into cell (2, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 223, "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))", "[1, 1]": "point", "[2, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": "| Inserting the top most point in to the cell Cell(i=0, j=0). | "}], "formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1))).", "identifier": 896, "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 3, 2, 1)), Perm((2, 3, 0, 1)))"}, "recurse": "[]", "relation": ""}}
