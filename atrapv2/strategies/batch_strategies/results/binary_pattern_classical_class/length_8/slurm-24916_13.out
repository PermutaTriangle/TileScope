{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)), Perm((3, 1, 2, 0))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Placing the binary pattern \n |#|#| \n-+-2-+-\n#| | | \n-1-+-+-\n#| | | \n-+-+-0-\n | |#|#", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)), Perm((3, 1, 2, 0)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)), Perm((1, 3, 0, 2)), Perm((2, 0, 3, 1)), Perm((3, 1, 2, 0)))"}, "relation": "", "identifier": 3, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)))"}, "relation": "", "identifier": 31, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (7, 6); either it is empty or Av+(Perm((1, 0))).", "in_tiling": {"[5, 0]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 5]": "point", "[7, 6]": "Av(Perm((1, 0)))"}, "out_tiling": {"[5, 0]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 5]": "point", "[7, 6]": "Av(Perm((1, 0)))"}, "relation": "", "identifier": 84, "children": [{"formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=1), Cell(i=4, j=0)]", "in_tiling": {"[5, 0]": "point", "[4, 1]": "Av(Perm((0, 1)))", "[6, 1]": "Av(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[3, 4]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 5]": "point"}, "out_tiling": {"[4, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)))", "[1, 1]": "Av(Perm((0, 1)))", "[0, 2]": "point", "[1, 3]": "Av(Perm((1, 0)))", "[3, 3]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 4]": "point"}, "relation": "| Reverse of: Inserting the bottom most point in to the cell Cell(i=4, j=0). | ", "identifier": 107, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((1, 0)))", "[3, 1]": "Av(Perm((0, 1)), Perm((1, 0)))", "[2, 2]": "point"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av+(Perm((0, 2, 1)), Perm((1, 0, 2)), Perm((1, 2, 0)), Perm((2, 0, 1)), Perm((2, 1, 0)))"}, "relation": "| Reverse of: Inserting the top most point in to the cell Cell(i=1, j=1). | ", "identifier": 262, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)))", "[0, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((1, 2, 0)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 3, 1, 2)), Perm((0, 3, 2, 1)))", "[0, 1]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 1108, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[{Cell(i=0, j=0): Cell(i=0, j=2), Cell(i=1, j=1): Cell(i=1, j=3), Cell(i=2, j=2): Cell(i=2, j=4), Cell(i=3, j=1): Cell(i=3, j=3)}, {Cell(i=0, j=1): Cell(i=1, j=1), Cell(i=1, j=0): Cell(i=4, j=0)}]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[4, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[5, 1]": "Av(Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[6, 6]": "Av+(Perm((1, 0)))"}, "out_tiling": {"[4, 0]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[5, 1]": "Av(Perm((1, 0)))", "[1, 2]": "Av(Perm((0, 1)))", "[0, 3]": "point", "[1, 4]": "Av(Perm((1, 0)))", "[2, 5]": "point", "[6, 6]": "Av+(Perm((1, 0)))"}, "relation": "", "identifier": 422, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
