0123_0132_0213_0231_0312

--------------------------------------------------------------------------
Auto search started Sat, 09 Sep 2017 23:25:19

Looking for proof tree for Basis((Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2))))

The strategies being used are:
Equivalent: point_separation, all_equivalent_point_isolations
Inferral: empty_cell_inferral, row_and_column_separation, subclass_inferral
Verification: subset_verified
Set 1: components, reversibly_deletable_cells
Set 2: all_cell_insertions, all_point_isolations

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 5.067623853683472 seconds
Number of tilings expanded by Set 1 is 46
Number of tilings expanded by Set 2 is 14
Total number of tilings is 113
Total number of expandable tilings is 103
Total number of verified tilings is 8
Total number of strategy verified tilings is 8
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.0723884105682373 seconds, ~1%
Time spent strategy verifying: 0.007588624954223633 seconds, ~0%
Time spent inferring: 0.8947272300720215 seconds, ~17%
Time spent expanding Set 1: 3.6865036487579346 seconds, ~72%
Time spent expanding Set 2: 0.020229816436767578 seconds, ~0%
Time spent prepping for tree search: 0.01774001121520996 seconds, ~0%
Time spent searching for tree: 0.04768252372741699 seconds, ~0%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 10.083419799804688 seconds
Number of tilings expanded by Set 1 is 56
Number of tilings expanded by Set 2 is 49
Total number of tilings is 361
Total number of expandable tilings is 351
Total number of verified tilings is 55
Total number of strategy verified tilings is 18
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.3187446594238281 seconds, ~3%
Time spent strategy verifying: 0.0867624282836914 seconds, ~0%
Time spent inferring: 3.569949150085449 seconds, ~35%
Time spent expanding Set 1: 4.7239861488342285 seconds, ~46%
Time spent expanding Set 2: 0.08997297286987305 seconds, ~0%
Time spent prepping for tree search: 0.062349557876586914 seconds, ~0%
Time spent searching for tree: 0.13595890998840332 seconds, ~1%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 15.19120979309082 seconds
Number of tilings expanded by Set 1 is 63
Number of tilings expanded by Set 2 is 57
Total number of tilings is 425
Total number of expandable tilings is 413
Total number of verified tilings is 62
Total number of strategy verified tilings is 22
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.41515541076660156 seconds, ~2%
Time spent strategy verifying: 0.13173580169677734 seconds, ~0%
Time spent inferring: 4.496798753738403 seconds, ~29%
Time spent expanding Set 1: 8.517168760299683 seconds, ~56%
Time spent expanding Set 2: 0.10573506355285645 seconds, ~0%
Time spent prepping for tree search: 0.08890438079833984 seconds, ~0%
Time spent searching for tree: 0.18324804306030273 seconds, ~1%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 20.446733713150024 seconds
Number of tilings expanded by Set 1 is 72
Number of tilings expanded by Set 2 is 64
Total number of tilings is 488
Total number of expandable tilings is 474
Total number of verified tilings is 77
Total number of strategy verified tilings is 29
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.5449161529541016 seconds, ~2%
Time spent strategy verifying: 0.1679999828338623 seconds, ~0%
Time spent inferring: 5.454726934432983 seconds, ~26%
Time spent expanding Set 1: 12.429894208908081 seconds, ~60%
Time spent expanding Set 2: 0.11721110343933105 seconds, ~0%
Time spent prepping for tree search: 0.12300300598144531 seconds, ~0%
Time spent searching for tree: 0.2467176914215088 seconds, ~1%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 25.611281871795654 seconds
Number of tilings expanded by Set 1 is 97
Number of tilings expanded by Set 2 is 68
Total number of tilings is 533
Total number of expandable tilings is 500
Total number of verified tilings is 95
Total number of strategy verified tilings is 39
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.5775735378265381 seconds, ~2%
Time spent strategy verifying: 0.19877362251281738 seconds, ~0%
Time spent inferring: 5.856993913650513 seconds, ~22%
Time spent expanding Set 1: 16.718191623687744 seconds, ~65%
Time spent expanding Set 2: 0.12575244903564453 seconds, ~0%
Time spent prepping for tree search: 0.18802928924560547 seconds, ~0%
Time spent searching for tree: 0.393481969833374 seconds, ~1%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 30.82238793373108 seconds
Number of tilings expanded by Set 1 is 120
Number of tilings expanded by Set 2 is 68
Total number of tilings is 548
Total number of expandable tilings is 500
Total number of verified tilings is 98
Total number of strategy verified tilings is 42
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.5775735378265381 seconds, ~1%
Time spent strategy verifying: 0.20075011253356934 seconds, ~0%
Time spent inferring: 5.94039249420166 seconds, ~19%
Time spent expanding Set 1: 21.482369422912598 seconds, ~69%
Time spent expanding Set 2: 0.12575244903564453 seconds, ~0%
Time spent prepping for tree search: 0.25406455993652344 seconds, ~0%
Time spent searching for tree: 0.5681390762329102 seconds, ~1%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 35.96602773666382 seconds
Number of tilings expanded by Set 1 is 131
Number of tilings expanded by Set 2 is 71
Total number of tilings is 597
Total number of expandable tilings is 547
Total number of verified tilings is 103
Total number of strategy verified tilings is 47
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.6428983211517334 seconds, ~1%
Time spent strategy verifying: 0.21279025077819824 seconds, ~0%
Time spent inferring: 6.729985952377319 seconds, ~18%
Time spent expanding Set 1: 25.461532831192017 seconds, ~70%
Time spent expanding Set 2: 0.1342320442199707 seconds, ~0%
Time spent prepping for tree search: 0.2946949005126953 seconds, ~0%
Time spent searching for tree: 0.6739003658294678 seconds, ~1%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 41.05397582054138 seconds
Number of tilings expanded by Set 1 is 155
Number of tilings expanded by Set 2 is 79
Total number of tilings is 707
Total number of expandable tilings is 642
Total number of verified tilings is 118
Total number of strategy verified tilings is 62
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.7899689674377441 seconds, ~1%
Time spent strategy verifying: 0.2565805912017822 seconds, ~0%
Time spent inferring: 8.217411994934082 seconds, ~20%
Time spent expanding Set 1: 28.153671503067017 seconds, ~68%
Time spent expanding Set 2: 0.15360307693481445 seconds, ~0%
Time spent prepping for tree search: 0.39742350578308105 seconds, ~0%
Time spent searching for tree: 0.9597010612487793 seconds, ~2%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 46.117013692855835 seconds
Number of tilings expanded by Set 1 is 179
Number of tilings expanded by Set 2 is 83
Total number of tilings is 756
Total number of expandable tilings is 687
Total number of verified tilings is 122
Total number of strategy verified tilings is 66
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 0.8291707038879395 seconds, ~1%
Time spent strategy verifying: 0.26232361793518066 seconds, ~0%
Time spent inferring: 9.234709739685059 seconds, ~20%
Time spent expanding Set 1: 31.338966369628906 seconds, ~67%
Time spent expanding Set 2: 0.16358613967895508 seconds, ~0%
Time spent prepping for tree search: 0.5379691123962402 seconds, ~1%
Time spent searching for tree: 1.3636665344238281 seconds, ~2%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 51.24673271179199 seconds
Number of tilings expanded by Set 1 is 187
Number of tilings expanded by Set 2 is 94
Total number of tilings is 869
Total number of expandable tilings is 799
Total number of verified tilings is 125
Total number of strategy verified tilings is 69
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 1.027256965637207 seconds, ~2%
Time spent strategy verifying: 0.27674198150634766 seconds, ~0%
Time spent inferring: 11.066734313964844 seconds, ~21%
Time spent expanding Set 1: 33.594762086868286 seconds, ~65%
Time spent expanding Set 2: 0.18838071823120117 seconds, ~0%
Time spent prepping for tree search: 0.6219830513000488 seconds, ~1%
Time spent searching for tree: 1.5812010765075684 seconds, ~3%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 56.49802374839783 seconds
Number of tilings expanded by Set 1 is 196
Number of tilings expanded by Set 2 is 98
Total number of tilings is 901
Total number of expandable tilings is 827
Total number of verified tilings is 125
Total number of strategy verified tilings is 69
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 1.0556526184082031 seconds, ~1%
Time spent strategy verifying: 0.27689337730407715 seconds, ~0%
Time spent inferring: 12.041194200515747 seconds, ~21%
Time spent expanding Set 1: 37.45687437057495 seconds, ~66%
Time spent expanding Set 2: 0.19592523574829102 seconds, ~0%
Time spent prepping for tree search: 0.6821398735046387 seconds, ~1%
Time spent searching for tree: 1.7322838306427002 seconds, ~3%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 61.54165077209473 seconds
Number of tilings expanded by Set 1 is 209
Number of tilings expanded by Set 2 is 99
Total number of tilings is 909
Total number of expandable tilings is 829
Total number of verified tilings is 125
Total number of strategy verified tilings is 69
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 1.0570597648620605 seconds, ~1%
Time spent strategy verifying: 0.2770383358001709 seconds, ~0%
Time spent inferring: 12.103894472122192 seconds, ~19%
Time spent expanding Set 1: 42.15533256530762 seconds, ~68%
Time spent expanding Set 2: 0.19643807411193848 seconds, ~0%
Time spent prepping for tree search: 0.7500581741333008 seconds, ~1%
Time spent searching for tree: 1.904897928237915 seconds, ~3%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 66.74484300613403 seconds
Number of tilings expanded by Set 1 is 214
Number of tilings expanded by Set 2 is 107
Total number of tilings is 998
Total number of expandable tilings is 918
Total number of verified tilings is 128
Total number of strategy verified tilings is 70
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 1.1675975322723389 seconds, ~1%
Time spent strategy verifying: 0.2814300060272217 seconds, ~0%
Time spent inferring: 14.730386018753052 seconds, ~22%
Time spent expanding Set 1: 44.133474588394165 seconds, ~66%
Time spent expanding Set 2: 0.22229218482971191 seconds, ~0%
Time spent prepping for tree search: 0.809349775314331 seconds, ~1%
Time spent searching for tree: 2.0599873065948486 seconds, ~3%

 ------------- 
|STATUS UPDATE|
 ------------- 

Time spent searching so far: 71.27665686607361 seconds
Number of tilings expanded by Set 1 is 226
Number of tilings expanded by Set 2 is 111
Total number of tilings is 1019
Total number of expandable tilings is 936
Total number of verified tilings is 211
Total number of strategy verified tilings is 71
Total number of empty tilings is 0
There were 0 cache misses

Time spent equivalent expanding: 1.189805269241333 seconds, ~1%
Time spent strategy verifying: 0.2821192741394043 seconds, ~0%
Time spent inferring: 15.23223066329956 seconds, ~21%
Time spent expanding Set 1: 47.66151189804077 seconds, ~66%
Time spent expanding Set 2: 0.22985053062438965 seconds, ~0%
Time spent prepping for tree search: 0.893721342086792 seconds, ~1%
Time spent searching for tree: 2.2951838970184326 seconds, ~3%

Proof tree found Sat, 09 Sep 2017 23:26:31

root: 0
      ├─────1
      └─────2
            ├─────3
            └─────4
                  ├─────5
                  │     ├─────6
                  │     │     ├─────7
                  │     │     └─────8
                  │     └─────9
                  │           ├─────10
                  │           │     ├─────11
                  │           │     └─────12
                  │           │           ├─────13
                  │           │           └─────14
                  │           └─────15
                  │                 ├─────16
                  │                 │     ├─────17
                  │                 │     └─────18
                  │                 └─────19
                  └─────20

Label: 0

+-+
|1|
+-+
1: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 1

+-+
| |
+-+


Label: 2

+-+
|1|
+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 3

+-+
|1|
+-+
1: point

Label: 4

+-+-+
|1|2|
+-+-+
1: point
2: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+
|1|2|
+-+-+
1: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
2: point

Label: 5

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+
|2| |1|3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
3: Av(Perm((0, 1)))

Label: 6

+-+-+-+
|2| |1|
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 7

+-+-+
|3| |
+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
2: point
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 8

+-+
|1|
+-+
1: point

Label: 9

+-+-+-+-+
|2| |1|3|
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
3: Av+(Perm((0, 1)))
We use his sibling for the next strategy
+-+-+-+-+-+
|2| |1|3|1|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
3: Av(Perm((0, 1)))

Label: 10

+-+-+-+-+
|3| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
|2| |1| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 11

+-+
|1|
+-+
1: point

Label: 12

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 13

+-+-+-+
|3| | |
+-+-+-+
| | |1|
+-+-+-+
|2| | |
+-+-+-+
| |1| |
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 14

+-+-+-+-+
|4| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
|3| | | |
+-+-+-+-+
| | |2| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 15

+-+-+-+-+-+
|3| |1|2| |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+-+-+-+
|4| | | | |
+-+-+-+-+-+
| | |1| | |
+-+-+-+-+-+
|3| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
|2| | | |2|
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
1: point
2: Av(Perm((0, 1)))
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 16

+-+-+-+
|4| | |
+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 17

+-+-+-+
|3| | |
+-+-+-+
| |1| |
+-+-+-+
|2| | |
+-+-+-+
| | |1|
+-+-+-+
1: point
2: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
3: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
We use his sibling for the next strategy
+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 18

+-+-+-+
|4| | |
+-+-+-+
| |2| |
+-+-+-+
|3| | |
+-+-+-+
| | |2|
+-+-+-+
|1| | |
+-+-+-+
1: Av+(Perm((0, 1)))
2: point
3: Av(Perm((0, 1, 2)), Perm((0, 2, 1)))
4: Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))

Label: 19

+-+-+
| |2|
+-+-+
|1| |
+-+-+
1: point
2: Av(Perm((0, 1)))

Label: 20

+-+-+
|2| |
+-+-+
| |1|
+-+-+
1: point
2: Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))
{"root": {"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 0, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {}, "out_tiling": {}, "relation": "", "identifier": 1, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[0, 0]": "point", "[1, 0]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "| Separting the leftmost point from cell Cell(i=0, j=0). | ", "identifier": 3, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 11, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "Isolated the point at Cell(i=1, j=0) in its row", "in_tiling": {"[0, 0]": "point", "[1, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))", "[1, 0]": "point"}, "relation": "| Separting the rightmost point from cell Cell(i=1, j=0). | Reverse of: Separting the leftmost point from cell Cell(i=0, j=0). | ", "identifier": 20, "children": [{"formal_step": "We perform cell insertion into cell (3, 1); either it is empty or Av+(Perm((0, 1))).", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))", "[2, 1]": "point", "[3, 1]": "Av(Perm((0, 1)))"}, "relation": "| Separating the bottommost point from cell Cell(i=0, j=0). | Isolating the point at Cell(i=0, j=0) in its column. | Reverse of: Isolating the point at Cell(i=3, j=1) in its row. | Reverse of: Separting the rightmost point from cell Cell(i=2, j=1). | Separting the leftmost point from cell Cell(i=2, j=1). | ", "identifier": 32, "children": [{"formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=0)]", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))", "[2, 1]": "point"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "| Isolating the point at Cell(i=2, j=1) in its row. | ", "identifier": 238, "children": [{"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 3, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 11, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[<A tiling of 1 points and 2 non-points>, <A tiling of 1 points and 0 non-points>]", "strategy_verified": false}, {"formal_step": "Isolated the point at Cell(i=4, j=1) in its row", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))", "[2, 1]": "point", "[3, 1]": "Av+(Perm((0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))", "[2, 1]": "point", "[3, 1]": "Av(Perm((0, 1)))", "[4, 1]": "point"}, "relation": "| Separting the rightmost point from cell Cell(i=3, j=1). | ", "identifier": 239, "children": [{"formal_step": "Reversibly delete the blocks at cells [Cell(i=2, j=0)]", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 1]": "point", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[2, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[4, 4]": "point", "[0, 5]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "| Isolating the point at Cell(i=2, j=1) in its row. | ", "identifier": 106, "children": [{"formal_step": "Verified because it is a one by one tiling with a subclass", "in_tiling": {"[0, 0]": "point"}, "out_tiling": {"[0, 0]": "point"}, "relation": "", "identifier": 11, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "We perform cell insertion into cell (1, 0); either it is empty or Av+(Perm((0, 1))).", "in_tiling": {"[1, 0]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[1, 0]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 208, "children": [{"formal_step": "recurse", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 238, "children": [], "recurse": "[]", "strategy_verified": false}, {"formal_step": "recurse", "in_tiling": {"[1, 0]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[1, 0]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[3, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 106, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[<A tiling of 2 points and 3 non-points>, <A tiling of 1 points and 0 non-points>]", "strategy_verified": false}, {"formal_step": "Reversibly delete the blocks at cells [Cell(i=1, j=0), Cell(i=4, j=1)]", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1)))", "[4, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))", "[2, 3]": "point", "[3, 3]": "Av(Perm((0, 1)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av(Perm((0, 1)))", "[4, 1]": "Av(Perm((0, 1)))", "[3, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[2, 4]": "point", "[0, 5]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "| Isolating the point at Cell(i=2, j=3) in its row. | Reverse of: Isolating the point at Cell(i=4, j=1) in its row. | Reverse of: Separting the rightmost point from cell Cell(i=3, j=1). | Separting the leftmost point from cell Cell(i=3, j=1). | Isolating the point at Cell(i=3, j=1) in its row. | ", "identifier": 109, "children": [{"formal_step": "We perform cell insertion into cell (0, 0); either it is empty or Av+(Perm((0, 1))).", "in_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 209, "children": [{"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[2, 0]": "point", "[0, 1]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 2]": "point", "[0, 3]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "| Reverse of: Isolating the point at Cell(i=1, j=1) in its row. | Reverse of: Separting the rightmost point from cell Cell(i=0, j=1). | ", "identifier": 188, "children": [], "recurse": "[]", "strategy_verified": true}, {"formal_step": "recurse", "in_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[0, 0]": "Av+(Perm((0, 1)))", "[2, 1]": "point", "[0, 2]": "Av(Perm((0, 1, 2)), Perm((0, 2, 1)))", "[1, 3]": "point", "[0, 4]": "Av(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 109, "children": [], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))"}, "out_tiling": {"[0, 0]": "point", "[1, 1]": "Av(Perm((0, 1)))"}, "relation": "", "identifier": 1017, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[<A tiling of 2 points and 3 non-points>, <A tiling of 1 points and 1 non-points>]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}, {"formal_step": "The tiling is a subset of the subclass", "in_tiling": {"[1, 0]": "point", "[0, 1]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "out_tiling": {"[1, 0]": "point", "[0, 1]": "Av+(Perm((0, 1, 2, 3)), Perm((0, 1, 3, 2)), Perm((0, 2, 1, 3)), Perm((0, 2, 3, 1)), Perm((0, 3, 1, 2)))"}, "relation": "", "identifier": 188, "children": [], "recurse": "[]", "strategy_verified": true}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}], "recurse": "[]", "strategy_verified": false}}
Time taken was 71.27665686607361 seconds

